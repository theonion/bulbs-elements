{"version":3,"sources":["webpack:///bulbs-datamap.js","webpack:///./elements/bulbs-datamap/bulbs-datamap.js","webpack:///./~/d3/build/d3.js","webpack:///./~/topojson/topojson.js-exposed","webpack:///./~/topojson/topojson.js","webpack:///./~/datamaps/dist/datamaps.usa.js-exposed","webpack:///./~/datamaps/dist/datamaps.usa.js","webpack:///./~/datamaps/~/d3/d3.js","webpack:///./~/datamaps/~/topojson/build/topojson.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","_register","BulbsDatamap","_BulbsHTMLElement","this","apply","arguments","createdCallback","innerHTML","mapContainer","firstChild","that","map","Datamap","element","scope","responsive","fills","defaultFill","geographyConfig","highlightOnHover","window","addEventListener","resizeMap","bind","d3","select","selectAll","on","stateObj","stateClicked","path","classed","event","CustomEvent","detail","dispatchEvent","resize","BulbsHTMLElement","registerElement","default","236","238","global","factory","ascending","a","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","f","d","pairs","array","pair","n","p","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","m","mean","sum","isNaN","deviation","v","Math","sqrt","extent","min","max","constant","identity","sequence","start","stop","step","ceil","range","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","sturges","LN2","histogram","data","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","push","_","thresholds","slice","value1","freedmanDiaconis","sort","scott","median","numbers","merge","arrays","merged","j","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","transpose","matrix","row","zip","identity$1","translateX","translateY","y","number$1","scale","center","offset","bandwidth","round","entering","__axis","axis","orient","context","tickValues","tickArguments","format","tickFormat","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","selection","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","text","insert","k","top","bottom","transition","epsilon","transform","getAttribute","parentNode","remove","tickSizeOuter","filter","each","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","hasOwnProperty","type","get","c","set","callback","noop","concat","namespace","prefix","namespaces","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","creator","none","selector","querySelector","selection_select","groups","_groups","subgroups","node","subnode","group","subgroup","__data__","Selection","_parents","empty$1","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","match","matcher$1","sparse","update","selection_enter","_enter","EnterNode","parent","datum","_next","_parent","constant$1","bindIndex","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","selection_data","size","enterGroup","updateGroup","exitGroup","previous","next","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","m1","merges","group0","group1","selection_order","nextSibling","insertBefore","selection_sort","compareNode","ascending$1","sortgroups","sortgroup","selection_call","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","contains","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","htmlConstant","htmlFunction","selection_html","raise","appendChild","selection_raise","lower","previousSibling","selection_lower","selection_append","constantNull","selection_insert","before","removeChild","selection_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","selection_clone","deep","selection_datum","property","filterContextListener","listener","index","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","parseTypenames$1","onRemove","typename","__on","o","removeEventListener","capture","onAdd","wrap","filterEvents","selection_on","customEvent","args","sourceEvent","params","createEvent","initEvent","bubbles","cancelable","dispatchConstant","dispatchFunction","selection_dispatch","root","local$1","Local","nextId","toString","source","current","point","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","touch","touches","identifier","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","constant$2","DragEvent","target","subject","id","active","dx","dy","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","touchending","gesture","beforestart","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","clearTimeout","s","sublisteners","listeners","p0","clickDistance","define","extend","definition","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","l","Hsl","hslConvert","hsl","hsl2rgb","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","basis$1","basisClosed","constant$3","linear","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","color$$1","array$1","nb","na","interpolateValue","date","Date","setTime","reinterpolate","object","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","q","join","interpolateRgb","valueOf","interpolateRound","decompose","e","scaleX","scaleY","skewX","rotate","degrees","atan","parseCss","identity$2","cssNode","cssRoot","cssView","parseSvg","svgNode","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","cosh","exp","sinh","tanh","interpolateZoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","epsilon2","rho","d1","b0","rho4","rho2","b1","r0","r1","coshr0","u","duration","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","quantize","interpolator","samples","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","interval","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","schedule","timing","schedules","__transition","create$1","emptyOn","tween","emptyTween","ease","state","CREATED","init","get$1","set$1","STARTING","SCHEDULED","STARTED","RUNNING","ENDED","ENDING","interrupt","schedule$$1","empty","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","interpolate","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value00","interpolate0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransformSvg","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","transition$$1","every","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","child","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransformCss","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","defaultTiming","selection_transition","root$1","constant$4","BrushEvent","nopropagation$1","noevent$1","defaultFilter","defaultExtent","width","height","__brush","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","XY","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","moving","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","e0","e1","signY","N","s0","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","shiftKey","selection1","selection0","input","starting","compareValue","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","forEach","max$1","tau$1","padAngle","di","dj","a0","a1","subindex","startAngle","endAngle","sortChords","constant$5","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","ribbon","buffer","argv","slice$2","sr","sa0","halfPi$1","sa1","sx0","sy0","tr","ta0","ta1","moveTo","arc","quadraticCurveTo","closePath","Map","map$1","nest","depth","createResult","setResult","sortValues","rollup","valuesByKey","result","entries","sortKey","sortKeys","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","convert","parseRows","token","eof","EOF","eol","EOL","I","charCodeAt","QUOTE","NEWLINE","RETURN","replace","DELIMITER","formatValue","formatRows","formatRow","reFormat","test","RegExp","center$1","force","sx","sy","constant$6","jiggle","tree_add","_x","_y","cover","tree","xm","ym","xp","yp","_root","leaf","y0","y1","addAll","yz","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","x2","y2","x3","y3","quads","tree_remove","retainer","removeAll","tree_root","tree_size","tree_visit","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","Quadtree","leaf_copy","vx","vy","collide","quad","rj","ri","yi","strength","ri2","iterations","visitAfter","prepare","radii","find","nodeById","nodeId","link","links","defaultStrength","alpha","distances","strengths","bias","initializeStrength","initializeDistance","distance","x$1","y$1","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","fx","velocityDecay","fy","initializeNodes","initialRadius","angle","initialAngle","initializeForce","closest","manyBody","accumulate","weight","w","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","theta","radial","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","exponent","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","re","fill","align","sign","symbol","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","padding","currency","percent","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","add$1","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","area","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","centroid","epsilon2$1","constant$7","compose","invert","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle","ring","clipBuffer","lines","rejoin","pointEqual","Intersection","other","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","polygonContains","polygon","winding","sum$1","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygonStarted","validSegment","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","from","to","clipCircle","visible","cr","c0","v00","point2","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","polar","meridian","q1","ax","ay","bx","by","clipRectangle","corner","comparePoint","ca","cb","activeStream","polygonInside","bufferStream","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","extent$1","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","length$1","object$1","containsGeometry","containsGeometryType","containsPoint","containsLine","ab","ao","ob","containsPolygon","ringRadians","pointRadians","containsObjectType","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","interpolate$1","cy0","cy1","sy1","kx0","ky0","kx1","ky1","identity$4","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","index$1","projection","pointRadius","contextStream","projectionStream","measure","boundsStream$1","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","resample","project","delta2","resample$1","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","preclip","clipAntimeridian","postclip","projectResample","transformRadians","clipAngle","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","tan","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","identity$5","transform$$1","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","shuffle$1","enclose","circles","slice$3","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","x21","y21","r21","r3","a2","a3","c3","place","da","db","dc","intersects","score","Node$1","packEnclose","aa","sj","sk","pack","siblings","optional","required","constantZero","constant$8","defaultRadius$1","index$2","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","keyPrefix$1","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","index$3","treemap","paddingStack","paddingInner","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","paddingOuter","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","area$1","centroid$1","cross$1","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","defaultSource$1","request","url","respond","status","xhr","hasResponse","response","mimeType","responseType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","has","setRequestHeader","overrideMimeType","fixCallback","responseText","type$1","defaultMimeType","dsv$1","responseOf","request$$1","ordinal","unknown","implicit","slice$5","band","rescale","range$$1","ordinalRange","rangeRound","pointish","point$1","constant$9","number$2","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","clamp","continuous","piecewise","unit","map$3","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","pow$1","sqrt$1","quantile$$1","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","pads","charAt","newParse","newDate","week","day$$1","parseSpecifier","Q","V","utcMonday","utcDay","getUTCFullYear","getUTCMonth","monday","day","getFullYear","getMonth","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","thursday","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","month","hour","minute","second","millisecond","utcTime","utcMonth","utcHour","utcMinute","rainbow$1","ts","rainbow","ramp","sequential","constant$10","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","dx0","dy0","dx1","dy1","abs$1","epsilon$3","tau$4","cos$2","sin$2","a01","a11","a10","da0","da1","ap","rp","padRadius","min$1","cornerRadius","rc0","rc1","oc","kc","lc","atan2$1","lineTo","Linear","curveLinear","x$3","y$3","defined0","curve","defined","x$$1","y$$1","area$2","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","Radial","_curve","curveRadial","lineRadial","lineRadial$1","curveRadialLinear","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","PI","linkSource","linkTarget","link$2","slice$6","curveHorizontal","bezierCurveTo","curveVertical","curveRadial$1","p2","p3","linkHorizontal","linkVertical","linkRadial","draw","circle$2","noop$2","point$2","Basis","basis$2","BasisClosed","basisClosed$1","BasisOpen","basisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none$1","series","none$2","stackValue","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","sum$2","descending$2","insideOut","tops","bottoms","constant$11","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","voronoi","polygons","triangles","constant$12","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","noevent$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","defaultConstrain","translateExtent","invertX","invertY","zoom","wheeled","dblclicked","scaleExtent","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","constrain","k1","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","version","ascendingBisect","bisectLeft","T","xlink","xml","xmlns","matcher","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","element$1","mouseenter","mouseleave","html","clone","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","SQRT2","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","performance","requestAnimationFrame","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","xy","nw","ne","se","sw","pi$1","pi$2","tau$2","epsilon$1","tauEpsilon","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","clear","proto","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","treeProto","","toFixed","toUpperCase","temp","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","_radius","_line","_point","lengthRing","_circle","cxcy","descendants","resquarify","_squarify","slice$4","defer","await","results","awaitAll","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","createRange","createContextualFragment","json","responseXML","csv$1","tsv$1","array$2","milliseconds","durationSecond$1","durationHour$1","durationDay$1","seconds","minutes","hours","tuesday","wednesday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","-","isoSpecifier","formatIso","parseIso","category10","category20b","category20c","category20","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","_t0","px","py","after","grandpa","uncle","sibling","_found","applyX","applyY","location","rescaleX","rescaleY","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","clientPoint","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","239","240","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","stitchArcs","topology","ends","flush","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","meshArcs","geomsByArc","geom","geometryType","geoms","mergeArcs","objects","register","polygonsByArc","exterior","cartesianRingArea","components","component","neighbors","sgn","featureOrCollection","properties","absolute","transformAbsolute","indexesByArc","ij","ik","presimplify","heap","relative","transformRelative","minAreaHeap","maxArea","cartesianTriangleArea","compareArea","up","down","removed","topojson","mesh","241","242","val","datumValue","optionsValue","optionsValues","fnContext","geography","addContainer","offsetWidth","offsetHeight","options","padding-bottom","setProjection","geo","projectionConfig","addStyleBlock","drawSubunits","fillData","colorCodeData","geoConfig","subunits","addLayer","geoData","hideAntarctica","fillColor","fillKey","borderWidth","borderColor","handleGeographyConfig","moveToFront","popupOnHover","$this","previousAttributes","stroke","stroke-width","fill-opacity","highlightFillColor","highlightBorderColor","highlightBorderWidth","highlightFillOpacity","updatePopup","addLegend","layer","label","legendTitle","defaultFillName","labels","addGraticule","handleArcs","defaultOptions","arcConfig","strokeColor","strokeWidth","originXY","latLngToXY","origin","latitude","longitude","destXY","destination","midXY","greatArc","sharpness","arcSharpness","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","animationSpeed","handleLabels","labelStartCoodinates","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","handleBubbles","datumHasCoords","latLng","centered","fillOpacity","exitDelay","prop","bubblesConfig","addPlugin","disableDefaultStyles","dataType","done","dataUrl","popupTemplate","animate","body","newsize","oldsize","tmpData","Datamaps","updateChoropleth","hoverover","pathAndProjection","customTopo","dataJson","worldTopo","usaTopo","usa","lat","lng","className","subunit","subunitData","pluginFn","createNewLayer","require","jQuery","fn","datamaps","datamap","243","d3_documentElement","d3_window","d3_ascending","d3_number","d3_numeric","d3_bisector","d3_transposeLength","d3_range_integerScale","d3_class","ctor","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","listenerByName","d3_eventPreventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","attrNullNS","ns","qualify","d3_collapse","d3_selection_classedRe","d3_selection_classes","d3_selection_classed","classedConstant","d3_selection_classedName","d3_selection_style","styleNull","d3_selection_property","propertyNull","d3_selection_creator","d3_nsXhtml","createNS","d3_selectionRemove","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","j0","d3_selection_on","$","d3_array","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","d3_mousePoint","d3_mouse_bug44083","scrollX","scrollY","margin","border","ctm","pageX","pageY","d3_behavior_dragTouchId","d3_sgn","d3_cross2d","d3_acos","π","d3_asin","halfπ","d3_sinh","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","d3_xhr","d3_xhrHasResponse","load","progress","beforesend","rebind","d3_xhr_fixCallback","d3_timer","then","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_format_precision","d3_formatPrefix","d3_locale_numberFormat","locale_decimal","locale_thousands","locale_grouping","locale_currency","d3_format_re","zfill","integer","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","lastIndexOf","d3_date_utc","d3_time_interval","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","d3_time_formatPads","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","d3_time_parseAmPm","d3_time_periodLookup","locale_days","locale_shortDays","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","d3_time_formatPad","d3_time","dayOfYear","sundayOfYear","mondayOfYear","d3_time_zone","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","zs","zh","zm","d3_time_percentRe","d3_adder","d3_adderSum","d3_geo_streamGeometry","d3_geo_streamGeometryType","d3_geo_streamLine","d3_geo_streamPolygon","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","d3_geo_cartesianNormalize","d3_geo_spherical","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","clipStartInside","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","d3_geo_clip","clipStart","ringListener","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","d3_geo_clipBufferListener","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","d3_geo_clipAntimeridianInterpolate","parallel","meridianNormal","polarAngle","τ","φarc","d3_geo_clipCircle","δλ","d3_geo_circleInterpolate","d3_geom_clipLine","d3_geo_clipExtent","comparePoints","insidePolygon","wn","bufferListener","d3_geo_clipExtentMAX","listener_","d3_geo_conic","d3_geo_projectionMutator","d3_geo_conicEqualArea","ρ","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","lineEndPolygon","d3_geo_pathBufferCircle","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","d3_geo_resample","resampleRecursive","d3_geo_transformPoint","δ2","φ2","λ2","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","d3_geo_clipAntimeridian","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","cosδφ","sinδφ","cosδγ","sinδγ","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x43","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","d3_geom_voronoiCreateBeach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","d3_geom_voronoiCell","d3_geom_voronoiCloseCells","iHalfEdge","halfEdges","nHalfEdges","d3_geom_voronoiCells","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","ε2","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","d3_geom_quadtreeVisit","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","below","d3_interpolateRgb","ar","ag","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","ah","ac","al","bh","bc","d3_interpolateHsl","as","d3_interpolateLab","ba","d3_interpolateRound","d3_transform","d3_transformNormalize","d3_transformDot","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","d3_layout_forceAccumulate","charges","charge","pointCharge","d3_layout_hierarchyRebind","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","d3_layout_packTransform","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","d3_layout_treeShift","d3_layout_treeAncestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","d3_scale_linear","Number","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","d3_svg_line","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","lp","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","d3_transition","d3_transitionPrototype","d3_transition_tween","d3_transition_text","d3_transitionNamespace","d3_transitionNode","cancelId","cancel","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","d3_json","d3_html","d3_document","selectNode","d3_arraySlice","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","d3_bisect","mapType","setter","keyMap","behavior","d3_requote_re","__proto__","d3_selectMatcher","Sizzle","matchesSelector","d3_nsPrefix","groupData","nodeData","updateNodes","enterNodes","exitNodes","upgroup","navigator","userAgent","mousedown","touchstart","dragstart","position1","dragId","position0","dragged","dragOffset","dragSubject","dragName","dragRestore","correspondingElement","τε","ρ2","ρ4","d3_behavior_zoomWheel","mousewheeled","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","touchmove","touchend","targets","changed","touchtime","distance0","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","d3_behavior_zoomInfinity","view1","d3_transitionInheritId","d3_hslPrototype","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","functor","typedResponse","delimiterCode","fieldSet","fields","d3_formatPrefixes","String","fromCharCode","getTime","d3_time_prototype","setDay","setUTCDay","setMilliseconds","setUTCMilliseconds","setMinutes","setSeconds","weeks","weekOfYear","numberFormat","d3_locale_enUS","d3_adderTemp","d3_geo_streamObjectType","d3_geo_areaSum","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","raw","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","projectStream","Δλ","sinΔλ","sinφ1","majorExtent","minorExtent","majorStep","minorStep","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","d3_geo_azimuthalEquidistant","d3_geo_gnomonic","d3_geo_orthographic","d3_geo_stereographic","vertices","upper","d3_geom_polygonPrototype","d3_geom_voronoiClipExtent","delaunay","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","in-out","out-in","d3_transformIdentity","layout","paths","relayout","resort","repulse","dw","dn","chargeDistance2","dragmove","resume","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","chargeDistance","dimension","candidates","revalue","d3_layout_pieSortByValue","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","o0","valuer","binner","frequency","root0","root1","wrapTree","node1","remaining","worst","stickify","rmax","rmin","stickies","sticky","padFunction","padConstant","µ","σ","d3_category10","d3_category20","d3_category20b","d3_category20c","circleSegment","d3_svg_arcAuto","t30","t12","t03","linear-closed","step-before","step-after","basis-open","basis-closed","cardinal-open","cardinal-closed","monotone","equals","diagonal","projection_","d3_svg_symbols","d3_svg_symbolTan30","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","styleString","inheritId","tickTransform","tickArguments_","tickFormat_","tickUpdate","tickSpacing","innerTickSize","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brushstart","background","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","dragging","keyup","brushmove","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","d3_time_formatUtc","d3_time_formatIso","iso","timezone","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","244","feature$1","ring$$"],"mappings":"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","file":"bulbs-datamap.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _register = __webpack_require__(1);\n\t\n\t__webpack_require__(236);\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\t/* global Datamap */\n\t__webpack_require__(238);\n\t__webpack_require__(239);\n\t__webpack_require__(241);\n\t\n\tvar BulbsDatamap = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsDatamap, _BulbsHTMLElement);\n\t\n\t  function BulbsDatamap() {\n\t    _classCallCheck(this, BulbsDatamap);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsDatamap.prototype.createdCallback = function createdCallback() {\n\t    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n\t    var mapContainer = this.firstChild;\n\t    var that = this;\n\t\n\t    this.map = new Datamap({\n\t      element: mapContainer,\n\t      scope: 'usa',\n\t      responsive: true,\n\t      fills: {\n\t        defaultFill: ''\n\t      },\n\t      geographyConfig: {\n\t        highlightOnHover: false\n\t      }\n\t    });\n\t\n\t    window.addEventListener('resize', this.resizeMap.bind(this));\n\t\n\t    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n\t      that.stateClicked(this, stateObj, mapContainer);\n\t    });\n\t  };\n\t\n\t  BulbsDatamap.prototype.stateClicked = function stateClicked(path, stateObj, mapContainer) {\n\t    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').classed('selected', false);\n\t    window.d3.select(path).classed('selected', true);\n\t\n\t    var event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n\t    mapContainer.dispatchEvent(event);\n\t  };\n\t\n\t  BulbsDatamap.prototype.resizeMap = function resizeMap() {\n\t    this.map.resize();\n\t  };\n\t\n\t  return BulbsDatamap;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-datamap', BulbsDatamap);\n\t\n\texports.default = BulbsDatamap;\n\n/***/ }),\n\n/***/ 236:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 238:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*** IMPORTS FROM imports-loader ***/\n\t(function() {\n\t\n\t// https://d3js.org Version 4.13.0. Copyright 2018 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.13.0\";\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tfunction bisector(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t}\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tfunction pairs(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t}\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tfunction cross(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t}\n\t\n\tfunction descending(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tfunction number(x) {\n\t  return x === null ? NaN : +x;\n\t}\n\t\n\tfunction variance(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t}\n\t\n\tfunction deviation(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t}\n\t\n\tfunction extent(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t}\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tfunction constant(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction identity(x) {\n\t  return x;\n\t}\n\t\n\tfunction sequence(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t}\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tfunction ticks(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t}\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tfunction sturges(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t}\n\t\n\tfunction histogram() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t}\n\t\n\tfunction threshold(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t}\n\t\n\tfunction freedmanDiaconis(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tfunction scott(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tfunction max(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t}\n\t\n\tfunction mean(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t}\n\t\n\tfunction median(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t}\n\t\n\tfunction merge(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t}\n\t\n\tfunction min(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t}\n\t\n\tfunction permute(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t}\n\t\n\tfunction scan(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t}\n\t\n\tfunction shuffle(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tfunction sum(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t}\n\t\n\tfunction transpose(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t}\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tfunction zip() {\n\t  return transpose(arguments);\n\t}\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tfunction identity$1(x) {\n\t  return x;\n\t}\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tfunction namespace(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t}\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction creator(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t}\n\t\n\tfunction none() {}\n\t\n\tfunction selector(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t}\n\t\n\tfunction selection_select(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tfunction selectorAll(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t}\n\t\n\tfunction selection_selectAll(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t}\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tfunction selection_filter(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tfunction sparse(update) {\n\t  return new Array(update.length);\n\t}\n\t\n\tfunction selection_enter() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tfunction constant$1(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction selection_data(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t}\n\t\n\tfunction selection_exit() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tfunction selection_merge(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t}\n\t\n\tfunction selection_order() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction selection_sort(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t}\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tfunction selection_call() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t}\n\t\n\tfunction selection_nodes() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t}\n\t\n\tfunction selection_node() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tfunction selection_size() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t}\n\t\n\tfunction selection_empty() {\n\t  return !this.node();\n\t}\n\t\n\tfunction selection_each(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tfunction selection_attr(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t}\n\t\n\tfunction defaultView(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t}\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tfunction selection_style(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t}\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tfunction selection_property(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t}\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tfunction selection_classed(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t}\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tfunction selection_text(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t}\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tfunction selection_html(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t}\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tfunction selection_raise() {\n\t  return this.each(raise);\n\t}\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tfunction selection_lower() {\n\t  return this.each(lower);\n\t}\n\t\n\tfunction selection_append(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t}\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tfunction selection_insert(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t}\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tfunction selection_remove() {\n\t  return this.each(remove);\n\t}\n\t\n\tfunction selection_cloneShallow() {\n\t  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n\t}\n\t\n\tfunction selection_cloneDeep() {\n\t  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n\t}\n\t\n\tfunction selection_clone(deep) {\n\t  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n\t}\n\t\n\tfunction selection_datum(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t}\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tfunction selection_on(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t}\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tfunction selection_dispatch(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t}\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  clone: selection_clone,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tfunction select(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t}\n\t\n\tfunction create(name) {\n\t  return select(creator(name).call(document.documentElement));\n\t}\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction sourceEvent() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t}\n\t\n\tfunction point(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t}\n\t\n\tfunction mouse(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t}\n\t\n\tfunction selectAll(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t}\n\t\n\tfunction touch(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tfunction touches(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t}\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tfunction noevent() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tfunction dragDisable(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t}\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tfunction constant$2(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tfunction drag() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t}\n\t\n\tfunction define(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t}\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tfunction basis$1(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tfunction basisClosed(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tfunction constant$3(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tfunction array$1(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(na),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tfunction date(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t}\n\t\n\tfunction object(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tfunction interpolateString(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t}\n\t\n\tfunction interpolateValue(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t}\n\t\n\tfunction interpolateRound(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t}\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tfunction decompose(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t}\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tfunction interpolateZoom(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t}\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tfunction quantize(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t}\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tfunction timeout$1(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction interval$1(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tfunction schedule(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create$1(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t}\n\t\n\tfunction init(node, id) {\n\t  var schedule = get$1(node, id);\n\t  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = get$1(node, id);\n\t  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n\t  return schedule;\n\t}\n\t\n\tfunction create$1(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tfunction interrupt(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t}\n\t\n\tfunction selection_interrupt(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t}\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction transition_tween(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t}\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tfunction interpolate(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t}\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction transition_attr(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t}\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction transition_attrTween(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t}\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tfunction transition_delay(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t}\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tfunction transition_duration(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t}\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tfunction transition_ease(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t}\n\t\n\tfunction transition_filter(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t}\n\t\n\tfunction transition_merge(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t}\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tfunction transition_on(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t}\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tfunction transition_remove() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t}\n\t\n\tfunction transition_select(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t}\n\t\n\tfunction transition_selectAll(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t}\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tfunction transition_selection() {\n\t  return new Selection$1(this._groups, this._parents);\n\t}\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction transition_style(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t}\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction transition_styleTween(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t}\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tfunction transition_text(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t}\n\t\n\tfunction transition_transition() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t}\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tfunction selection_transition(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t}\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tfunction active(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tfunction constant$4(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction BrushEvent(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tfunction noevent$1() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tfunction brush() {\n\t  return brush$1(XY);\n\t}\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tfunction chord() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tfunction constant$5(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction ribbon() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t}\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tfunction nest() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t}\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tfunction keys(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t}\n\t\n\tfunction values(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t}\n\t\n\tfunction entries(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t}\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tfunction dsv(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns || [];\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t}\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tfunction center$1(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction constant$6(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction jiggle() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t}\n\t\n\tfunction tree_add(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t}\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction tree_cover(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t}\n\t\n\tfunction tree_data() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t}\n\t\n\tfunction tree_extent(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t}\n\t\n\tfunction Quad(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t}\n\t\n\tfunction tree_find(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\tfunction tree_remove(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return next ? previous.next = next : delete previous.next, this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tfunction tree_root() {\n\t  return this._root;\n\t}\n\t\n\tfunction tree_size() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t}\n\t\n\tfunction tree_visit(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction tree_visitAfter(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction tree_x(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t}\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction tree_y(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t}\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tfunction collide(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tfunction link(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tfunction simulation(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t}\n\t\n\tfunction manyBody() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction radial(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction x$2(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction y$2(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tfunction formatDecimal(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t}\n\t\n\tfunction exponent$1(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t}\n\t\n\tfunction formatGroup(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t}\n\t\n\tfunction formatNumerals(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t}\n\t\n\tfunction formatDefault(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t}\n\t\n\tvar prefixExponent;\n\t\n\tfunction formatPrefixAuto(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t}\n\t\n\tfunction formatRounded(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t}\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction formatLocale(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t}\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tfunction precisionFixed(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t}\n\t\n\tfunction precisionPrefix(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t}\n\t\n\tfunction precisionRound(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t}\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tfunction adder() {\n\t  return new Adder;\n\t}\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tfunction geoStream(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t}\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tfunction area(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t}\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tfunction bounds(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t}\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroid(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t}\n\t\n\tfunction constant$7(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction compose(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t}\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tfunction rotation(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tfunction circle() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t}\n\t\n\tfunction clipBuffer() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t}\n\t\n\tfunction pointEqual(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t}\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t}\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tfunction polygonContains(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t}\n\t\n\tfunction clip(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t}\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tfunction clipCircle(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t}\n\t\n\tfunction clipLine(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tfunction extent$1() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t}\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tfunction length$1(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t}\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tfunction distance(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t}\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tfunction contains(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t}\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tfunction interpolate$1(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t}\n\t\n\tfunction identity$4(x) {\n\t  return x;\n\t}\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tfunction index$1(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t}\n\t\n\tfunction transform(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t}\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fit(projection, fitBounds, object) {\n\t  var clip = projection.clipExtent && projection.clipExtent();\n\t  projection.scale(150).translate([0, 0]);\n\t  if (clip != null) projection.clipExtent(null);\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t  fitBounds(boundsStream$1.result());\n\t  if (clip != null) projection.clipExtent(clip);\n\t  return projection;\n\t}\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  return fit(projection, function(b) {\n\t    var w = extent[1][0] - extent[0][0],\n\t        h = extent[1][1] - extent[0][1],\n\t        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tfunction fitWidth(projection, width, object) {\n\t  return fit(projection, function(b) {\n\t    var w = +width,\n\t        k = w / (b[1][0] - b[0][0]),\n\t        x = (w - k * (b[1][0] + b[0][0])) / 2,\n\t        y = -k * b[0][1];\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tfunction fitHeight(projection, height, object) {\n\t  return fit(projection, function(b) {\n\t    var h = +height,\n\t        k = h / (b[1][1] - b[0][1]),\n\t        x = -k * b[0][0],\n\t        y = (h - k * (b[1][1] + b[0][1])) / 2;\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tfunction resample(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t}\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  projection.fitWidth = function(width, object) {\n\t    return fitWidth(projection, width, object);\n\t  };\n\t\n\t  projection.fitHeight = function(height, object) {\n\t    return fitHeight(projection, height, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicEqualArea() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t}\n\t\n\tfunction albers() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t}\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tfunction albersUsa() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null, (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  albersUsa.fitWidth = function(width, object) {\n\t    return fitWidth(albersUsa, width, object);\n\t  };\n\t\n\t  albersUsa.fitHeight = function(height, object) {\n\t    return fitHeight(albersUsa, height, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t}\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tfunction azimuthalEqualArea() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tfunction azimuthalEquidistant() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tfunction mercator() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t}\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicConformal() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t}\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tfunction equirectangular() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t}\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicEquidistant() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t}\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tfunction gnomonic() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t}\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tfunction identity$5() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    },\n\t    fitWidth: function(width, object) {\n\t      return fitWidth(projection, width, object);\n\t    },\n\t    fitHeight: function(height, object) {\n\t      return fitHeight(projection, height, object);\n\t    }\n\t  };\n\t}\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tfunction naturalEarth1() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t}\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tfunction orthographic() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t}\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tfunction stereographic() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t}\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tfunction transverseMercator() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tfunction cluster() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t}\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tfunction node_count() {\n\t  return this.eachAfter(count);\n\t}\n\t\n\tfunction node_each(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t}\n\t\n\tfunction node_eachBefore(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction node_eachAfter(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction node_sum(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t}\n\t\n\tfunction node_sort(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t}\n\t\n\tfunction node_path(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t}\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tfunction node_ancestors() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tfunction node_descendants() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t}\n\t\n\tfunction node_leaves() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t}\n\t\n\tfunction node_links() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t}\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tfunction enclose(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t}\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tfunction siblings(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t}\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tfunction constant$8(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tfunction index$2() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t}\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tfunction roundNode(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t}\n\t\n\tfunction treemapDice(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t}\n\t\n\tfunction partition() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t}\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tfunction stratify() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t}\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tfunction tree() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t}\n\t\n\tfunction treemapSlice(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t}\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tfunction index$3() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t}\n\t\n\tfunction binary(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t}\n\t\n\tfunction sliceDice(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t}\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tfunction area$1(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tfunction centroid$1(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t}\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tfunction cross$1(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t}\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tfunction hull(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t}\n\t\n\tfunction contains$1(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t}\n\t\n\tfunction length$2(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t}\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tfunction defaultSource$1() {\n\t  return Math.random();\n\t}\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tfunction request(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t}\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tfunction type$1(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t}\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tfunction dsv$1(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t}\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tfunction constant$9(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction number$2(x) {\n\t  return +x;\n\t}\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction tickFormat(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t}\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction nice(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t}\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [], previous;\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n\t    while (previous < start && start < stop);\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"f\": formatMicroseconds,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"Q\": formatUnixTimestamp,\n\t    \"s\": formatUnixTimestampSeconds,\n\t    \"S\": formatSeconds,\n\t    \"u\": formatWeekdayNumberMonday,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"V\": formatWeekNumberISO,\n\t    \"w\": formatWeekdayNumberSunday,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"f\": formatUTCMicroseconds,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"Q\": formatUnixTimestamp,\n\t    \"s\": formatUnixTimestampSeconds,\n\t    \"S\": formatUTCSeconds,\n\t    \"u\": formatUTCWeekdayNumberMonday,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"V\": formatUTCWeekNumberISO,\n\t    \"w\": formatUTCWeekdayNumberSunday,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"f\": parseMicroseconds,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"Q\": parseUnixTimestamp,\n\t    \"s\": parseUnixTimestampSeconds,\n\t    \"S\": parseSeconds,\n\t    \"u\": parseWeekdayNumberMonday,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"V\": parseWeekNumberISO,\n\t    \"w\": parseWeekdayNumberSunday,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0),\n\t          week, day$$1;\n\t      if (i != string.length) return null;\n\t\n\t      // If a UNIX timestamp is specified, return it.\n\t      if (\"Q\" in d) return new Date(d.Q);\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"V\" in d) {\n\t        if (d.V < 1 || d.V > 53) return null;\n\t        if (!(\"w\" in d)) d.w = 1;\n\t        if (\"Z\" in d) {\n\t          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n\t          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n\t          week = utcDay.offset(week, (d.V - 1) * 7);\n\t          d.y = week.getUTCFullYear();\n\t          d.m = week.getUTCMonth();\n\t          d.d = week.getUTCDate() + (d.w + 6) % 7;\n\t        } else {\n\t          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n\t          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n\t          week = day.offset(week, (d.V - 1) * 7);\n\t          d.y = week.getFullYear();\n\t          d.m = week.getMonth();\n\t          d.d = week.getDate() + (d.w + 6) % 7;\n\t        }\n\t      } else if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n\t        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekdayNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.u = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberISO(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.V = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMicroseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 6));\n\t  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction parseUnixTimestamp(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseUnixTimestampSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMicroseconds(d, p) {\n\t  return formatMilliseconds(d, p) + \"000\";\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumberMonday(d) {\n\t  var day$$1 = d.getDay();\n\t  return day$$1 === 0 ? 7 : day$$1;\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberISO(d, p) {\n\t  var day$$1 = d.getDay();\n\t  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n\t  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumberSunday(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMicroseconds(d, p) {\n\t  return formatUTCMilliseconds(d, p) + \"000\";\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumberMonday(d) {\n\t  var dow = d.getUTCDay();\n\t  return dow === 0 ? 7 : dow;\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberISO(d, p) {\n\t  var day$$1 = d.getUTCDay();\n\t  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n\t  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumberSunday(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tfunction formatUnixTimestamp(d) {\n\t  return +d;\n\t}\n\t\n\tfunction formatUnixTimestampSeconds(d) {\n\t  return Math.floor(+d / 1000);\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = Math.max(tickStep(start, stop, interval), 1);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction time() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t}\n\t\n\tfunction utcTime() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t}\n\t\n\tfunction colors(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t}\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tfunction rainbow$1(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t}\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction constant$10(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tfunction arc() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n\t  };\n\t\n\t  return arc;\n\t}\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tfunction curveLinear(context) {\n\t  return new Linear(context);\n\t}\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tfunction line() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t}\n\t\n\tfunction area$2() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t}\n\t\n\tfunction descending$1(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tfunction identity$7(d) {\n\t  return d;\n\t}\n\t\n\tfunction pie() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t}\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tfunction lineRadial$1() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t}\n\t\n\tfunction areaRadial() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t}\n\t\n\tfunction pointRadial(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t}\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tfunction symbol() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tfunction basis$2(context) {\n\t  return new Basis(context);\n\t}\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tfunction basisClosed$1(context) {\n\t  return new BasisClosed(context);\n\t}\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tfunction basisOpen(context) {\n\t  return new BasisOpen(context);\n\t}\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tfunction linearClosed(context) {\n\t  return new LinearClosed(context);\n\t}\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tfunction natural(context) {\n\t  return new Natural(context);\n\t}\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tfunction step(context) {\n\t  return new Step(context, 0.5);\n\t}\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tfunction none$1(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t}\n\t\n\tfunction none$2(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t}\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tfunction stack() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t}\n\t\n\tfunction expand(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t}\n\t\n\tfunction diverging(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction silhouette(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t}\n\t\n\tfunction wiggle(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t}\n\t\n\tfunction ascending$2(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t}\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tfunction descending$2(series) {\n\t  return ascending$2(series).reverse();\n\t}\n\t\n\tfunction insideOut(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t}\n\t\n\tfunction reverse(series) {\n\t  return none$2(series).reverse();\n\t}\n\t\n\tfunction constant$11(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tfunction voronoi() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t}\n\t\n\tfunction constant$12(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tfunction noevent$2() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tfunction defaultConstrain(transform$$1, extent, translateExtent) {\n\t  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n\t      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n\t      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n\t      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n\t  return transform$$1.translate(\n\t    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t  );\n\t}\n\t\n\tfunction zoom() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      constrain = defaultConstrain,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      scaleExtent = [0, Infinity],\n\t      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments), translateExtent);\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e, translateExtent);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n\t  };\n\t\n\t  zoom.constrain = function(_) {\n\t    return arguments.length ? (constrain = _, zoom) : constrain;\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t}\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.create = create;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.clientPoint = point;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t\n\t}.call(window));\n\n/***/ }),\n\n/***/ 239:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"topojson\"] = __webpack_require__(240);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 240:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var topojson = {\n\t    version: \"1.6.9\",\n\t    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n\t    meshArcs: meshArcs,\n\t    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n\t    mergeArcs: mergeArcs,\n\t    feature: featureOrCollection,\n\t    neighbors: neighbors,\n\t    presimplify: presimplify\n\t  };\n\t\n\t  function stitchArcs(topology, arcs) {\n\t    var stitchedArcs = {},\n\t        fragmentByStart = {},\n\t        fragmentByEnd = {},\n\t        fragments = [],\n\t        emptyIndex = -1;\n\t\n\t    // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t    arcs.forEach(function(i, j) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t      }\n\t    });\n\t\n\t    arcs.forEach(function(i) {\n\t      var e = ends(i),\n\t          start = e[0],\n\t          end = e[1],\n\t          f, g;\n\t\n\t      if (f = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[f.end];\n\t        f.push(i);\n\t        f.end = end;\n\t        if (g = fragmentByStart[end]) {\n\t          delete fragmentByStart[g.start];\n\t          var fg = g === f ? f : f.concat(g);\n\t          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else if (f = fragmentByStart[end]) {\n\t        delete fragmentByStart[f.start];\n\t        f.unshift(i);\n\t        f.start = start;\n\t        if (g = fragmentByEnd[start]) {\n\t          delete fragmentByEnd[g.end];\n\t          var gf = g === f ? f : g.concat(f);\n\t          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else {\n\t        f = [i];\n\t        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t      }\n\t    });\n\t\n\t    function ends(i) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t      else p1 = arc[arc.length - 1];\n\t      return i < 0 ? [p1, p0] : [p0, p1];\n\t    }\n\t\n\t    function flush(fragmentByEnd, fragmentByStart) {\n\t      for (var k in fragmentByEnd) {\n\t        var f = fragmentByEnd[k];\n\t        delete fragmentByStart[f.start];\n\t        delete f.start;\n\t        delete f.end;\n\t        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t        fragments.push(f);\n\t      }\n\t    }\n\t\n\t    flush(fragmentByEnd, fragmentByStart);\n\t    flush(fragmentByStart, fragmentByEnd);\n\t    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t    return fragments;\n\t  }\n\t\n\t  function meshArcs(topology, o, filter) {\n\t    var arcs = [];\n\t\n\t    if (arguments.length > 1) {\n\t      var geomsByArc = [],\n\t          geom;\n\t\n\t      function arc(i) {\n\t        var j = i < 0 ? ~i : i;\n\t        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t      }\n\t\n\t      function line(arcs) {\n\t        arcs.forEach(arc);\n\t      }\n\t\n\t      function polygon(arcs) {\n\t        arcs.forEach(line);\n\t      }\n\t\n\t      function geometry(o) {\n\t        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t      }\n\t\n\t      var geometryType = {\n\t        LineString: line,\n\t        MultiLineString: polygon,\n\t        Polygon: polygon,\n\t        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t      };\n\t\n\t      geometry(o);\n\t\n\t      geomsByArc.forEach(arguments.length < 3\n\t          ? function(geoms) { arcs.push(geoms[0].i); }\n\t          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t    } else {\n\t      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t    }\n\t\n\t    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t  }\n\t\n\t  function mergeArcs(topology, objects) {\n\t    var polygonsByArc = {},\n\t        polygons = [],\n\t        components = [];\n\t\n\t    objects.forEach(function(o) {\n\t      if (o.type === \"Polygon\") register(o.arcs);\n\t      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t    });\n\t\n\t    function register(polygon) {\n\t      polygon.forEach(function(ring) {\n\t        ring.forEach(function(arc) {\n\t          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t        });\n\t      });\n\t      polygons.push(polygon);\n\t    }\n\t\n\t    function exterior(ring) {\n\t      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n\t    }\n\t\n\t    polygons.forEach(function(polygon) {\n\t      if (!polygon._) {\n\t        var component = [],\n\t            neighbors = [polygon];\n\t        polygon._ = 1;\n\t        components.push(component);\n\t        while (polygon = neighbors.pop()) {\n\t          component.push(polygon);\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t                if (!polygon._) {\n\t                  polygon._ = 1;\n\t                  neighbors.push(polygon);\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    polygons.forEach(function(polygon) {\n\t      delete polygon._;\n\t    });\n\t\n\t    return {\n\t      type: \"MultiPolygon\",\n\t      arcs: components.map(function(polygons) {\n\t        var arcs = [];\n\t\n\t        // Extract the exterior (unique) arcs.\n\t        polygons.forEach(function(polygon) {\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t                arcs.push(arc);\n\t              }\n\t            });\n\t          });\n\t        });\n\t\n\t        // Stitch the arcs into one or more rings.\n\t        arcs = stitchArcs(topology, arcs);\n\t\n\t        // If more than one ring is returned,\n\t        // at most one of these rings can be the exterior;\n\t        // this exterior ring has the same winding order\n\t        // as any exterior ring in the original polygons.\n\t        if ((n = arcs.length) > 1) {\n\t          var sgn = exterior(polygons[0][0]);\n\t          for (var i = 0, t; i < n; ++i) {\n\t            if (sgn === exterior(arcs[i])) {\n\t              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        return arcs;\n\t      })\n\t    };\n\t  }\n\t\n\t  function featureOrCollection(topology, o) {\n\t    return o.type === \"GeometryCollection\" ? {\n\t      type: \"FeatureCollection\",\n\t      features: o.geometries.map(function(o) { return feature(topology, o); })\n\t    } : feature(topology, o);\n\t  }\n\t\n\t  function feature(topology, o) {\n\t    var f = {\n\t      type: \"Feature\",\n\t      id: o.id,\n\t      properties: o.properties || {},\n\t      geometry: object(topology, o)\n\t    };\n\t    if (o.id == null) delete f.id;\n\t    return f;\n\t  }\n\t\n\t  function object(topology, o) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        arcs = topology.arcs;\n\t\n\t    function arc(i, points) {\n\t      if (points.length) points.pop();\n\t      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t        points.push(p = a[k].slice());\n\t        absolute(p, k);\n\t      }\n\t      if (i < 0) reverse(points, n);\n\t    }\n\t\n\t    function point(p) {\n\t      p = p.slice();\n\t      absolute(p, 0);\n\t      return p;\n\t    }\n\t\n\t    function line(arcs) {\n\t      var points = [];\n\t      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t      if (points.length < 2) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function ring(arcs) {\n\t      var points = line(arcs);\n\t      while (points.length < 4) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      return arcs.map(ring);\n\t    }\n\t\n\t    function geometry(o) {\n\t      var t = o.type;\n\t      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t          : null;\n\t    }\n\t\n\t    var geometryType = {\n\t      Point: function(o) { return point(o.coordinates); },\n\t      MultiPoint: function(o) { return o.coordinates.map(point); },\n\t      LineString: function(o) { return line(o.arcs); },\n\t      MultiLineString: function(o) { return o.arcs.map(line); },\n\t      Polygon: function(o) { return polygon(o.arcs); },\n\t      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t    };\n\t\n\t    return geometry(o);\n\t  }\n\t\n\t  function reverse(array, n) {\n\t    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t  }\n\t\n\t  function bisect(a, x) {\n\t    var lo = 0, hi = a.length;\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (a[mid] < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  function neighbors(objects) {\n\t    var indexesByArc = {}, // arc index -> array of object indexes\n\t        neighbors = objects.map(function() { return []; });\n\t\n\t    function line(arcs, i) {\n\t      arcs.forEach(function(a) {\n\t        if (a < 0) a = ~a;\n\t        var o = indexesByArc[a];\n\t        if (o) o.push(i);\n\t        else indexesByArc[a] = [i];\n\t      });\n\t    }\n\t\n\t    function polygon(arcs, i) {\n\t      arcs.forEach(function(arc) { line(arc, i); });\n\t    }\n\t\n\t    function geometry(o, i) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t    }\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t    };\n\t\n\t    objects.forEach(geometry);\n\t\n\t    for (var i in indexesByArc) {\n\t      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t        for (var k = j + 1; k < m; ++k) {\n\t          var ij = indexes[j], ik = indexes[k], n;\n\t          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t        }\n\t      }\n\t    }\n\t\n\t    return neighbors;\n\t  }\n\t\n\t  function presimplify(topology, triangleArea) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        relative = transformRelative(topology.transform),\n\t        heap = minAreaHeap(),\n\t        maxArea = 0,\n\t        triangle;\n\t\n\t    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      var triangles = [];\n\t\n\t      arc.forEach(absolute);\n\t\n\t      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n\t        triangle = arc.slice(i - 1, i + 2);\n\t        triangle[1][2] = triangleArea(triangle);\n\t        triangles.push(triangle);\n\t        heap.push(triangle);\n\t      }\n\t\n\t      // Always keep the arc endpoints!\n\t      arc[0][2] = arc[n][2] = Infinity;\n\t\n\t      for (var i = 0, n = triangles.length; i < n; ++i) {\n\t        triangle = triangles[i];\n\t        triangle.previous = triangles[i - 1];\n\t        triangle.next = triangles[i + 1];\n\t      }\n\t    });\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      arc.forEach(relative);\n\t    });\n\t\n\t    function update(triangle) {\n\t      heap.remove(triangle);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    return topology;\n\t  };\n\t\n\t  function cartesianRingArea(ring) {\n\t    var i = -1,\n\t        n = ring.length,\n\t        a,\n\t        b = ring[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = ring[i];\n\t      area += a[0] * b[1] - a[1] * b[0];\n\t    }\n\t\n\t    return area * .5;\n\t  }\n\t\n\t  function cartesianTriangleArea(triangle) {\n\t    var a = triangle[0], b = triangle[1], c = triangle[2];\n\t    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t  }\n\t\n\t  function compareArea(a, b) {\n\t    return a[1][2] - b[1][2];\n\t  }\n\t\n\t  function minAreaHeap() {\n\t    var heap = {},\n\t        array = [],\n\t        size = 0;\n\t\n\t    heap.push = function(object) {\n\t      up(array[object._ = size] = object, size++);\n\t      return size;\n\t    };\n\t\n\t    heap.pop = function() {\n\t      if (size <= 0) return;\n\t      var removed = array[0], object;\n\t      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t      return removed;\n\t    };\n\t\n\t    heap.remove = function(removed) {\n\t      var i = removed._, object;\n\t      if (array[i] !== removed) return; // invalid request\n\t      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t      return i;\n\t    };\n\t\n\t    function up(object, i) {\n\t      while (i > 0) {\n\t        var j = ((i + 1) >> 1) - 1,\n\t            parent = array[j];\n\t        if (compareArea(object, parent) >= 0) break;\n\t        array[parent._ = i] = parent;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    function down(object, i) {\n\t      while (true) {\n\t        var r = (i + 1) << 1,\n\t            l = r - 1,\n\t            j = i,\n\t            child = array[j];\n\t        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t        if (j === i) break;\n\t        array[child._ = i] = child;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    return heap;\n\t  }\n\t\n\t  function transformAbsolute(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      point[0] = (x0 += point[0]) * kx + dx;\n\t      point[1] = (y0 += point[1]) * ky + dy;\n\t    };\n\t  }\n\t\n\t  function transformRelative(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      var x1 = (point[0] - dx) / kx | 0,\n\t          y1 = (point[1] - dy) / ky | 0;\n\t      point[0] = x1 - x0;\n\t      point[1] = y1 - y0;\n\t      x0 = x1;\n\t      y0 = y1;\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (topojson), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n\t  else this.topojson = topojson;\n\t}();\n\n\n/***/ }),\n\n/***/ 241:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"Datamap\"] = __webpack_require__(242);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 242:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var svg;\n\t\n\t  //save off default references\n\t  var d3 = window.d3, topojson = window.topojson;\n\t  \n\t  var defaultOptions = {\n\t    scope: 'world',\n\t    responsive: false,\n\t    setProjection: setProjection,\n\t    projection: 'equirectangular',\n\t    dataType: 'json',\n\t    data: {},\n\t    done: function() {},\n\t    fills: {\n\t      defaultFill: '#ABDDA4'\n\t    },\n\t    geographyConfig: {\n\t        dataUrl: null,\n\t        hideAntarctica: true,\n\t        borderWidth: 1,\n\t        borderColor: '#FDFDFD',\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n\t        },\n\t        popupOnHover: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2\n\t    },\n\t    projectionConfig: {\n\t      rotation: [97, 0]\n\t    },\n\t    bubblesConfig: {\n\t        borderWidth: 2,\n\t        borderColor: '#FFFFFF',\n\t        popupOnHover: true,\n\t        radius: null,\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n\t        },\n\t        fillOpacity: 0.75,\n\t        animate: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2,\n\t        highlightFillOpacity: 0.85,\n\t        exitDelay: 100\n\t    },\n\t    arcConfig: {\n\t      strokeColor: '#DD1C77',\n\t      strokeWidth: 1,\n\t      arcSharpness: 1,\n\t      animationSpeed: 600\n\t    }\n\t  };\n\t\n\t  /*\n\t    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n\t  */\n\t  function val( datumValue, optionsValue, context ) {\n\t    if ( typeof context === 'undefined' ) {\n\t      context = optionsValue;\n\t      optionsValues = undefined;\n\t    }\n\t    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\t\n\t    if (typeof value === 'undefined') {\n\t      return  null;\n\t    }\n\t\n\t    if ( typeof value === 'function' ) {\n\t      var fnContext = [context];\n\t      if ( context.geography ) {\n\t        fnContext = [context.geography, context.data];\n\t      }\n\t      return value.apply(null, fnContext);\n\t    }\n\t    else {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  function addContainer( element, height, width ) {\n\t    this.svg = d3.select( element ).append('svg')\n\t      .attr('width', width || element.offsetWidth)\n\t      .attr('data-width', width || element.offsetWidth)\n\t      .attr('class', 'datamap')\n\t      .attr('height', height || element.offsetHeight)\n\t      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\t\n\t    if (this.options.responsive) {\n\t      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n\t      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n\t      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\t    \n\t    }\n\t\n\t    return this.svg;\n\t  }\n\t\n\t  // setProjection takes the svg element and options\n\t  function setProjection( element, options ) {\n\t    var width = options.width || element.offsetWidth;\n\t    var height = options.height || element.offsetHeight;\n\t    var projection, path;\n\t    var svg = this.svg;\n\t    \n\t    if ( options && typeof options.scope === 'undefined') {\n\t      options.scope = 'world';\n\t    }\n\t\n\t    if ( options.scope === 'usa' ) {\n\t      projection = d3.geo.albersUsa()\n\t        .scale(width)\n\t        .translate([width / 2, height / 2]);\n\t    }\n\t    else if ( options.scope === 'world' ) {\n\t      projection = d3.geo[options.projection]()\n\t        .scale((width + 1) / 2 / Math.PI)\n\t        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n\t    }\n\t\n\t    if ( options.projection === 'orthographic' ) {\n\t\n\t      svg.append(\"defs\").append(\"path\")\n\t        .datum({type: \"Sphere\"})\n\t        .attr(\"id\", \"sphere\")\n\t        .attr(\"d\", path);\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"stroke\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"fill\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n\t    }\n\t\n\t    path = d3.geo.path()\n\t      .projection( projection );\n\t\n\t    return {path: path, projection: projection};\n\t  }\n\t\n\t  function addStyleBlock() {\n\t    if ( d3.select('.datamaps-style-block').empty() ) {\n\t      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n\t      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n\t    }\n\t  }\n\t\n\t  function drawSubunits( data ) {\n\t    var fillData = this.options.fills,\n\t        colorCodeData = this.options.data || {},\n\t        geoConfig = this.options.geographyConfig;\n\t\n\t\n\t    var subunits = this.svg.select('g.datamaps-subunits');\n\t    if ( subunits.empty() ) {\n\t      subunits = this.addLayer('datamaps-subunits', null, true);\n\t    }\n\t\n\t    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n\t    if ( geoConfig.hideAntarctica ) {\n\t      geoData = geoData.filter(function(feature) {\n\t        return feature.id !== \"ATA\";\n\t      });\n\t    }\n\t\n\t    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\t\n\t    geo.enter()\n\t      .append('path')\n\t      .attr('d', this.path)\n\t      .attr('class', function(d) {\n\t        return 'datamaps-subunit ' + d.id;\n\t      })\n\t      .attr('data-info', function(d) {\n\t        return JSON.stringify( colorCodeData[d.id]);\n\t      })\n\t      .style('fill', function(d) {\n\t        //if fillKey - use that\n\t        //otherwise check 'fill'\n\t        //otherwise check 'defaultFill'\n\t        var fillColor;\n\t\n\t        var datum = colorCodeData[d.id];\n\t        if ( datum && datum.fillKey ) {\n\t          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n\t        }\n\t        \n\t        if ( typeof fillColor === 'undefined' ) {\n\t          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n\t        }\n\t\n\t        return fillColor;\n\t      })\n\t      .style('stroke-width', geoConfig.borderWidth)\n\t      .style('stroke', geoConfig.borderColor);\n\t  }\n\t\n\t  function handleGeographyConfig () {\n\t    var hoverover;\n\t    var svg = this.svg;\n\t    var self = this;\n\t    var options = this.options.geographyConfig;\n\t\n\t    if ( options.highlightOnHover || options.popupOnHover ) {\n\t      svg.selectAll('.datamaps-subunit')\n\t        .on('mouseover', function(d) {\n\t          var $this = d3.select(this);\n\t          var datum = self.options.data[d.id] || {};\n\t          if ( options.highlightOnHover ) {\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t\n\t            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n\t            if ( ! /((MSIE)|(Trident))/.test ) {\n\t             moveToFront.call(this);\n\t            }\n\t          }\n\t\n\t          if ( options.popupOnHover ) {\n\t            self.updatePopup($this, d, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function() {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t          $this.on('mousemove', null);\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        });\n\t    }\n\t    \n\t    function moveToFront() {\n\t      this.parentNode.appendChild(this);\n\t    }\n\t  }\n\t\n\t  //plugin to add a simple map legend\n\t  function addLegend(layer, data, options) {\n\t    data = data || {};\n\t    if ( !this.options.fills ) {\n\t      return;\n\t    }\n\t\n\t    var html = '<dl>';\n\t    var label = '';\n\t    if ( data.legendTitle ) {\n\t      html = '<h2>' + data.legendTitle + '</h2>' + html;\n\t    }\n\t    for ( var fillKey in this.options.fills ) {\n\t\n\t      if ( fillKey === 'defaultFill') {\n\t        if (! data.defaultFillName ) {\n\t          continue;\n\t        }\n\t        label = data.defaultFillName;\n\t      } else {\n\t        if (data.labels && data.labels[fillKey]) {\n\t          label = data.labels[fillKey];\n\t        } else {\n\t          label= fillKey + ': ';\n\t        }\n\t      }\n\t      html += '<dt>' + label + '</dt>';\n\t      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n\t    }\n\t    html += '</dl>';\n\t\n\t    var hoverover = d3.select( this.options.element ).append('div')\n\t      .attr('class', 'datamaps-legend')\n\t      .html(html);\n\t  }\n\t\n\t    function addGraticule ( layer, options ) {\n\t      var graticule = d3.geo.graticule();\n\t      this.svg.insert(\"path\", '.datamaps-subunits')\n\t        .datum(graticule)\n\t        .attr(\"class\", \"datamaps-graticule\")\n\t        .attr(\"d\", this.path); \n\t  }\n\t\n\t  function handleArcs (layer, data, options) {\n\t    var self = this,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - arcs must be an array\";\n\t    }\n\t\n\t    // For some reason arc options were put in an `options` object instead of the parent arc\n\t    // I don't like this, so to match bubbles and other plugins I'm moving it\n\t    // This is to keep backwards compatability\n\t    for ( var i = 0; i < data.length; i++ ) {\n\t      data[i] = defaults(data[i], data[i].options);\n\t      delete data[i].options;\n\t    }\n\t\n\t    if ( typeof options === \"undefined\" ) {\n\t      options = defaultOptions.arcConfig;\n\t    }\n\t\n\t    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\t\n\t    var path = d3.geo.path()\n\t        .projection(self.projection);\n\t\n\t    arcs\n\t      .enter()\n\t        .append('svg:path')\n\t        .attr('class', 'datamaps-arc')\n\t        .style('stroke-linecap', 'round')\n\t        .style('stroke', function(datum) {\n\t          return val(datum.strokeColor, options.strokeColor, datum);\n\t        })\n\t        .style('fill', 'none')\n\t        .style('stroke-width', function(datum) {\n\t            return val(datum.strokeWidth, options.strokeWidth, datum);\n\t        })\n\t        .attr('d', function(datum) {\n\t            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n\t            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n\t            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n\t            if (options.greatArc) {\n\t                  // TODO: Move this to inside `if` clause when setting attr `d`\n\t              var greatArc = d3.geo.greatArc()\n\t                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n\t                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\t\n\t              return path(greatArc(datum))\n\t            }\n\t            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n\t            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n\t        })\n\t        .transition()\n\t          .delay(100)\n\t          .style('fill', function(datum) {\n\t            /*\n\t              Thank you Jake Archibald, this is awesome.\n\t              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n\t            */\n\t            var length = this.getTotalLength();\n\t            this.style.transition = this.style.WebkitTransition = 'none';\n\t            this.style.strokeDasharray = length + ' ' + length;\n\t            this.style.strokeDashoffset = length;\n\t            this.getBoundingClientRect();\n\t            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n\t            this.style.strokeDashoffset = '0';\n\t            return 'none';\n\t          })\n\t\n\t    arcs.exit()\n\t      .transition()\n\t      .style('opacity', 0)\n\t      .remove();\n\t  }\n\t\n\t  function handleLabels ( layer, options ) {\n\t    var self = this;\n\t    options = options || {};\n\t    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n\t    this.svg.selectAll(\".datamaps-subunit\")\n\t      .attr(\"data-foo\", function(d) {\n\t        var center = self.path.centroid(d);\n\t        var xOffset = 7.5, yOffset = 5;\n\t\n\t        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n\t        if ( d.id === \"NY\" ) xOffset = -1;\n\t        if ( d.id === \"MI\" ) yOffset = 18;\n\t        if ( d.id === \"LA\" ) xOffset = 13;\n\t\n\t        var x,y;\n\t\n\t        x = center[0] - xOffset;\n\t        y = center[1] + yOffset;\n\t\n\t        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n\t        if ( smallStateIndex > -1) {\n\t          var yStart = labelStartCoodinates[1];\n\t          x = labelStartCoodinates[0];\n\t          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n\t          layer.append(\"line\")\n\t            .attr(\"x1\", x - 3)\n\t            .attr(\"y1\", y - 5)\n\t            .attr(\"x2\", center[0])\n\t            .attr(\"y2\", center[1])\n\t            .style(\"stroke\", options.labelColor || \"#000\")\n\t            .style(\"stroke-width\", options.lineWidth || 1)\n\t        }\n\t\n\t        layer.append(\"text\")\n\t          .attr(\"x\", x)\n\t          .attr(\"y\", y)\n\t          .style(\"font-size\", (options.fontSize || 10) + 'px')\n\t          .style(\"font-family\", options.fontFamily || \"Verdana\")\n\t          .style(\"fill\", options.labelColor || \"#000\")\n\t          .text( d.id );\n\t        return \"bar\";\n\t      });\n\t  }\n\t\n\t\n\t  function handleBubbles (layer, data, options ) {\n\t    var self = this,\n\t        fillData = this.options.fills,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - bubbles must be an array\";\n\t    }\n\t\n\t    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\t\n\t    bubbles\n\t      .enter()\n\t        .append('svg:circle')\n\t        .attr('class', 'datamaps-bubble')\n\t        .attr('cx', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[0];\n\t        })\n\t        .attr('cy', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[1];;\n\t        })\n\t        .attr('r', 0) //for animation purposes\n\t        .attr('data-info', function(d) {\n\t          return JSON.stringify(d);\n\t        })\n\t        .style('stroke', function ( datum ) {\n\t          return val(datum.borderColor, options.borderColor, datum);\n\t        })\n\t        .style('stroke-width', function ( datum ) {\n\t          return val(datum.borderWidth, options.borderWidth, datum);\n\t        })\n\t        .style('fill-opacity', function ( datum ) {\n\t          return val(datum.fillOpacity, options.fillOpacity, datum);\n\t        })\n\t        .style('fill', function ( datum ) {\n\t          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n\t          return fillColor || fillData.defaultFill;\n\t        })\n\t        .on('mouseover', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //save all previous attributes for mouseout\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t          }\n\t\n\t          if (options.popupOnHover) {\n\t            self.updatePopup($this, datum, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        })\n\t        .transition().duration(400)\n\t          .attr('r', function ( datum ) {\n\t            return val(datum.radius, options.radius, datum);\n\t          });\n\t\n\t    bubbles.exit()\n\t      .transition()\n\t        .delay(options.exitDelay)\n\t        .attr(\"r\", 0)\n\t        .remove();\n\t\n\t    function datumHasCoords (datum) {\n\t      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n\t    }\n\t\n\t  }\n\t\n\t  //stolen from underscore.js\n\t  function defaults(obj) {\n\t    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n\t      if (source) {\n\t        for (var prop in source) {\n\t          if (obj[prop] == null) obj[prop] = source[prop];\n\t        }\n\t      }\n\t    });\n\t    return obj;\n\t  }\n\t  /**************************************\n\t             Public Functions\n\t  ***************************************/\n\t\n\t  function Datamap( options ) {\n\t\n\t    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n\t      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n\t   }\n\t    //set options for global use\n\t    this.options = defaults(options, defaultOptions);\n\t    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n\t    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n\t    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n\t    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\t\n\t    //add the SVG container\n\t    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n\t      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n\t    }\n\t\n\t    /* Add core plugins to this instance */\n\t    this.addPlugin('bubbles', handleBubbles);\n\t    this.addPlugin('legend', addLegend);\n\t    this.addPlugin('arc', handleArcs);\n\t    this.addPlugin('labels', handleLabels);\n\t    this.addPlugin('graticule', addGraticule);\n\t\n\t    //append style block with basic hoverover styles\n\t    if ( ! this.options.disableDefaultStyles ) {\n\t      addStyleBlock();\n\t    }\n\t\n\t    return this.draw();\n\t  }\n\t\n\t  // resize map\n\t  Datamap.prototype.resize = function () {\n\t\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (options.responsive) {\n\t      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n\t          newsize = options.element.clientWidth,\n\t          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\t\n\t      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n\t    }\n\t  }\n\t\n\t  // actually draw the features(states & countries)\n\t  Datamap.prototype.draw = function() {\n\t    //save off in a closure\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    //set projections and paths based on scope\n\t    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\t\n\t    this.path = pathAndProjection.path;\n\t    this.projection = pathAndProjection.projection;\n\t\n\t    //if custom URL for topojson data, retrieve it and render\n\t    if ( options.geographyConfig.dataUrl ) {\n\t      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n\t        if ( error ) throw new Error(error);\n\t        self.customTopo = results;\n\t        draw( results );\n\t      });\n\t    }\n\t    else {\n\t      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n\t    }\n\t\n\t    return this;\n\t\n\t      function draw (data) {\n\t        // if fetching remote data, draw the map first then call `updateChoropleth`\n\t        if ( self.options.dataUrl ) {\n\t          //allow for csv or json data types\n\t          d3[self.options.dataType](self.options.dataUrl, function(data) {\n\t            //in the case of csv, transform data to object\n\t            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n\t              var tmpData = {};\n\t              for(var i = 0; i < data.length; i++) {\n\t                tmpData[data[i].id] = data[i];\n\t              } \n\t              data = tmpData;\n\t            }\n\t            Datamaps.prototype.updateChoropleth.call(self, data);\n\t          });\n\t        }\n\t        drawSubunits.call(self, data);\n\t        handleGeographyConfig.call(self);\n\t\n\t        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n\t          hoverover = d3.select( self.options.element ).append('div')\n\t            .attr('class', 'datamaps-hoverover')\n\t            .style('z-index', 10001)\n\t            .style('position', 'absolute');\n\t        }\n\t\n\t        //fire off finished callback\n\t        self.options.done(self);\n\t      }\n\t  };\n\t  /**************************************\n\t                TopoJSON\n\t  ***************************************/\n\t  Datamap.prototype.worldTopo = '__WORLD__';\n\t  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\t\n\t  /**************************************\n\t                Utilities\n\t  ***************************************/\n\t\n\t  //convert lat/lng coords to X / Y coords\n\t  Datamap.prototype.latLngToXY = function(lat, lng) {\n\t     return this.projection([lng, lat]);\n\t  };\n\t\n\t  //add <g> layer to root SVG\n\t  Datamap.prototype.addLayer = function( className, id, first ) {\n\t    var layer;\n\t    if ( first ) {\n\t      layer = this.svg.insert('g', ':first-child')\n\t    }\n\t    else {\n\t      layer = this.svg.append('g')\n\t    }\n\t    return layer.attr('id', id || '')\n\t      .attr('class', className || '');\n\t  };\n\t\n\t  Datamap.prototype.updateChoropleth = function(data) {\n\t    var svg = this.svg;\n\t    for ( var subunit in data ) {\n\t      if ( data.hasOwnProperty(subunit) ) {\n\t        var color;\n\t        var subunitData = data[subunit]\n\t        if ( ! subunit ) {\n\t          continue;\n\t        }\n\t        else if ( typeof subunitData === \"string\" ) {\n\t          color = subunitData;\n\t        }\n\t        else if ( typeof subunitData.color === \"string\" ) {\n\t          color = subunitData.color;\n\t        }\n\t        else {\n\t          color = this.options.fills[ subunitData.fillKey ];\n\t        }\n\t        //if it's an object, overriding the previous data\n\t        if ( subunitData === Object(subunitData) ) {\n\t          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n\t          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n\t        }\n\t        svg\n\t          .selectAll('.' + subunit)\n\t          .transition()\n\t            .style('fill', color);\n\t      }\n\t    }\n\t  };\n\t\n\t  Datamap.prototype.updatePopup = function (element, d, options) {\n\t    var self = this;\n\t    element.on('mousemove', null);\n\t    element.on('mousemove', function() {\n\t      var position = d3.mouse(self.options.element);\n\t      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n\t        .style('top', ( (position[1] + 30)) + \"px\")\n\t        .html(function() {\n\t          var data = JSON.parse(element.attr('data-info'));\n\t          //if ( !data ) return '';\n\t          return options.popupTemplate(d, data);\n\t        })\n\t        .style('left', ( position[0]) + \"px\");\n\t    });\n\t\n\t    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n\t  };\n\t\n\t  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n\t    var self = this;\n\t    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n\t      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n\t        var layer;\n\t        if ( typeof createNewLayer === \"undefined\" ) {\n\t          createNewLayer = false;\n\t        }\n\t\n\t        if ( typeof options === 'function' ) {\n\t          callback = options;\n\t          options = undefined;\n\t        }\n\t\n\t        options = defaults(options || {}, self.options[name + 'Config']);\n\t\n\t        //add a single layer, reuse the old layer\n\t        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n\t          layer = this.options[name + 'Layer'];\n\t          options = options || this.options[name + 'Options'];\n\t        }\n\t        else {\n\t          layer = this.addLayer(name);\n\t          this.options[name + 'Layer'] = layer;\n\t          this.options[name + 'Options'] = options;\n\t        }\n\t        pluginFn.apply(this, [layer, data, options]);\n\t        if ( callback ) {\n\t          callback(layer);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  // expose library\n\t  if ( true ) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) { d3 = __webpack_require__(243); topojson = __webpack_require__(244); return Datamap; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  else {\n\t    window.Datamap = window.Datamaps = Datamap;\n\t  }\n\t\n\t  if ( window.jQuery ) {\n\t    window.jQuery.fn.datamaps = function(options, callback) {\n\t      options = options || {};\n\t      options.element = this[0];\n\t      var datamap = new Datamap(options);\n\t      if ( typeof callback === \"function\" ) {\n\t        callback(datamap, options);\n\t      }\n\t      return this;\n\t    };\n\t  }\n\t})();\n\n\n/***/ }),\n\n/***/ 243:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }),\n\n/***/ 244:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction noop() {}\n\t\n\tfunction transformAbsolute(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    point[0] = (x0 += point[0]) * kx + dx;\n\t    point[1] = (y0 += point[1]) * ky + dy;\n\t  };\n\t}\n\t\n\tfunction transformRelative(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var x1 = Math.round((point[0] - dx) / kx),\n\t        y1 = Math.round((point[1] - dy) / ky);\n\t    point[0] = x1 - x0;\n\t    point[1] = y1 - y0;\n\t    x0 = x1;\n\t    y0 = y1;\n\t  };\n\t}\n\t\n\tfunction reverse(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t}\n\t\n\tfunction bisect(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t}\n\t\n\tfunction feature(topology, o) {\n\t  return o.type === \"GeometryCollection\" ? {\n\t    type: \"FeatureCollection\",\n\t    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n\t  } : feature$1(topology, o);\n\t}\n\t\n\tfunction feature$1(topology, o) {\n\t  var f = {\n\t    type: \"Feature\",\n\t    id: o.id,\n\t    properties: o.properties || {},\n\t    geometry: object(topology, o)\n\t  };\n\t  if (o.id == null) delete f.id;\n\t  return f;\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t      points.push(p = a[k].slice());\n\t      absolute(p, k);\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    p = p.slice();\n\t    absolute(p, 0);\n\t    return p;\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var t = o.type;\n\t    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t        : null;\n\t  }\n\t\n\t  var geometryType = {\n\t    Point: function(o) { return point(o.coordinates); },\n\t    MultiPoint: function(o) { return o.coordinates.map(point); },\n\t    LineString: function(o) { return line(o.arcs); },\n\t    MultiLineString: function(o) { return o.arcs.map(line); },\n\t    Polygon: function(o) { return polygon(o.arcs); },\n\t    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t  };\n\t\n\t  return geometry(o);\n\t}\n\t\n\tfunction stitchArcs(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t}\n\t\n\tfunction mesh(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t}\n\t\n\tfunction meshArcs(topology, o, filter) {\n\t  var arcs = [];\n\t\n\t  function arc(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function line(arcs) {\n\t    arcs.forEach(arc);\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    arcs.forEach(line);\n\t  }\n\t\n\t  function geometry(o) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t  }\n\t\n\t  if (arguments.length > 1) {\n\t    var geomsByArc = [],\n\t        geom;\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t    };\n\t\n\t    geometry(o);\n\t\n\t    geomsByArc.forEach(arguments.length < 3\n\t        ? function(geoms) { arcs.push(geoms[0].i); }\n\t        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t  } else {\n\t    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t  }\n\t\n\t  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t}\n\t\n\tfunction cartesianTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t}\n\t\n\tfunction ring(ring) {\n\t  var i = -1,\n\t      n = ring.length,\n\t      a,\n\t      b = ring[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = ring[i];\n\t    area += a[0] * b[1] - a[1] * b[0];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tfunction merge(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t}\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      components = [];\n\t\n\t  objects.forEach(function(o) {\n\t    if (o.type === \"Polygon\") register(o.arcs);\n\t    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t  });\n\t\n\t  function register(polygon) {\n\t    polygon.forEach(function(ring$$) {\n\t      ring$$.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring$$) {\n\t    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var component = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      components.push(component);\n\t      while (polygon = neighbors.pop()) {\n\t        component.push(polygon);\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: components.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitchArcs(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tfunction neighbors(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t}\n\t\n\tfunction compareArea(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tfunction minAreaHeap() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compareArea(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t}\n\t\n\tfunction presimplify(topology, triangleArea) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      relative = transformRelative(topology.transform),\n\t      heap = minAreaHeap();\n\t\n\t  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var triangles = [],\n\t        maxArea = 0,\n\t        triangle,\n\t        i,\n\t        n,\n\t        p;\n\t\n\t    // To store each point’s effective area, we create a new array rather than\n\t    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n\t    // stuck in smi mode). For midpoints, the initial effective area of\n\t    // Infinity will be computed in the next step.\n\t    for (i = 0, n = arc.length; i < n; ++i) {\n\t      p = arc[i];\n\t      absolute(arc[i] = [p[0], p[1], Infinity], i);\n\t    }\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = arc.slice(i - 1, i + 2);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    arc.forEach(relative);\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = triangleArea(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return topology;\n\t}\n\t\n\tvar version = \"1.6.27\";\n\t\n\texports.version = version;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.feature = feature;\n\texports.neighbors = neighbors;\n\texports.presimplify = presimplify;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// bulbs-datamap.js","/* global Datamap */\nrequire('!imports?this=>window!d3/build/d3.js');\nrequire('expose?topojson!topojson/topojson.js');\nrequire('expose?Datamap!datamaps/dist/datamaps.usa.js');\n\nimport {\n  registerElement,\n  BulbsHTMLElement,\n} from 'bulbs-elements/register';\nimport './bulbs-datamap.scss';\n\nclass BulbsDatamap extends BulbsHTMLElement {\n  createdCallback () {\n    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n    let mapContainer = this.firstChild;\n    let that = this;\n\n    this.map = new Datamap({\n      element: mapContainer,\n      scope: 'usa',\n      responsive: true,\n      fills: {\n        defaultFill: '',\n      },\n      geographyConfig: {\n        highlightOnHover: false,\n      },\n    });\n\n    window.addEventListener('resize', this.resizeMap.bind(this));\n\n    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n      that.stateClicked(this, stateObj, mapContainer);\n    });\n  }\n\n  stateClicked (path, stateObj, mapContainer) {\n    window.d3.select(mapContainer)\n      .selectAll('svg .datamaps-subunit')\n      .classed('selected', false);\n    window.d3.select(path).classed('selected', true);\n\n    let event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n    mapContainer.dispatchEvent(event);\n  }\n\n  resizeMap () {\n    this.map.resize();\n  }\n}\n\nregisterElement('bulbs-datamap', BulbsDatamap);\n\nexport default BulbsDatamap;\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-datamap/bulbs-datamap.js","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n// https://d3js.org Version 4.13.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.13.0\";\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction sequence(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction threshold(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nvar slice$1 = Array.prototype.slice;\n\nfunction identity$1(x) {\n  return x;\n}\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty$1() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant$1(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nfunction dragDisable(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant$2(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant$3(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array$1(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction reinterpolate(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction interpolateString(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction interpolateValue(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n}\n\nfunction interpolateRound(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction interpolateZoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create$1(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create$1(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction constant$4(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$1() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$2 = Array.prototype.slice;\n\nfunction constant$5(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nfunction center$1(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant$6(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent$1(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\nfunction formatDefault(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n}\n\nfunction constant$7(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nfunction circle() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent$1() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length$1(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate$1(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity$4(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index$1(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$5() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant$8(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index$2() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$3() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nfunction area$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross$1(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains$1(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nfunction defaultSource$1() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nfunction request(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nfunction type$1(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nfunction dsv$1(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction constant$9(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$2(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nfunction tickFormat(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nfunction utcTime() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nfunction colors(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nfunction rainbow$1(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction constant$10(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area$2() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity$7(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop$2() {}\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis$2(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed$1(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$2(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction ascending$2(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$2(series) {\n  return ascending$2(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$2(series).reverse();\n}\n\nfunction constant$11(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nfunction constant$12(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$2() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform$$1, extent, translateExtent) {\n  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform$$1.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.create = create;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n}.call(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/imports-loader?this=>window!./~/d3/build/d3.js\n// module id = 238\n// module chunks = 6","module.exports = global[\"topojson\"] = require(\"-!./topojson.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/expose-loader?topojson!./~/topojson/topojson.js-exposed\n// module id = 239\n// module chunks = 6","!function() {\n  var topojson = {\n    version: \"1.6.9\",\n    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n    meshArcs: meshArcs,\n    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n    mergeArcs: mergeArcs,\n    feature: featureOrCollection,\n    neighbors: neighbors,\n    presimplify: presimplify\n  };\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      function arc(i) {\n        var j = i < 0 ? ~i : i;\n        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n      }\n\n      function line(arcs) {\n        arcs.forEach(arc);\n      }\n\n      function polygon(arcs) {\n        arcs.forEach(line);\n      }\n\n      function geometry(o) {\n        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n      }\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring) {\n        ring.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function exterior(ring) {\n      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [];\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // this exterior ring has the same winding order\n        // as any exterior ring in the original polygons.\n        if ((n = arcs.length) > 1) {\n          var sgn = exterior(polygons[0][0]);\n          for (var i = 0, t; i < n; ++i) {\n            if (sgn === exterior(arcs[i])) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n              break;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function featureOrCollection(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature(topology, o); })\n    } : feature(topology, o);\n  }\n\n  function feature(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap(),\n        maxArea = 0,\n        triangle;\n\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [];\n\n      arc.forEach(absolute);\n\n      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      // Always keep the arc endpoints!\n      arc[0][2] = arc[n][2] = Infinity;\n\n      for (var i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n    });\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    topology.arcs.forEach(function(arc) {\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  };\n\n  function cartesianRingArea(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area * .5;\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = (point[0] - dx) / kx | 0,\n          y1 = (point[1] - dy) / ky | 0;\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function noop() {}\n\n  if (typeof define === \"function\" && define.amd) define(topojson);\n  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n  else this.topojson = topojson;\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/topojson.js\n// module id = 240\n// module chunks = 6","module.exports = global[\"Datamap\"] = require(\"-!./datamaps.usa.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/expose-loader?Datamap!./~/datamaps/dist/datamaps.usa.js-exposed\n// module id = 241\n// module chunks = 6","(function() {\n  var svg;\n\n  //save off default references\n  var d3 = window.d3, topojson = window.topojson;\n  \n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        borderWidth: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n    \n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n    \n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        //if fillKey - use that\n        //otherwise check 'fill'\n        //otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n        \n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n    \n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  //plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path); \n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n        layer.append(\"text\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .style(\"font-size\", (options.fontSize || 10) + 'px')\n          .style(\"font-family\", options.fontFamily || \"Verdana\")\n          .style(\"fill\", options.labelColor || \"#000\")\n          .text( d.id );\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[1];;\n        })\n        .attr('r', 0) //for animation purposes\n        .attr('data-info', function(d) {\n          return JSON.stringify(d);\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition().duration(400)\n          .attr('r', function ( datum ) {\n            return val(datum.radius, options.radius, datum);\n          });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n\n  }\n\n  //stolen from underscore.js\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    //set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    //add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    /* Add core plugins to this instance */\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    //append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n          newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    //save off in a closure\n    var self = this;\n    var options = self.options;\n\n    //set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    //if custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // if fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          //allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            //in the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              } \n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        //fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = '__WORLD__';\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  //convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  //add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data) {\n    var svg = this.svg;\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        //if it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          //if ( !data ) return '';\n          return options.popupTemplate(d, data);\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        //add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // expose library\n  if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", function(require) { d3 = require('d3'); topojson = require('topojson'); return Datamap; } );\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/dist/datamaps.usa.js\n// module id = 242\n// module chunks = 6","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/d3/d3.js\n// module id = 243\n// module chunks = 6 22","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/topojson/build/topojson.js\n// module id = 244\n// module chunks = 6 22"],"sourceRoot":""}