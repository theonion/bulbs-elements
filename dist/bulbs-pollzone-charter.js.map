{"version":3,"sources":["webpack:///bulbs-pollzone-charter.js","webpack:///./elements/bulbs-pollzone-charter/bulbs-pollzone-charter.js","webpack:///./~/d3/index-browserify.js","webpack:///./~/d3/d3.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_defaults","defaults","keys","getOwnPropertyNames","i","length","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","setPrototypeOf","_register","_d","d3","BulbsPollzoneCharter","_BulbsHTMLElement","this","apply","arguments","attachedCallback","selector","data","values","totalAnswers","calculatePercentages","initChart","_this","forEach","percent","Math","round","width","height","barHeight","x","scale","linear","domain","range","chart","select","append","attr","bar","selectAll","enter","d","question","index","text","answer","BulbsHTMLElement","registerElement","302","303","d3_number","isNaN","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","e","d3_Map","d3_Set","d3_rebind","target","source","method","d3_vendorSymbol","object","name","charAt","toUpperCase","substring","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","slice","indexOf","concat","remove","push","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","node","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","ascending","a","b","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_interrupt","lock","__transition__","active","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","_","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","top","left","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_sgn","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_Color","d3_hsl","h","d3_Hsl","d3_hsl_rgb","v","m1","m2","vv","d3_rgb","d3_hcl","d3_Hcl","d3_hcl_lab","d3_lab","cos","d3_radians","d3_Lab","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","d3_lab_hcl","atan2","d3_degrees","sqrt","NaN","d3_xyz_lab","pow","r","d3_rgbNumber","d3_rgbString","g","d3_Rgb","d3_rgb_hex","max","toString","min","d3_rgb_parse","format","rgb","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_hsl","d3_rgb_lab","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","responseText","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_formatPrefix","abs","symbol","d3_format_precision","p","ceil","log","LN10","d3_format_typeDefault","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_true","d3_geo_clipPolygon","segments","compare","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","shift","d3_geo_clipSegmentLength1","rotatedClipStart","invert","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","φ0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipAntimeridianLine","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","isLeft","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_compose","compose","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","join","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","precision","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","step","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullCCW","i1","i2","i3","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","L","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","before","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","U","d3_geom_voronoiRedBlackRotateLeft","tree","parent","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","Array","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","s0","s1","d3_interpolate_number","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","bs","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_treeSeparation","d3_layout_treeLeft","_tree","thread","d3_layout_treeRight","d3_layout_treeSearch","d3_layout_treeRightmost","d3_layout_treeLeftmost","d3_layout_treeDeepest","d3_layout_treeVisitAfter","visit","previousSibling","previousChild","d3_layout_treeShift","change","prelim","mod","d3_layout_treeMove","ancestor","number","d3_layout_treeAncestor","vim","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","floor","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","reverse","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_format_re","d3_scale_linearFormatPrecision","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","exponent","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_arcOffset","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","size","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNode","inherit","count","transition","ease","duration","timer","elapsed","tweened","tick","d3_svg_axisX","d3_svg_axisY","d3_date_utc","UTC","d3_time_interval","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","Z","d3_time_parse","localZ","setFullYear","W","getDay","setHours","d3_time_parsers","d3_time_formatRe","names","d3_time_formatLookup","d3_time_formatPad","fill","sign","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseWeekdayNumber","d3_time_numberRe","d3_time_parseWeekNumberSunday","d3_time_parseWeekNumberMonday","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseMilliseconds","d3_time_parseAmPm","d3_time_amPmLookup","d3_time_zone","getTimezoneOffset","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_percentRe","d3_time_formatUtc","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_time_scaleFormat","formats","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","document","documentElement","window","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","descending","sum","mean","median","bisector","lo","hi","mid","right","d3_bisector","bisectLeft","bisectRight","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","d3_map_prefix","d3_map_prefixCode","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","uniqueSort","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","parentNode","d3_nsPrefix","xhtml","xlink","xml","xmlns","prefix","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","removeChild","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","dataByKeyValue","keyValues","exit","datum","nextSibling","args","empty","upgroup","d3_transitionInheritId","d3_transitionId","d3_transitionInherit","interrupt","mouseenter","mouseleave","mouse","navigator","userAgent","touches","touch","identifier","drag","mousedown","touchstart","touchid","touchposition","dragstart","move","moved","eventId","origin_","dragged","event_","ended","dragRestore","eventTarget","origin","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","mousemove","mousewheelreset","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomstarted","zoomed","zoomended","mouseup","relocate","scale0","locations0","started","changed","touchtime","distance0","l0","l1","distance1","scale1","touchmove","touchend","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","__chart__","deltaY","deltaMode","wheelDelta","detail","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","I","EOF","eol","EOL","rows","isArray","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_format_decimalPoint","d3_format_thousandsSeparator","d3_format_grouping","d3_format_currencySymbol","d3_formatPrefixes","formatPrefix","specifier","align","zfill","comma","suffix","integer","d3_format_types","zcomma","negative","lastIndexOf","after","d3_format_group","String","fromCharCode","toPrecision","toExponential","toFixed","d3_format_groupingLength","geo","d3_adderTemp","valueOf","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","Y","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","hull","vertices","sp","plen","stack","poly","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","delaunay","quadtree","nx","ny","insertChild","nPoint","bottom","xs","ys","x1_","y1_","x2_","y2_","compat","root","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dn","theta","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","gravity","weight","dimension","neighbors","candidates","recurse","childs","revalue","partition","pie","d3_layout_pieSortByValue","arcs","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","firstWalk","firstChild","apportion","midpoint","separation","secondWalk","vip","vop","vom","sip","sop","sim","som","deep","nodeSize","pack","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","df","d3_svg_arcMax","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","innerTickSize","tickPadding","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time","d3_time_daySymbols","getDate","getUTCDate","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_formatDateTime","d3_time_formatDate","d3_time_formatTime","d3_time_days","d3_time_dayAbbreviations","d3_time_months","d3_time_monthAbbreviations","day","years","days","dayOfYear","week","sunday","weeks","weekOfYear","sundayOfYear","-","mondayOfYear","%","am","pm","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","months","d3_time_scaleLocalMethods","d3_time_scaleLocalFormats","d3_time_scaleLocalFormat","d3_time_scaleUTCMethods","d3_time_scaleUTCFormats","d3_time_scaleUTCFormat","json","responseXML"],"mappings":"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","file":"bulbs-pollzone-charter.js","sourcesContent":["webpackJsonp([21],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _register = __webpack_require__(1);\n\t\n\tvar _d = __webpack_require__(302);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\tvar BulbsPollzoneCharter = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsPollzoneCharter, _BulbsHTMLElement);\n\t\n\t  function BulbsPollzoneCharter() {\n\t    _classCallCheck(this, BulbsPollzoneCharter);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsPollzoneCharter.prototype.attachedCallback = function attachedCallback(selector, data) {\n\t    this.data = data.values;\n\t    this.totalAnswers = data.totalAnswers;\n\t    this.selector = selector;\n\t    this.calculatePercentages(data.values);\n\t    this.initChart();\n\t  };\n\t\n\t  BulbsPollzoneCharter.prototype.calculatePercentages = function calculatePercentages(values) {\n\t    var _this = this;\n\t\n\t    values.forEach(function (obj) {\n\t      obj.percent = Math.round(obj.value / _this.totalAnswers * 100);\n\t    });\n\t  };\n\t\n\t  BulbsPollzoneCharter.prototype.initChart = function initChart() {\n\t    var width = 500;\n\t    var height = 40 * this.data.length;\n\t    var barHeight = 40;\n\t\n\t    var x = d3.scale.linear().domain([0, 100]) // min/max values of the bar\n\t    .range([0, width - 40]); // in pixels, the range of bar lengths\n\t    // let y = d3.scale.ordinal()\n\t    //  .domain(percents) // number of bars\n\t    //  .rangeBands([0, height], .5, .5); // width of bars and spacing between them\n\t\n\t    var chart = d3.select(this.selector).append('svg').attr('class', 'chart').attr('width', width).attr('height', height);\n\t\n\t    var bar = chart.selectAll('g').data(this.data).enter().append('g').attr('transform', function (d, i) {\n\t      return 'translate(0,' + i * barHeight + ')';\n\t    });\n\t\n\t    bar.append('rect').attr('width', function (question) {\n\t      return x(question.percent);\n\t    }).attr('height', barHeight / 2).attr('class', function (question, index) {\n\t      return 'result' + (index + 1);\n\t    });\n\t\n\t    bar.append('text').attr('x', function (question) {\n\t      return x(question.percent) + 3;\n\t    }).attr('class', 'values').attr('y', barHeight / 2).text(function (question) {\n\t      return question.percent + '%';\n\t    });\n\t\n\t    bar.append('text').attr('x', 2).attr('class', 'answers').attr('dy', -4).text(function (question) {\n\t      return question.answer;\n\t    });\n\t  };\n\t\n\t  return BulbsPollzoneCharter;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-pollzone-charter', BulbsPollzoneCharter);\n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(303);\n\tmodule.exports = d3;\n\t(function () { delete this.d3; })(); // unset global\n\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, exports) {\n\n\td3 = function() {\n\t  var d3 = {\n\t    version: \"3.3.13\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = function(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  function d3_number(x) {\n\t    return x != null && !isNaN(x);\n\t  }\n\t  d3.mean = function(array, f) {\n\t    var n = array.length, a, m = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n\t    } else {\n\t      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n\t    }\n\t    return j ? m : undefined;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    if (arguments.length > 1) array = array.map(f);\n\t    array = array.filter(d3_number);\n\t    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n\t  };\n\t  d3.bisector = function(f) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t  var d3_bisector = d3.bisector(function(d) {\n\t    return d;\n\t  });\n\t  d3.bisectLeft = d3_bisector.left;\n\t  d3.bisect = d3.bisectRight = d3_bisector.right;\n\t  d3.shuffle = function(array) {\n\t    var m = array.length, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m], array[m] = array[i], array[i] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    try {\n\t      for (var key in properties) {\n\t        Object.defineProperty(ctor.prototype, key, {\n\t          value: properties[key],\n\t          enumerable: false\n\t        });\n\t      }\n\t    } catch (e) {\n\t      ctor.prototype = properties;\n\t    }\n\t  }\n\t  d3.map = function(object) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) object.forEach(function(key, value) {\n\t      map.set(key, value);\n\t    }); else for (var key in object) map.set(key, object[key]);\n\t    return map;\n\t  };\n\t  function d3_Map() {}\n\t  d3_class(d3_Map, {\n\t    has: function(key) {\n\t      return d3_map_prefix + key in this;\n\t    },\n\t    get: function(key) {\n\t      return this[d3_map_prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      return this[d3_map_prefix + key] = value;\n\t    },\n\t    remove: function(key) {\n\t      key = d3_map_prefix + key;\n\t      return key in this && delete this[key];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      this.forEach(function(key) {\n\t        keys.push(key);\n\t      });\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(key, value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      this.forEach(function(key, value) {\n\t        entries.push({\n\t          key: key,\n\t          value: value\n\t        });\n\t      });\n\t      return entries;\n\t    },\n\t    forEach: function(f) {\n\t      for (var key in this) {\n\t        if (key.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, key.substring(1), this[key]);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {}\n\t  d3_class(d3_Set, {\n\t    has: function(value) {\n\t      return d3_map_prefix + value in this;\n\t    },\n\t    add: function(value) {\n\t      this[d3_map_prefix + value] = true;\n\t      return value;\n\t    },\n\t    remove: function(value) {\n\t      value = d3_map_prefix + value;\n\t      return value in this && delete this[value];\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    forEach: function(f) {\n\t      for (var value in this) {\n\t        if (value.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, value.substring(1));\n\t        }\n\t      }\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.substring(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.substring(i + 1);\n\t      type = type.substring(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = function(s, n) {\n\t      return Sizzle.uniqueSort(Sizzle(s, n));\n\t    };\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.substring(0, i);\n\t        name = name.substring(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return name.trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(function() {\n\t      var parent = this.parentNode;\n\t      if (parent) parent.removeChild(this);\n\t    });\n\t  };\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          keyValue = key.call(node = group[i], node.__data__, i);\n\t          if (nodeByKeyValue.has(keyValue)) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues.push(keyValue);\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          keyValue = key.call(groupData, nodeData = groupData[i], i);\n\t          if (node = nodeByKeyValue.get(keyValue)) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          } else if (!dataByKeyValue.has(keyValue)) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t          dataByKeyValue.set(keyValue, nodeData);\n\t          nodeByKeyValue.remove(keyValue);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValues[i])) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3.ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    this.each(function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3_selectionPrototype.transition = function() {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function() {\n\t    return this.each(d3_selection_interrupt);\n\t  };\n\t  function d3_selection_interrupt() {\n\t    var lock = this.__transition__;\n\t    if (lock) ++lock.active;\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.substring(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        function off() {\n\t          w.on(click, null);\n\t        }\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function touchid() {\n\t      return d3.event.changedTouches[0].identifier;\n\t    }\n\t    function touchposition(parent, id) {\n\t      return d3.touches(parent).filter(function(p) {\n\t        return p.identifier === id;\n\t      })[0];\n\t    }\n\t    function dragstart(id, position, move, end) {\n\t      return function() {\n\t        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n\t        if (origin) {\n\t          offset = origin.apply(target, arguments);\n\t          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n\t        } else {\n\t          offset = [ 0, 0 ];\n\t        }\n\t        event_({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n\t          dragged |= dx | dy;\n\t          origin_ = p;\n\t          event_({\n\t            type: \"drag\",\n\t            x: p[0] + offset[0],\n\t            y: p[1] + offset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n\t          dragRestore(dragged && d3.event.target === eventTarget);\n\t          event_({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(event_);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(event_);\n\t            };\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(event_);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(event_);\n\t          zoomed(event_);\n\t          zoomended(event_);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(event) {\n\t      event({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(event) {\n\t      rescale();\n\t      event({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(event) {\n\t      event({\n\t        type: \"zoomend\"\n\t      });\n\t    }\n\t    function mousedowned() {\n\t      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      zoomstarted(event_);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(target), l);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === eventTarget);\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      started();\n\t      zoomstarted(event_);\n\t      function relocate() {\n\t        var touches = d3.touches(target);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0], l = locations0[p.identifier];\n\t            scaleTo(view.k * 2);\n\t            translateTo(p, l);\n\t            d3_eventPreventDefault();\n\t            zoomed(event_);\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(target), p0, l0, p1, l1;\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        w.on(touchmove, null).on(touchend, null);\n\t        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var event_ = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      zoomstarted(event_);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(event_);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      var point = center || d3.mouse(this);\n\t      if (!translate0) translate0 = location(point);\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(point, translate0);\n\t      zoomed(event_);\n\t    }\n\t    function mousewheelreset() {\n\t      translate0 = null;\n\t    }\n\t    function dblclicked() {\n\t      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n\t      zoomstarted(event_);\n\t      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n\t      translateTo(p, l);\n\t      zoomed(event_);\n\t      zoomended(event_);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  function d3_Color() {}\n\t  d3_Color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = function(h, s, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n\t  };\n\t  function d3_hsl(h, s, l) {\n\t    return new d3_Hsl(h, s, l);\n\t  }\n\t  function d3_Hsl(h, s, l) {\n\t    this.h = h;\n\t    this.s = s;\n\t    this.l = l;\n\t  }\n\t  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = function(h, c, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n\t  };\n\t  function d3_hcl(h, c, l) {\n\t    return new d3_Hcl(h, c, l);\n\t  }\n\t  function d3_Hcl(h, c, l) {\n\t    this.h = h;\n\t    this.c = c;\n\t    this.l = l;\n\t  }\n\t  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = function(l, a, b) {\n\t    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n\t  };\n\t  function d3_lab(l, a, b) {\n\t    return new d3_Lab(l, a, b);\n\t  }\n\t  function d3_Lab(l, a, b) {\n\t    this.l = l;\n\t    this.a = a;\n\t    this.b = b;\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = function(r, g, b) {\n\t    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n\t  };\n\t  function d3_rgbNumber(value) {\n\t    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  function d3_rgb(r, g, b) {\n\t    return new d3_Rgb(r, g, b);\n\t  }\n\t  function d3_Rgb(r, g, b) {\n\t    this.r = r;\n\t    this.g = g;\n\t    this.b = b;\n\t  }\n\t  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, name;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n\t    if (format != null && format.charAt(0) === \"#\") {\n\t      if (format.length === 4) {\n\t        r = format.charAt(1);\n\t        r += r;\n\t        g = format.charAt(2);\n\t        g += g;\n\t        b = format.charAt(3);\n\t        b += b;\n\t      } else if (format.length === 7) {\n\t        r = format.substring(1, 3);\n\t        g = format.substring(3, 5);\n\t        b = format.substring(5, 7);\n\t      }\n\t      r = parseInt(r, 16);\n\t      g = parseInt(g, 16);\n\t      b = parseInt(b, 16);\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.substring(j, I - k);\n\t        }\n\t        return text.substring(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && !(a = f(a, n++))) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  d3.format = function(specifier) {\n\t    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n\t    if (precision) precision = +precision.substring(1);\n\t    if (zfill || fill === \"0\" && align === \"=\") {\n\t      zfill = fill = \"0\";\n\t      align = \"=\";\n\t      if (comma) width -= Math.floor((width - 1) / 4);\n\t    }\n\t    switch (type) {\n\t     case \"n\":\n\t      comma = true;\n\t      type = \"g\";\n\t      break;\n\t\n\t     case \"%\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"f\";\n\t      break;\n\t\n\t     case \"p\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"r\";\n\t      break;\n\t\n\t     case \"b\":\n\t     case \"o\":\n\t     case \"x\":\n\t     case \"X\":\n\t      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\t\n\t     case \"c\":\n\t     case \"d\":\n\t      integer = true;\n\t      precision = 0;\n\t      break;\n\t\n\t     case \"s\":\n\t      scale = -1;\n\t      type = \"r\";\n\t      break;\n\t    }\n\t    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n\t    if (type == \"r\" && !precision) type = \"g\";\n\t    if (precision != null) {\n\t      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t    }\n\t    type = d3_format_types.get(type) || d3_format_typeDefault;\n\t    var zcomma = zfill && comma;\n\t    return function(value) {\n\t      if (integer && value % 1) return \"\";\n\t      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n\t      if (scale < 0) {\n\t        var prefix = d3.formatPrefix(value, precision);\n\t        value = prefix.scale(value);\n\t        suffix = prefix.symbol;\n\t      } else {\n\t        value *= scale;\n\t      }\n\t      value = type(value, precision);\n\t      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n\t      if (!zfill && comma) before = d3_format_group(before);\n\t      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t      if (zcomma) before = d3_format_group(padding + before);\n\t      negative += symbol;\n\t      value = before + after;\n\t      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n\t    };\n\t  };\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_format_group = d3_identity;\n\t  if (d3_format_grouping) {\n\t    var d3_format_groupingLength = d3_format_grouping.length;\n\t    d3_format_group = function(value) {\n\t      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n\t      while (i > 0 && g > 0) {\n\t        t.push(value.substring(i -= g, i + g));\n\t        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n\t      }\n\t      return t.reverse().join(d3_format_thousandsSeparator);\n\t    };\n\t  }\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t          listener.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          listener.polygonEnd();\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          listener.lineStart();\n\t          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t          listener.lineEnd();\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n\t        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function isLeft(a, b, c) {\n\t        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return projection.rotate([ 0, 0 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n\t      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n\t      vertices = []; i < n; ++i) {\n\t        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n\t      }\n\t      for (i = 1; i < n; ++i) {\n\t        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        if (i === h) continue;\n\t        y1 = vertices[i][1] - vertices[h][1];\n\t        x1 = vertices[i][0] - vertices[h][0];\n\t        points.push({\n\t          angle: Math.atan2(y1, x1),\n\t          index: i\n\t        });\n\t      }\n\t      points.sort(function(a, b) {\n\t        return a.angle - b.angle;\n\t      });\n\t      a = points[0].angle;\n\t      v = points[0].index;\n\t      u = 0;\n\t      for (i = 1; i < plen; ++i) {\n\t        j = points[i].index;\n\t        if (a == points[i].angle) {\n\t          x1 = vertices[v][0] - vertices[h][0];\n\t          y1 = vertices[v][1] - vertices[h][1];\n\t          x2 = vertices[j][0] - vertices[h][0];\n\t          y2 = vertices[j][1] - vertices[h][1];\n\t          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n\t            points[i].index = -1;\n\t            continue;\n\t          } else {\n\t            points[u].index = -1;\n\t          }\n\t        }\n\t        a = points[i].angle;\n\t        u = i;\n\t        v = j;\n\t      }\n\t      stack.push(h);\n\t      for (i = 0, j = 0; i < 2; ++j) {\n\t        if (points[j].index > -1) {\n\t          stack.push(points[j].index);\n\t          i++;\n\t        }\n\t      }\n\t      sp = stack.length;\n\t      for (;j < plen; ++j) {\n\t        if (points[j].index < 0) continue;\n\t        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n\t          --sp;\n\t        }\n\t        stack[sp++] = points[j].index;\n\t      }\n\t      var poly = [];\n\t      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n\t      return poly;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullCCW(i1, i2, i3, v) {\n\t    var t, a, b, c, d, e, f;\n\t    t = v[i1];\n\t    a = t[0];\n\t    b = t[1];\n\t    t = v[i2];\n\t    c = t[0];\n\t    d = t[1];\n\t    t = v[i3];\n\t    e = t[0];\n\t    f = t[1];\n\t    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = sx; else x2 = sx;\n\t        if (bottom) y1 = sy; else y2 = sy;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    b -= a = +a;\n\t    return function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n\t    a = a + \"\", b = b + \"\";\n\t    d3_interpolate_number.lastIndex = 0;\n\t    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n\t      if (m.index) s.push(b.substring(s0, s1 = m.index));\n\t      q.push({\n\t        i: s.length,\n\t        x: m[0]\n\t      });\n\t      s.push(null);\n\t      s0 = d3_interpolate_number.lastIndex;\n\t    }\n\t    if (s0 < b.length) s.push(b.substring(s0));\n\t    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n\t      o = q[i];\n\t      if (o.x == m[0]) {\n\t        if (o.i) {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i - 1] += o.x;\n\t            s.splice(o.i, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          } else {\n\t            s[o.i - 1] += o.x + s[o.i + 1];\n\t            s.splice(o.i, 2);\n\t            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n\t          }\n\t        } else {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i] = o.x;\n\t          } else {\n\t            s[o.i] = o.x + s[o.i + 1];\n\t            s.splice(o.i + 1, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          }\n\t        }\n\t        q.splice(i, 1);\n\t        n--;\n\t        i--;\n\t      } else {\n\t        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n\t      }\n\t    }\n\t    while (i < n) {\n\t      o = q.pop();\n\t      if (s[o.i + 1] == null) {\n\t        s[o.i] = o.x;\n\t      } else {\n\t        s[o.i] = o.x + s[o.i + 1];\n\t        s.splice(o.i + 1, 1);\n\t      }\n\t      n--;\n\t    }\n\t    if (s.length === 1) {\n\t      return s[0] == null ? (o = q[0].x, function(t) {\n\t        return o(t) + \"\";\n\t      }) : function() {\n\t        return b;\n\t      };\n\t    }\n\t    return function(t) {\n\t      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return (x - a) * b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) * b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n\t          if ((x2 - x1) * dn < theta) {\n\t            var k = quad.charge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t            return true;\n\t          }\n\t          if (quad.point && isFinite(dn)) {\n\t            var k = quad.pointCharge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return theta;\n\t      theta = +x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function recurse(node, depth, nodes) {\n\t      var childs = children.call(hierarchy, node, depth);\n\t      node.depth = depth;\n\t      nodes.push(node);\n\t      if (childs && (n = childs.length)) {\n\t        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n\t        while (++i < n) {\n\t          d = c[i] = recurse(childs[i], j, nodes);\n\t          d.parent = node;\n\t          v += d.value;\n\t        }\n\t        if (sort) c.sort(sort);\n\t        if (value) node.value = v;\n\t      } else {\n\t        delete node.children;\n\t        if (value) {\n\t          node.value = +value.call(hierarchy, node, depth) || 0;\n\t        }\n\t      }\n\t      return node;\n\t    }\n\t    function revalue(node, depth) {\n\t      var children = node.children, v = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, j = depth + 1;\n\t        while (++i < n) v += revalue(children[i], j);\n\t      } else if (value) {\n\t        v = +value.call(hierarchy, node, depth) || 0;\n\t      }\n\t      if (value) node.value = v;\n\t      return v;\n\t    }\n\t    function hierarchy(d) {\n\t      var nodes = [];\n\t      recurse(d, 0, nodes);\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      revalue(root, 0);\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\t    function pie(data) {\n\t      var values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      });\n\t      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n\t      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n\t      var index = d3.range(data.length);\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      var arcs = [];\n\t      index.forEach(function(i) {\n\t        var d;\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: d = values[i],\n\t          startAngle: a,\n\t          endAngle: a += d * k\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return pie;\n\t    };\n\t    pie.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(x) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = x;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(x) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = x;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var n = series.length, m = series[0].length, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n\t      function firstWalk(node, previousSibling) {\n\t        var children = node.children, layout = node._tree;\n\t        if (children && (n = children.length)) {\n\t          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n\t          while (++i < n) {\n\t            child = children[i];\n\t            firstWalk(child, previousChild);\n\t            ancestor = apportion(child, previousChild, ancestor);\n\t            previousChild = child;\n\t          }\n\t          d3_layout_treeShift(node);\n\t          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t            layout.mod = layout.prelim - midpoint;\n\t          } else {\n\t            layout.prelim = midpoint;\n\t          }\n\t        } else {\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t          }\n\t        }\n\t      }\n\t      function secondWalk(node, x) {\n\t        node.x = node._tree.prelim + x;\n\t        var children = node.children;\n\t        if (children && (n = children.length)) {\n\t          var i = -1, n;\n\t          x += node._tree.mod;\n\t          while (++i < n) {\n\t            secondWalk(children[i], x);\n\t          }\n\t        }\n\t      }\n\t      function apportion(node, previousSibling, ancestor) {\n\t        if (previousSibling) {\n\t          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n\t          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t            vom = d3_layout_treeLeft(vom);\n\t            vop = d3_layout_treeRight(vop);\n\t            vop._tree.ancestor = node;\n\t            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n\t            if (shift > 0) {\n\t              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n\t              sip += shift;\n\t              sop += shift;\n\t            }\n\t            sim += vim._tree.mod;\n\t            sip += vip._tree.mod;\n\t            som += vom._tree.mod;\n\t            sop += vop._tree.mod;\n\t          }\n\t          if (vim && !d3_layout_treeRight(vop)) {\n\t            vop._tree.thread = vim;\n\t            vop._tree.mod += sim - sop;\n\t          }\n\t          if (vip && !d3_layout_treeLeft(vom)) {\n\t            vom._tree.thread = vip;\n\t            vom._tree.mod += sip - som;\n\t            ancestor = node;\n\t          }\n\t        }\n\t        return ancestor;\n\t      }\n\t      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n\t        node._tree = {\n\t          ancestor: node,\n\t          prelim: 0,\n\t          mod: 0,\n\t          change: 0,\n\t          shift: 0,\n\t          number: previousSibling ? previousSibling._tree.number + 1 : 0\n\t        };\n\t      });\n\t      firstWalk(root);\n\t      secondWalk(root, -root._tree.prelim);\n\t      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x *= size[0];\n\t        node.y = node.depth * size[1];\n\t        delete node._tree;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = node.depth / y1 * size[1];\n\t        delete node._tree;\n\t      });\n\t      return nodes;\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? children[0] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeSearch(node, compare) {\n\t    var children = node.children;\n\t    if (children && (n = children.length)) {\n\t      var child, n, i = -1;\n\t      while (++i < n) {\n\t        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n\t          node = child;\n\t        }\n\t      }\n\t    }\n\t    return node;\n\t  }\n\t  function d3_layout_treeRightmost(a, b) {\n\t    return a.x - b.x;\n\t  }\n\t  function d3_layout_treeLeftmost(a, b) {\n\t    return b.x - a.x;\n\t  }\n\t  function d3_layout_treeDeepest(a, b) {\n\t    return a.depth - b.depth;\n\t  }\n\t  function d3_layout_treeVisitAfter(node, callback) {\n\t    function visit(node, previousSibling) {\n\t      var children = node.children;\n\t      if (children && (n = children.length)) {\n\t        var child, previousChild = null, i = -1, n;\n\t        while (++i < n) {\n\t          child = children[i];\n\t          visit(child, previousChild);\n\t          previousChild = child;\n\t        }\n\t      }\n\t      callback(node, previousSibling);\n\t    }\n\t    visit(node, null);\n\t  }\n\t  function d3_layout_treeShift(node) {\n\t    var shift = 0, change = 0, children = node.children, i = children.length, child;\n\t    while (--i >= 0) {\n\t      child = children[i]._tree;\n\t      child.prelim += shift;\n\t      child.mod += shift;\n\t      shift += child.shift + (change += child.change);\n\t    }\n\t  }\n\t  function d3_layout_treeMove(ancestor, node, shift) {\n\t    ancestor = ancestor._tree;\n\t    node = node._tree;\n\t    var change = shift / (node.number - ancestor.number);\n\t    ancestor.change += change;\n\t    node.change -= change;\n\t    node.shift += shift;\n\t    node.prelim += shift;\n\t    node.mod += shift;\n\t  }\n\t  function d3_layout_treeAncestor(vim, node, ancestor) {\n\t    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_treeVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_treeVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n\t      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n\t    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n\t      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n\t      range = steps(start + Math.round(error / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.filter(function(d) {\n\t        return !isNaN(d);\n\t      }).sort(d3.ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function arc() {\n\t      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n\t      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n\t      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] + d3_svg_arcOffset;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  function d3_transition(groups, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection) {\n\t    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node.__transition__[id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node.__transition__[id].tween.remove(name);\n\t    } : function(node) {\n\t      node.__transition__[id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node.__transition__[id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node.__transition__[id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node.__transition__[id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node.__transition__[id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      d3_transitionInheritId = id;\n\t      d3_selection_each(this, function(node, i, j) {\n\t        d3_transitionInherit = node.__transition__[id];\n\t        type.call(node, node.__data__, i, j);\n\t      });\n\t      d3_transitionInherit = inherit;\n\t      d3_transitionInheritId = inheritId;\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node.__transition__[id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = Object.create(node.__transition__[id0]);\n\t          transition.delay += transition.duration;\n\t          d3_transitionNode(node, i, id1, transition);\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id1);\n\t  };\n\t  function d3_transitionNode(node, i, id, inherit) {\n\t    var lock = node.__transition__ || (node.__transition__ = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        ease: inherit.ease,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration\n\t      };\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, d, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, d, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return stop();\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, d, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node.__transition__;\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n\t        switch (orient) {\n\t         case \"bottom\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", innerTickSize);\n\t            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"top\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", -innerTickSize);\n\t            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"left\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", -innerTickSize);\n\t            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n\t            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"right\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", innerTickSize);\n\t            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n\t            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t            break;\n\t          }\n\t        }\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1);\n\t        }\n\t        tickEnter.call(tickTransform, scale0);\n\t        tickUpdate.call(tickTransform, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(\" + x(d) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(0,\" + y(d) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n\t  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  d3_time_daySymbols.forEach(function(day, i) {\n\t    day = day.toLowerCase();\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  d3_time.format = d3_time_format;\n\t  function d3_time_format(template) {\n\t    var n = template.length;\n\t    function format(date) {\n\t      var string = [], i = -1, j = 0, c, p, f;\n\t      while (++i < n) {\n\t        if (template.charCodeAt(i) === 37) {\n\t          string.push(template.substring(j, i));\n\t          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t      string.push(template.substring(j, i));\n\t      return string.join(\"\");\n\t    }\n\t    format.parse = function(string) {\n\t      var d = {\n\t        y: 1900,\n\t        m: 0,\n\t        d: 1,\n\t        H: 0,\n\t        M: 0,\n\t        S: 0,\n\t        L: 0,\n\t        Z: null\n\t      }, i = d3_time_parse(d, template, string, 0);\n\t      if (i != string.length) return null;\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t        date.setFullYear(d.y, 0, 1);\n\t        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t      } else date.setFullYear(d.y, d.m, d.d);\n\t      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n\t      return localZ ? date._ : date;\n\t    };\n\t    format.toString = function() {\n\t      return template;\n\t    };\n\t    return format;\n\t  }\n\t  function d3_time_parse(date, template, string, j) {\n\t    var c, p, t, i = 0, n = template.length, m = string.length;\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = template.charCodeAt(i++);\n\t      if (c === 37) {\n\t        t = template.charAt(i++);\n\t        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t        if (!p || (j = p(date, string, j)) < 0) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  };\n\t  var d3_time_formats = {\n\t    a: function(d) {\n\t      return d3_time_dayAbbreviations[d.getDay()];\n\t    },\n\t    A: function(d) {\n\t      return d3_time_days[d.getDay()];\n\t    },\n\t    b: function(d) {\n\t      return d3_time_monthAbbreviations[d.getMonth()];\n\t    },\n\t    B: function(d) {\n\t      return d3_time_months[d.getMonth()];\n\t    },\n\t    c: d3_time_format(d3_time_formatDateTime),\n\t    d: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    e: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    H: function(d, p) {\n\t      return d3_time_formatPad(d.getHours(), p, 2);\n\t    },\n\t    I: function(d, p) {\n\t      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t    },\n\t    j: function(d, p) {\n\t      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t    },\n\t    L: function(d, p) {\n\t      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t    },\n\t    m: function(d, p) {\n\t      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t    },\n\t    M: function(d, p) {\n\t      return d3_time_formatPad(d.getMinutes(), p, 2);\n\t    },\n\t    p: function(d) {\n\t      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n\t    },\n\t    S: function(d, p) {\n\t      return d3_time_formatPad(d.getSeconds(), p, 2);\n\t    },\n\t    U: function(d, p) {\n\t      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t    },\n\t    w: function(d) {\n\t      return d.getDay();\n\t    },\n\t    W: function(d, p) {\n\t      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t    },\n\t    x: d3_time_format(d3_time_formatDate),\n\t    X: d3_time_format(d3_time_formatTime),\n\t    y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t    },\n\t    Y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t    },\n\t    Z: d3_time_zone,\n\t    \"%\": function() {\n\t      return \"%\";\n\t    }\n\t  };\n\t  var d3_time_parsers = {\n\t    a: d3_time_parseWeekdayAbbrev,\n\t    A: d3_time_parseWeekday,\n\t    b: d3_time_parseMonthAbbrev,\n\t    B: d3_time_parseMonth,\n\t    c: d3_time_parseLocaleFull,\n\t    d: d3_time_parseDay,\n\t    e: d3_time_parseDay,\n\t    H: d3_time_parseHour24,\n\t    I: d3_time_parseHour24,\n\t    j: d3_time_parseDayOfYear,\n\t    L: d3_time_parseMilliseconds,\n\t    m: d3_time_parseMonthNumber,\n\t    M: d3_time_parseMinutes,\n\t    p: d3_time_parseAmPm,\n\t    S: d3_time_parseSeconds,\n\t    U: d3_time_parseWeekNumberSunday,\n\t    w: d3_time_parseWeekdayNumber,\n\t    W: d3_time_parseWeekNumberMonday,\n\t    x: d3_time_parseLocaleDate,\n\t    X: d3_time_parseLocaleTime,\n\t    y: d3_time_parseYear,\n\t    Y: d3_time_parseFullYear,\n\t    Z: d3_time_parseZone,\n\t    \"%\": d3_time_parseLiteralPercent\n\t  };\n\t  function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t    d3_time_dayAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekday(date, string, i) {\n\t    d3_time_dayRe.lastIndex = 0;\n\t    var n = d3_time_dayRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonthAbbrev(date, string, i) {\n\t    d3_time_monthAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonth(date, string, i) {\n\t    d3_time_monthRe.lastIndex = 0;\n\t    var n = d3_time_monthRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseLocaleFull(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleDate(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleTime(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  var d3_time_numberRe = /^\\s*\\d+/;\n\t  function d3_time_parseAmPm(date, string, i) {\n\t    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n\t    return n == null ? -1 : (date.p = n, i);\n\t  }\n\t  var d3_time_amPmLookup = d3.map({\n\t    am: 0,\n\t    pm: 1\n\t  });\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  d3_time_format.utc = d3_time_formatUtc;\n\t  function d3_time_formatUtc(template) {\n\t    var local = d3_time_format(template);\n\t    function format(date) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date();\n\t        utc._ = date;\n\t        return local(utc);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    format.parse = function(string) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var date = local.parse(string);\n\t        return date && date._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t    format.toString = local.toString;\n\t    return format;\n\t  }\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  function d3_time_scaleFormat(formats) {\n\t    return function(date) {\n\t      var i = formats.length - 1, f = formats[i];\n\t      while (!f[1](date)) f = formats[--i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n\t    return d.getMonth();\n\t  } ], [ d3_time_format(\"%b %d\"), function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%a %d\"), function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%I %p\"), function(d) {\n\t    return d.getHours();\n\t  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n\t    return d.getMinutes();\n\t  } ], [ d3_time_format(\":%S\"), function(d) {\n\t    return d.getSeconds();\n\t  } ], [ d3_time_format(\".%L\"), function(d) {\n\t    return d.getMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n\t  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  return d3;\n\t}();\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// bulbs-pollzone-charter.js","import {\n  BulbsHTMLElement,\n  registerElement,\n} from 'bulbs-elements/register';\nimport * as d3 from 'd3';\n\nclass BulbsPollzoneCharter extends BulbsHTMLElement {\n  attachedCallback (selector, data) {\n    this.data = data.values;\n    this.totalAnswers = data.totalAnswers;\n    this.selector = selector;\n    this.calculatePercentages(data.values);\n    this.initChart();\n  }\n\n  calculatePercentages (values) {\n    let _this = this;\n\n    values.forEach(function (obj) {\n      obj.percent = Math.round(obj.value / _this.totalAnswers * 100);\n    });\n  }\n\n  initChart () {\n    let width = 500;\n    let height = 40 * this.data.length;\n    let barHeight = 40;\n\n    let x = d3.scale.linear()\n      .domain([0, 100]) // min/max values of the bar\n      .range([0, width - 40]); // in pixels, the range of bar lengths\n     // let y = d3.scale.ordinal()\n     //  .domain(percents) // number of bars\n     //  .rangeBands([0, height], .5, .5); // width of bars and spacing between them\n\n    let chart = d3.select(this.selector).append('svg')\n      .attr('class', 'chart')\n      .attr('width', width)\n      .attr('height', height);\n\n    let bar = chart.selectAll('g')\n      .data(this.data)\n      .enter().append('g')\n      .attr('transform', function (d, i) { return 'translate(0,' + i * barHeight + ')'; });\n\n    bar.append('rect')\n      .attr('width', function (question) {\n        return x(question.percent);\n      })\n      .attr('height', barHeight / 2)\n      .attr('class', function (question, index) {\n        return 'result' + (index + 1);\n      });\n\n    bar.append('text')\n      .attr('x', function (question) { return x(question.percent) + 3; })\n      .attr('class', 'values')\n      .attr('y', barHeight / 2)\n      .text(function (question) { return question.percent + '%'; });\n\n    bar.append('text')\n      .attr('x', 2)\n      .attr('class', 'answers')\n      .attr('dy', -4)\n      .text(function (question) { return question.answer; });\n  }\n}\n\nregisterElement('bulbs-pollzone-charter', BulbsPollzoneCharter);\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-pollzone-charter/bulbs-pollzone-charter.js","require(\"./d3\");\nmodule.exports = d3;\n(function () { delete this.d3; })(); // unset global\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/index-browserify.js\n// module id = 302\n// module chunks = 21 22","d3 = function() {\n  var d3 = {\n    version: \"3.3.13\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {}\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {}\n  d3_class(d3_Set, {\n    has: function(value) {\n      return d3_map_prefix + value in this;\n    },\n    add: function(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(value) {\n        values.push(value);\n      });\n      return values;\n    },\n    forEach: function(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, value.substring(1));\n        }\n      }\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return name.trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    this.each(function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_selectionPrototype.interrupt = function() {\n    return this.each(d3_selection_interrupt);\n  };\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function touchid() {\n      return d3.event.changedTouches[0].identifier;\n    }\n    function touchposition(parent, id) {\n      return d3.touches(parent).filter(function(p) {\n        return p.identifier === id;\n      })[0];\n    }\n    function dragstart(id, position, move, end) {\n      return function() {\n        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n        if (origin) {\n          offset = origin.apply(target, arguments);\n          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n        } else {\n          offset = [ 0, 0 ];\n        }\n        event_({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n          dragged |= dx | dy;\n          origin_ = p;\n          event_({\n            type: \"drag\",\n            x: p[0] + offset[0],\n            y: p[1] + offset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n          dragRestore(dragged && d3.event.target === eventTarget);\n          event_({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(event_);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(event_);\n            };\n          }).each(\"end.zoom\", function() {\n            zoomended(event_);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(event_);\n          zoomed(event_);\n          zoomended(event_);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(event) {\n      event({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(event) {\n      rescale();\n      event({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(event) {\n      event({\n        type: \"zoomend\"\n      });\n    }\n    function mousedowned() {\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      zoomstarted(event_);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(target), l);\n        zoomed(event_);\n      }\n      function ended() {\n        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === eventTarget);\n        zoomended(event_);\n      }\n    }\n    function touchstarted() {\n      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      started();\n      zoomstarted(event_);\n      function relocate() {\n        var touches = d3.touches(target);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(event_);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(target), p0, l0, p1, l1;\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(event_);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        w.on(touchmove, null).on(touchend, null);\n        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(event_);\n      }\n    }\n    function mousewheeled() {\n      var event_ = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      zoomstarted(event_);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(event_);\n      }, 50);\n      d3_eventPreventDefault();\n      var point = center || d3.mouse(this);\n      if (!translate0) translate0 = location(point);\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(point, translate0);\n      zoomed(event_);\n    }\n    function mousewheelreset() {\n      translate0 = null;\n    }\n    function dblclicked() {\n      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n      zoomstarted(event_);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(event_);\n      zoomended(event_);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  function d3_Color() {}\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n        return text.substring(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill || fill === \"0\" && align === \"=\") {\n      zfill = fill = \"0\";\n      align = \"=\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n\n     case \"b\":\n     case \"o\":\n     case \"x\":\n     case \"X\":\n      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\n     case \"c\":\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n    if (type == \"r\" && !precision) type = \"g\";\n    if (precision != null) {\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n    }\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    var zcomma = zfill && comma;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n      if (!zfill && comma) before = d3_format_group(before);\n      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n      if (zcomma) before = d3_format_group(padding + before);\n      negative += symbol;\n      value = before + after;\n      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_format_group = d3_identity;\n  if (d3_format_grouping) {\n    var d3_format_groupingLength = d3_format_grouping.length;\n    d3_format_group = function(value) {\n      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n      }\n      return t.reverse().join(d3_format_thousandsSeparator);\n    };\n  }\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n          listener.polygonStart();\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          listener.polygonEnd();\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          listener.lineStart();\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n          listener.lineEnd();\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function isLeft(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return projection.rotate([ 0, 0 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n      vertices = []; i < n; ++i) {\n        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n      }\n      for (i = 1; i < n; ++i) {\n        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n      }\n      for (i = 0; i < n; ++i) {\n        if (i === h) continue;\n        y1 = vertices[i][1] - vertices[h][1];\n        x1 = vertices[i][0] - vertices[h][0];\n        points.push({\n          angle: Math.atan2(y1, x1),\n          index: i\n        });\n      }\n      points.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      a = points[0].angle;\n      v = points[0].index;\n      u = 0;\n      for (i = 1; i < plen; ++i) {\n        j = points[i].index;\n        if (a == points[i].angle) {\n          x1 = vertices[v][0] - vertices[h][0];\n          y1 = vertices[v][1] - vertices[h][1];\n          x2 = vertices[j][0] - vertices[h][0];\n          y2 = vertices[j][1] - vertices[h][1];\n          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n            points[i].index = -1;\n            continue;\n          } else {\n            points[u].index = -1;\n          }\n        }\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n      stack.push(h);\n      for (i = 0, j = 0; i < 2; ++j) {\n        if (points[j].index > -1) {\n          stack.push(points[j].index);\n          i++;\n        }\n      }\n      sp = stack.length;\n      for (;j < plen; ++j) {\n        if (points[j].index < 0) continue;\n        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n          --sp;\n        }\n        stack[sp++] = points[j].index;\n      }\n      var poly = [];\n      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n      return poly;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function(t) {\n      return a + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    a = a + \"\", b = b + \"\";\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? (o = q[0].x, function(t) {\n        return o(t) + \"\";\n      }) : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = +x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function recurse(node, depth, nodes) {\n      var childs = children.call(hierarchy, node, depth);\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = c[i] = recurse(childs[i], j, nodes);\n          d.parent = node;\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else {\n        delete node.children;\n        if (value) {\n          node.value = +value.call(hierarchy, node, depth) || 0;\n        }\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, node, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x *= size[0];\n        node.y = node.depth * size[1];\n        delete node._tree;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", innerTickSize);\n            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n            break;\n          }\n\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", -innerTickSize);\n            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n            break;\n          }\n\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", -innerTickSize);\n            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n            break;\n          }\n\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", innerTickSize);\n            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n            break;\n          }\n        }\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1);\n        }\n        tickEnter.call(tickTransform, scale0);\n        tickUpdate.call(tickTransform, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  d3_time.format = d3_time_format;\n  function d3_time_format(template) {\n    var n = template.length;\n    function format(date) {\n      var string = [], i = -1, j = 0, c, p, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) === 37) {\n          string.push(template.substring(j, i));\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0,\n        Z: null\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n        date.setFullYear(d.y, 0, 1);\n        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n      } else date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n      return localZ ? date._ : date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  }\n  function d3_time_parse(date, template, string, j) {\n    var c, p, t, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c === 37) {\n        t = template.charAt(i++);\n        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  };\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3_time_format(d3_time_formatDateTime),\n    d: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    e: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    H: function(d, p) {\n      return d3_time_formatPad(d.getHours(), p, 2);\n    },\n    I: function(d, p) {\n      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n    },\n    j: function(d, p) {\n      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n    },\n    L: function(d, p) {\n      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n    },\n    m: function(d, p) {\n      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n    },\n    M: function(d, p) {\n      return d3_time_formatPad(d.getMinutes(), p, 2);\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d, p) {\n      return d3_time_formatPad(d.getSeconds(), p, 2);\n    },\n    U: function(d, p) {\n      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d, p) {\n      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n    },\n    x: d3_time_format(d3_time_formatDate),\n    X: d3_time_format(d3_time_formatTime),\n    y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n    },\n    Y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n    },\n    Z: d3_time_zone,\n    \"%\": function() {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    j: d3_time_parseDayOfYear,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    U: d3_time_parseWeekNumberSunday,\n    w: d3_time_parseWeekdayNumber,\n    W: d3_time_parseWeekNumberMonday,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear,\n    Z: d3_time_parseZone,\n    \"%\": d3_time_parseLiteralPercent\n  };\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  var d3_time_numberRe = /^\\s*\\d+/;\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  d3_time_format.utc = d3_time_formatUtc;\n  function d3_time_formatUtc(template) {\n    var local = d3_time_format(template);\n    function format(date) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date();\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    format.parse = function(string) {\n      try {\n        d3_date = d3_date_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  }\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3_time_format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3_time_format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3_time_format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3_time_format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3_time_format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  return d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 303\n// module chunks = 21 22"],"sourceRoot":""}