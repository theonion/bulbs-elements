{"version":3,"sources":["webpack:///bulbs-pollzone-map.js","webpack:///./elements/bulbs-pollzone-map/bulbs-pollzone-map.js","webpack:///./~/datamaps/~/d3/d3.js?ebe6","webpack:///./~/datamaps/~/topojson/build/topojson.js?ff1e","webpack:///./~/d3/index-browserify.js?d6d6","webpack:///./~/d3/d3.js?8d8f","webpack:///./~/datamaps/dist/datamaps.all.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_defaults","defaults","keys","getOwnPropertyNames","i","length","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","setPrototypeOf","_register","_d","d3","_datamaps","_datamaps2","BulbsPollzoneMap","_BulbsHTMLElement","this","apply","arguments","attachedCallback","map","querySelector","mapData","JSON","parse","getAttribute","mapElement","legendContainer","statesData","votes","questionsData","questions","setFills","initMap","fills","defaultFill","forEach","color","fillKey","showTooltip","bind","element","scope","data","geographyConfig","popupTemplate","responsive","colorLegend","select","window","on","options","id","resize","legendItems","querySelectorAll","style","backgroundColor","geo","stateResults","totalVotes","html","properties","name","numVotes","sort","q1","q2","question","percent","Math","round","join","BulbsHTMLElement","registerElement","242","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","add","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","243","global","factory","noop","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","mesh","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","objects","register","ring$$","polygonsByArc","components","component","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative","maxArea","302","303","d3_zipLength","__transition__","d3_Color","d3_Hsl","d3_Hcl","d3_Lab","d3_Rgb","d3_timer_active","isLeft","d3_geom_hullCCW","i2","i3","d3_interpolate_number","_tree","thread","d3_layout_treeSearch","d3_layout_treeRightmost","d3_layout_treeLeftmost","d3_layout_treeDeepest","d3_layout_treeVisitAfter","previousSibling","previousChild","prelim","mod","d3_svg_arcOffset","tweened","d3_time_amPmLookup","d3_time_scaleFormat","zips","d3_map_prefix","d3_map_prefixCode","uniqueSort","d3_selectionRoot","dataByKeyValue","touchid","touchposition","eventId","origin_","mousewheelreset","d3_format_decimalPoint","d3_format_thousandsSeparator","d3_format_grouping","d3_format_currencySymbol","d3_format_group","d3_format_groupingLength","sp","plen","recurse","firstChild","deep","df","d3_svg_arcMax","d3_time_daySymbols","d3_time_formatDateTime","d3_time_formatDate","d3_time_formatTime","d3_time_days","d3_time_dayAbbreviations","d3_time_months","d3_time_monthAbbreviations","pm","d3_time_scaleLocalFormats","d3_time_scaleUTCMethods","d3_time_scaleUTCFormats","d3_time_scaleUTCFormat","304","val","datumValue","optionsValue","optionsValues","fnContext","geography","addContainer","height","offsetWidth","offsetHeight","padding-bottom","setProjection","projectionConfig","addStyleBlock","drawSubunits","fillData","colorCodeData","geoConfig","subunits","addLayer","geoData","topojson","hideAntarctica","fillColor","borderWidth","borderColor","handleGeographyConfig","moveToFront","highlightOnHover","popupOnHover","$this","previousAttributes","stroke","stroke-width","fill-opacity","highlightFillColor","highlightBorderColor","highlightBorderWidth","highlightFillOpacity","updatePopup","addLegend","layer","label","legendTitle","defaultFillName","labels","addGraticule","handleArcs","defaultOptions","arcConfig","strokeColor","strokeWidth","originXY","latLngToXY","latitude","longitude","destXY","destination","midXY","sharpness","arcSharpness","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","animationSpeed","handleLabels","labelStartCoodinates","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","handleBubbles","datumHasCoords","bubbles","latLng","centered","fillOpacity","exitDelay","prop","Datamap","bubblesConfig","addPlugin","disableDefaultStyles","draw","dataType","done","dataUrl","animate","newsize","clientWidth","oldsize","tmpData","Datamaps","updateChoropleth","hoverover","pathAndProjection","results","customTopo","dataJson","worldTopo","world","usaTopo","usa","lat","lng","className","subunit","subunitData","pluginFn","createNewLayer","require","jQuery","fn","datamaps","datamap","305"],"mappings":"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,8CAGAtxD,KAAA,UACAlG,YACAC,KAAA,WAEAX,GAAA,MACAk4D,QACA,gBAGAtxD,KAAA,eACAlG,YACAC,KAAA,4BAEAX,GAAA,MACAk4D,QAEA,QAGA,QAGA,QAGA,QAGA,QAGA,sBAGA,QAGA,QAGA,SAGA,aAIAtxD,KAAA,UACAlG,YACAC,KAAA,cAEAX,GAAA,MACAk4D,QACA,0BAGAtxD,KAAA,UACAlG,YACAC,KAAA,aAEAX,GAAA,MACAk4D,OACA,uBAGAtxD,KAAA,UACAlG,YACAC,KAAA,WAEAX,GAAA,MACAk4D,OACA,uBAGAtxD,KAAA,eACAlG,YACAC,KAAA,WAEAX,GAAA,MACAk4D,QAEA,QAGA,SAIAtxD,KAAA,UACAlG,YACAC,KAAA,aAEAX,GAAA,MACAk4D,QACA,aAGAtxD,KAAA,UACAlG,YACAC,KAAA,SAEAX,GAAA,MACAk4D,OACA,kBAGAtxD,KAAA,UACAlG,YACAC,KAAA,gBAEAX,GAAA,MACAk4D,QACA,mCACA,QAGAtxD,KAAA,UACAlG,YACAC,KAAA,UAEAX,GAAA,MACAk4D,QACA,wCAGAtxD,KAAA,UACAlG,YACAC,KAAA,YAEAX,GAAA,MACAk4D,QACA,yBAKAA,QAEA,YACA,SACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,WAGA,YACA,OACA,QACA,QACA,OACA,QACA,MACA,OACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SAGA,YACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,QACA,OACA,SACA,OACA,OACA,UAGA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,UACA,QACA,SACA,UACA,QACA,SACA,QACA,UACA,WAGA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,UAGA,aACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,SACA,SACA,SAGA,aACA,QACA,QACA,WAGA,YACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,SACA,OACA,OACA,QACA,SAGA,aACA,OACA,QACA,QACA,QAGA,YACA,QACA,OACA,UAGA,YACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,YACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,OACA,UAGA,YACA,SACA,SACA,SACA,UACA,UACA,SACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SAGA,YACA,QACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,QACA,SACA,SACA,UAGA,aACA,QACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,OACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,SAGA,aACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,SAGA,YACA,QACA,SACA,SACA,QACA,QACA,UAGA,YACA,SAGA,YACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,UAGA,aACA,UAGA,aACA,QACA,QACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,WAGA,WACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,UAGA,WACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WAGA,WACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,WAGA,WACA,UACA,QACA,QACA,QACA,QACA,WAGA,WACA,QACA,OACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,UAGA,aaACA,SACA,OACA,SACA,UAGA,aACA,SACA,SACA,UACA,SAGA,aACA,SACA,QACA,UACA,SACA,SAGA,aACA,QACA,QACA,QACA,SAGA,YACA,MACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,UAGA,YACA,SACA,QACA,OACA,SACA,OACA,WAGA,aACA,OACA,UAGA,aACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,QACA,QACA,SACA,QACA,SACA,WAGA,YACA,OACA,SACA,QACA,OACA,QACA,QAGA,YACA,OACA,SACA,QACA,OACA,UAGA,aACA,QACA,SAGA,YACA,QACA,OACA,UAGA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UAGA,YACA,QACA,QACA,SACA,WAGA,aACA,UAGA,aACA,QACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,SAGA,YACA,UAGA,aACA,UAGA,aACA,OACA,SACA,QACA,QACA,SACA,OACA,SAGA,YACA,OACA,OACA,OACA,SAGA,YACA,QACA,OACA,WAGA,aACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,UACA,SACA,QACA,UAGA,aACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SAGA,aACA,QACA,QACA,SACA,QACA,UACA,UAGA,aACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,OACA,UAGA,aACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,UACA,SACA,QACA,SACA,OACA,MACA,WAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,UAGA,aACA,UACA,SACA,UAGA,aACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SAGA,aACA,QACA,UAGA,YACA,OACA,MACA,OACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,OACA,OACA,SACA,UAGA,aACA,UACA,OACA,OACA,QACA,UAGA,aACA,SACA,MACA,QACA,QACA,MACA,WAGA,YACA,QACA,QACA,UACA,SACA,SAGA,aACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,WAGA,YACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,UAGA,YACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,UAGA,aACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,MACA,MACA,OACA,QACA,QAGA,YACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,UAGA,aACA,MACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,QACA,UACA,UACA,SACA,WAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,UACA,OACA,QACA,UACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,QACA,MACA,UAGA,YACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QAGA,YACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,SAGA,YACA,OACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,OACA,QACA,QAGA,YACA,QACA,QACA,OACA,OACA,QACA,OACA,WAGA,YACA,SACA,OACA,OACA,QACA,OACA,QACA,OACA,UAGA,YACA,MACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,UACA,WAGA,aACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,UAGA,YACA,UACA,SACA,SACA,QACA,SACA,SACA,SAGA,YACA,QACA,QACA,SACA,QACA,WAGA,aACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,QAGA,YACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,MACA,UAGA,YACA,SAGA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,SACA,SACA,QACA,QACA,WAGA,YACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UAGA,aACA,QACA,SACA,UACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,UAGA,YACA,QACA,QACA,UACA,SACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WAGA,YACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,UAGA,aACA,UACA,QACA,OACA,MACA,QACA,QACA,UAGA,aACA,UACA,QACA,OACA,QACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,OACA,UAGA,aACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,WAGA,aACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,OACA,QACA,MACA,MACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,UACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,OACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aaACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,UACA,UACA,WAGA,aACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,QAGA,YACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,YACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,QACA,UACA,SAGA,aACA,UACA,QACA,QACA,OACA,UACA,UAGA,aACA,UACA,OACA,MACA,QACA,QACA,WAGA,aaACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UAGA,aACA,SACA,QACA,OACA,SACA,OACA,QACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,aACA,UACA,QACA,OACA,QACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,QACA,WAGA,aACA,QACA,SACA,QACA,SAGA,aACA,QACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,UACA,SACA,UACA,UACA,UAGA,aACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,UAGA,YACA,SAGA,YACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,SACA,UACA,UACA,UACA,QAGA,YACA,OACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,SAGA,YACA,MACA,QACA,OACA,MACA,QACA,QACA,OACA,OACA,QAGA,YACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,SAGA,YACA,SACA,UACA,QACA,UACA,UAGA,aACA,OACA,SACA,QACA,UAGA,aACA,SAGA,YACA,QACA,SACA,SACA,QACA,MACA,SAGA,YACA,OACA,QACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,UAGA,YACA,OACA,QAGA,YACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,SACA,WAGA,aACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,QAGA,aACA,SAGA,YACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,UAGA,YACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,OACA,QACA,OACA,QAGA,YACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,UAGA,aACA,UACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,OACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,MACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,SAGA,aACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,MACA,SAGA,YACA,MACA,SACA,MACA,OACA,QACA,OACA,SAGA,YACA,QACA,SACA,WAGA,aACA,QACA,QACA,QACA,OACA,SACA,SACA,UAGA,YACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,QACA,OACA,QAGA,YACA,MACA,OACA,QACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QAGA,YACA,QACA,UACA,QACA,OACA,SAGA,aACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,WAGA,aACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,UACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,WAGA,YACA,OACA,SACA,SACA,UAGA,YACA,QACA,SAGA,aACA,OACA,OACA,OACA,QACA,SAGA,YACA,OACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,WAGA,aACA,QACA,QACA,OACA,QACA,OACA,OACA,UAGA,YACA,QACA,SAGA,aACA,UACA,SACA,OACA,QACA,UAGA,aACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,UAGA,YACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SAGA,YACA,QACA,OACA,OACA,QACA,SAGA,aACA,WACA,WACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,UACA,WAGA,aACA,YAGA,YACA,OACA,QAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,SAGA,aACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,YAGA,YACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WAGA,YACA,SACA,QACA,UACA,QACA,QACA,OACA,MACA,OACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,OACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,UAGA,aACA,SACA,SACA,UAGA,YACA,QACA,SACA,OACA,QACA,OACA,UAGA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,UAGA,YACA,YAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,OACA,SACA,OACA,UAGA,YACA,SACA,SACA,QACA,SACA,SAGA,YACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,QACA,SACA,SACA,OACA,QACA,OACA,SACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,QACA,SACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,SACA,SAGA,aACA,WACA,SACA,UACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,OACA,OACA,OACA,SAGA,YACA,SAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,QACA,QACA,SACA,UAGA,YACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,UACA,WAGA,YACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SAGA,SACA,YACA,UACA,OACA,QACA,OACA,YAGA,SACA,UAGA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,UAGA,aACA,SACA,SACA,OACA,OACA,QACA,UAGA,YACA,OACA,QAGA,aACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,UACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,UACA,OACA,SACA,QACA,OACA,UAGA,YACA,OACA,SAGA,YACA,QACA,UAGA,aACA,OACA,UAGA,YACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,OACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,OACA,UACA,WAGA,aACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,UAGA,YACA,MACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,WAGA,aACA,SACA,UAGA,aACA,UACA,UACA,UACA,UAGA,YACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,OACA,SACA,OACA,OACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,SAGA,YACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,SAGA,YACA,QACA,SACA,MACA,MACA,QACA,QAGA,YACA,QACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,QACA,MACA,QACA,QACA,UAGA,YACA,SAGA,YACA,OACA,OACA,MACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,aACA,MACA,UAGA,YACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SAGA,aaACA,SACA,QACA,SACA,UAGA,YACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,SACA,MACA,SAGA,aACA,UACA,UACA,QACA,SACA,UAGA,aACA,OACA,QACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,QACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,WAGA,aACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,UAGA,aACA,QACA,QAGA,YACA,QACA,OACA,OACA,SACA,OACA,QACA,QACA,QAGA,YACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,SACA,MACA,SACA,UACA,QACA,QACA,QACA,SACA,OACA,OACA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,WAGA,aACA,UAGA,aACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,OACA,OACA,QAGA,YACA,QACA,MACA,OACA,QACA,OACA,OACA,OACA,UAGA,YACA,OACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,QAGA,YACA,SACA,UAGA,aACA,UACA,UACA,UACA,WAGA,aACA,QACA,WAGA,aACA,QACA,QAGA,aACA,SACA,QACA,QACA,SACA,UACA,UAGA,YACA,QACA,UAGA,aACA,UACA,UACA,MACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,UACA,SACA,OACA,QACA,OACA,SAGA,aACA,SACA,UACA,OACA,OACA,QACA,SACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,aACA,UACA,OACA,OACA,OACA,SACA,UAGA,aACA,UACA,SACA,OACA,OACA,UAGA,YACA,UACA,SACA,QACA,SACA,OACA,OACA,OACA,WAGA,YACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,UAGA,aACA,SACA,QACA,QACA,UACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,UAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,WAGA,aACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,UAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,OACA,SAGA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,OACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,OACA,UAGA,YACA,SACA,UACA,UACA,OACA,SACA,QACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,UAGA,YACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WAGA,aACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,QACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SAGA,aACA,QACA,WAGA,aACA,QACA,UACA,SACA,UAGA,aACA,UAGA,YACA,QACA,SACA,OACA,QACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,UAGA,aACA,UAGA,aACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,SACA,WAGA,YACA,QACA,MACA,OACA,OACA,OACA,QAGA,YACA,MACA,OACA,QAGA,YACA,SACA,OACA,QAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,SAGA,YACA,UACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UAGA,aACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,OACA,SAGA,YACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,UAGA,aACA,QAGA,YACA,OACA,SAGA,YACA,SACA,UACA,SACA,UACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,WACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,SACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,WAGA,aACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,WAGA,aACA,SACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,WAGA,aACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,SACA,WAGA,aACA,SACA,QACA,WACA,QAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,UAGA,YACA,QACA,SACA,SACA,UACA,QACA,SACA,QAGA,aACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,SACA,UAGA,YACA,MACA,QACA,QACA,OACA,OACA,SAGA,YACA,SAGA,YACA,MACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SAGA,aACA,QACA,SACA,SACA,QAGA,YACA,SACA,QACA,UAGA,aACA,SACA,QACA,SAGA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,UAGA,YACA,OACA,UAGA,YACA,SACA,SACA,OACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QAGA,YACA,QACA,SACA,UACA,UAGA,aACA,OACA,SACA,SACA,SACA,UAGA,YACA,OACA,OACA,QACA,UAGA,aACA,UACA,SACA,UAGA,YACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OACA,OACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,UAGA,YACA,UACA,OACA,UAGA,aACA,WACA,WACA,WAGA,aACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WAGA,YACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aACA,OACA,QACA,SACA,UAGA,aACA,SAGA,YACA,QACA,QACA,OACA,QACA,QACA,WAGA,aACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,OACA,SAGA,YACA,SACA,QACA,UAGA,aACA,MACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,SACA,UACA,SACA,UAGA,YACA,OACA,QACA,QACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UAGA,YACA,MACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,SAGA,aACA,OACA,QACA,QACA,SACA,QACA,QACA,QAGA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,UACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SAGA,YACA,MACA,SAGA,YACA,QACA,OACA,MACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,UACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,SACA,UACA,UAGA,YACA,QACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAGA,aACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,WAGA,aACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,UACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,QACA,SACA,SAGA,YACA,OACA,SACA,MACA,OACA,QACA,QACA,QACA,UAGA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,UAGA,aACA,SAGA,aACA,QACA,SAGA,aACA,OACA,QACA,QACA,UAGA,YACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SAGA,aACA,OACA,UAGA,YACA,SACA,MACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,OACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,WAGA,aACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,UACA,OACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,SACA,UAGA,YACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SAGA,YACA,OACA,SACA,QACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,UAGA,YACA,QACA,QACA,OACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,WAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SAGA,YACA,QACA,QACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,WAGA,YACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,UAGA,YACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,OACA,UACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,SACA,QACA,MACA,OACA,QAGA,aACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,QACA,UAGA,aACA,UACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,WAGA,aACA,UACA,QACA,SACA,QACA,QACA,SACA,WAGA,YACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,WAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,QACA,UAGA,YACA,QACA,UACA,UAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,SACA,UACA,SACA,UAGA,aACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,QAGA,YACA,UACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,UAGA,aACA,UACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WAGA,YACA,SACA,OACA,SACA,UACA,UACA,OACA,QACA,SAGA,YACA,SACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,QACA,WAGA,YACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SAGA,aACA,QACA,SACA,SACA,OACA,MACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SAGA,YACA,UACA,SACA,SACA,SACA,SACA,QAGA,aACA,SACA,SACA,QACA,UACA,SACA,SACA,QAGA,YACA,QACA,SACA,SACA,QACA,SACA,OACA,MACA,UAGA,YACA,UAGA,aACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,OACA,OACA,MACA,QACA,SACA,UAGA,aACA,QACA,SAGA,YACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,OACA,WAGA,YACA,SACA,UACA,OACA,UAGA,aACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,UAGA,YACA,WACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,UACA,QACA,WAGA,YACA,OACA,UAGA,SACA,SACA,UACA,QACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,WAGA,SACA,UAGA,SACA,YACA,SACA,QACA,YAGA,SACA,MACA,OACA,UACA,QACA,UACA,QACA,SAGA,aACA,SACA,QACA,MACA,QACA,OACA,SACA,UAGA,aACA,UACA,QACA,QACA,OACA,QACA,WAGA,aACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,YAGA,aaACA,UACA,UACA,SACA,UACA,QACA,WAGA,aaAGA,aACA,UACA,QACA,OACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,UACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,UAGA,YACA,UACA,SACA,SAGA,YACA,OACA,UAGA,YACA,SAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,aACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,SAGA,aACA,QAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,QACA,QACA,SACA,SACA,WAGA,YACA,SAGA,YACA,UAGA,aACA,UACA,QACA,UACA,SACA,WAGA,aACA,UAGA,aACA,SACA,QACA,QACA,QACA,SAGA,aACA,SAGA,YACA,SACA,QACA,QACA,SACA,SAGA,aACA,SACA,QACA,MACA,OACA,QACA,QACA,UAGA,aACA,SACA,SACA,OACA,MACA,SACA,WAGA,YACA,SACA,SACA,SACA,QACA,MACA,SACA,SACA,UAGA,aACA,QACA,SACA,QACA,OACA,SACA,WAGA,aACA,OACA,SACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,UACA,WAGA,YACA,MACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAGA,YACA,SACA,OACA,OACA,WAGA,YACA,UACA,UAGA,aACA,SACA,UAGA,YACA,QAGA,aACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,MACA,WAGA,aACA,OACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,QACA,SAGA,aACA,WAGA,aACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,SAGA,YACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SAGA,YACA,QACA,OACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,UAGA,YACA,OACA,QACA,OACA,MACA,SACA,UACA,UACA,WAGA,YACA,OACA,QACA,SACA,SACA,MACA,QACA,SAGA,YACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,UAGA,YACA,QACA,UACA,SACA,SACA,UACA,UACA,OACA,SAGA,aACA,UACA,UACA,SACA,OACA,QACA,QACA,UACA,UAGA,aACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,SAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,SACA,UAGA,YACA,SACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,QACA,UACA,SAGA,YACA,QACA,QACA,MACA,MACA,MACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,YACA,QACA,OACA,OACA,QACA,MACA,MACA,OACA,UAGA,YACA,QACA,OACA,MACA,MACA,OACA,UAGA,YACA,SACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,QACA,QACA,SAGA,YACA,UACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGA,YACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,MACA,SAGA,aACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,MACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,QACA,OACA,QACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,SACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UAGA,aACA,QACA,OACA,OACA,WAGA,YACA,SACA,OACA,QACA,OACA,OACA,WAGA,aACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,SAGA,YACA,OACA,SACA,MACA,UAGA,aACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,UAGA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,OACA;AAGAv1B,WACArrB,OAAA,yCACAwb,YAAA,kBAIA8+C,EAAAp2E,UAAA03E,SAA+BtsE,KAAA,WAAA+7B,WAA+BrrB,OAAA,wCAAAwb,YAAA,uBAAuFk0C,SAAYmM,KAAOvsE,KAAA,qBAAA4mD,aAA2C5mD,KAAA,UAAA5G,GAAA,KAAAk4D,OAAA,YAAAx3D,YAA8DC,KAAA,aAAoBiG,KAAA,eAAA5G,GAAA,KAAAk4D,QAAA,2QAAAx3D,YAAmUC,KAAA,YAAmBiG,KAAA,UAAA5G,GAAA,KAAAk4D,OA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","file":"bulbs-pollzone-map.js","sourcesContent":["webpackJsonp([22],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _register = __webpack_require__(1);\n\t\n\tvar _d = __webpack_require__(302);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _datamaps = __webpack_require__(304);\n\t\n\tvar _datamaps2 = _interopRequireDefault(_datamaps);\n\t\n\t__webpack_require__(305);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\tvar BulbsPollzoneMap = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsPollzoneMap, _BulbsHTMLElement);\n\t\n\t  function BulbsPollzoneMap() {\n\t    _classCallCheck(this, BulbsPollzoneMap);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsPollzoneMap.prototype.attachedCallback = function attachedCallback() {\n\t    var map = this.querySelector('.map');\n\t    var mapData = JSON.parse(map.getAttribute('data-map-data'));\n\t\n\t    this.mapElement = map;\n\t    this.legendContainer = this.querySelector('.legend');\n\t    this.statesData = mapData.votes;\n\t    this.questionsData = mapData.questions;\n\t\n\t    this.setFills();\n\t    this.initMap();\n\t  };\n\t\n\t  BulbsPollzoneMap.prototype.setFills = function setFills() {\n\t    this.fills = {\n\t      defaultFill: '#006B3A'\n\t    };\n\t\n\t    // add colors to keyed fills list\n\t    ['#37273a', '#942026', '#46778a', '#cfa05b', '#375845', '#314577', '#a05a1e', '#654c75', '#738e54', '#686868'].forEach(function (color, i) {\n\t      this.fillKey(i + 1, color);\n\t    }, this);\n\t  };\n\t\n\t  BulbsPollzoneMap.prototype.fillKey = function fillKey(i, value) {\n\t    var key = 'result' + i;\n\t    if (value) {\n\t      this.fills[key] = value;\n\t    }\n\t    return this.fills[key];\n\t  };\n\t\n\t  BulbsPollzoneMap.prototype.initMap = function initMap() {\n\t    this.showTooltip = this.showTooltip.bind(this);\n\t\n\t    var map = this.map = new _datamaps2.default({\n\t      element: this.mapElement,\n\t      scope: 'usa',\n\t      fills: this.fills,\n\t      data: this.statesData,\n\t      geographyConfig: {\n\t        popupTemplate: this.showTooltip\n\t      },\n\t      responsive: true\n\t    });\n\t\n\t    this.colorLegend();\n\t\n\t    // d3 requires namespaced events\n\t    d3.select(window).on('resize.' + map.options.element.id, function () {\n\t      map.resize();\n\t    });\n\t  };\n\t\n\t  BulbsPollzoneMap.prototype.colorLegend = function colorLegend() {\n\t    // color legend, assumes legend has been ordered by sequence\n\t    var legendItems = this.querySelectorAll('.legend-color');\n\t    for (var i = 0; i < legendItems.length; i++) {\n\t      legendItems[i].style.backgroundColor = this.fillKey(i + 1);\n\t    }\n\t  };\n\t\n\t  BulbsPollzoneMap.prototype.showTooltip = function showTooltip(geo, stateResults) {\n\t    var totalVotes = stateResults.totalVotes,\n\t        votes = stateResults.votes;\n\t\n\t    var html = '<div class=\\'hoverinfo\\'><div class=\\'state-name\\'>\\n        ' + geo.properties.name + '\\n      </div>';\n\t\n\t    if (typeof this.questionsData === 'undefined' || Object.keys(votes).length < 1) {\n\t      html += 'No votes';\n\t    } else {\n\t      html += '<ul class=\\'results\\'>';\n\t\n\t      // order by winner then print out html\n\t      html += Object.keys(votes).map(function (key) {\n\t        return { 'id': key, 'numVotes': votes[key] };\n\t      }).sort(function (q1, q2) {\n\t        return q1.numVotes < q2.numVotes;\n\t      }).map(function (question) {\n\t        var numVotes = question.numVotes;\n\t\n\t        var percent = Math.round(numVotes / totalVotes * 100);\n\t\n\t        return '<li class=\\'result\\'>\\n          <div class=\\'bar\\' style=\\'background-color: ' + this.fillKey(question.id) + '; width: ' + percent + '%;\\'></div>\\n          <div class=\\'percent\\'>' + percent + '</div>\\n        </li>';\n\t      }, this).join('');\n\t\n\t      html += '</ul>';\n\t    }\n\t\n\t    return html + '</div>';\n\t  };\n\t\n\t  return BulbsPollzoneMap;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-pollzone-map', BulbsPollzoneMap);\n\n/***/ }),\n\n/***/ 242:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }),\n\n/***/ 243:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction noop() {}\n\t\n\tfunction transformAbsolute(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    point[0] = (x0 += point[0]) * kx + dx;\n\t    point[1] = (y0 += point[1]) * ky + dy;\n\t  };\n\t}\n\t\n\tfunction transformRelative(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var x1 = Math.round((point[0] - dx) / kx),\n\t        y1 = Math.round((point[1] - dy) / ky);\n\t    point[0] = x1 - x0;\n\t    point[1] = y1 - y0;\n\t    x0 = x1;\n\t    y0 = y1;\n\t  };\n\t}\n\t\n\tfunction reverse(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t}\n\t\n\tfunction bisect(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t}\n\t\n\tfunction feature(topology, o) {\n\t  return o.type === \"GeometryCollection\" ? {\n\t    type: \"FeatureCollection\",\n\t    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n\t  } : feature$1(topology, o);\n\t}\n\t\n\tfunction feature$1(topology, o) {\n\t  var f = {\n\t    type: \"Feature\",\n\t    id: o.id,\n\t    properties: o.properties || {},\n\t    geometry: object(topology, o)\n\t  };\n\t  if (o.id == null) delete f.id;\n\t  return f;\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t      points.push(p = a[k].slice());\n\t      absolute(p, k);\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    p = p.slice();\n\t    absolute(p, 0);\n\t    return p;\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var t = o.type;\n\t    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t        : null;\n\t  }\n\t\n\t  var geometryType = {\n\t    Point: function(o) { return point(o.coordinates); },\n\t    MultiPoint: function(o) { return o.coordinates.map(point); },\n\t    LineString: function(o) { return line(o.arcs); },\n\t    MultiLineString: function(o) { return o.arcs.map(line); },\n\t    Polygon: function(o) { return polygon(o.arcs); },\n\t    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t  };\n\t\n\t  return geometry(o);\n\t}\n\t\n\tfunction stitchArcs(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t}\n\t\n\tfunction mesh(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t}\n\t\n\tfunction meshArcs(topology, o, filter) {\n\t  var arcs = [];\n\t\n\t  function arc(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function line(arcs) {\n\t    arcs.forEach(arc);\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    arcs.forEach(line);\n\t  }\n\t\n\t  function geometry(o) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t  }\n\t\n\t  if (arguments.length > 1) {\n\t    var geomsByArc = [],\n\t        geom;\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t    };\n\t\n\t    geometry(o);\n\t\n\t    geomsByArc.forEach(arguments.length < 3\n\t        ? function(geoms) { arcs.push(geoms[0].i); }\n\t        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t  } else {\n\t    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t  }\n\t\n\t  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t}\n\t\n\tfunction cartesianTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t}\n\t\n\tfunction ring(ring) {\n\t  var i = -1,\n\t      n = ring.length,\n\t      a,\n\t      b = ring[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = ring[i];\n\t    area += a[0] * b[1] - a[1] * b[0];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tfunction merge(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t}\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      components = [];\n\t\n\t  objects.forEach(function(o) {\n\t    if (o.type === \"Polygon\") register(o.arcs);\n\t    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t  });\n\t\n\t  function register(polygon) {\n\t    polygon.forEach(function(ring$$) {\n\t      ring$$.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring$$) {\n\t    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var component = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      components.push(component);\n\t      while (polygon = neighbors.pop()) {\n\t        component.push(polygon);\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: components.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitchArcs(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tfunction neighbors(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t}\n\t\n\tfunction compareArea(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tfunction minAreaHeap() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compareArea(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t}\n\t\n\tfunction presimplify(topology, triangleArea) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      relative = transformRelative(topology.transform),\n\t      heap = minAreaHeap();\n\t\n\t  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var triangles = [],\n\t        maxArea = 0,\n\t        triangle,\n\t        i,\n\t        n,\n\t        p;\n\t\n\t    // To store each point’s effective area, we create a new array rather than\n\t    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n\t    // stuck in smi mode). For midpoints, the initial effective area of\n\t    // Infinity will be computed in the next step.\n\t    for (i = 0, n = arc.length; i < n; ++i) {\n\t      p = arc[i];\n\t      absolute(arc[i] = [p[0], p[1], Infinity], i);\n\t    }\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = arc.slice(i - 1, i + 2);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    arc.forEach(relative);\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = triangleArea(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return topology;\n\t}\n\t\n\tvar version = \"1.6.27\";\n\t\n\texports.version = version;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.feature = feature;\n\texports.neighbors = neighbors;\n\texports.presimplify = presimplify;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(303);\n\tmodule.exports = d3;\n\t(function () { delete this.d3; })(); // unset global\n\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, exports) {\n\n\td3 = function() {\n\t  var d3 = {\n\t    version: \"3.3.13\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = function(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  function d3_number(x) {\n\t    return x != null && !isNaN(x);\n\t  }\n\t  d3.mean = function(array, f) {\n\t    var n = array.length, a, m = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n\t    } else {\n\t      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n\t    }\n\t    return j ? m : undefined;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    if (arguments.length > 1) array = array.map(f);\n\t    array = array.filter(d3_number);\n\t    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n\t  };\n\t  d3.bisector = function(f) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t  var d3_bisector = d3.bisector(function(d) {\n\t    return d;\n\t  });\n\t  d3.bisectLeft = d3_bisector.left;\n\t  d3.bisect = d3.bisectRight = d3_bisector.right;\n\t  d3.shuffle = function(array) {\n\t    var m = array.length, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m], array[m] = array[i], array[i] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    try {\n\t      for (var key in properties) {\n\t        Object.defineProperty(ctor.prototype, key, {\n\t          value: properties[key],\n\t          enumerable: false\n\t        });\n\t      }\n\t    } catch (e) {\n\t      ctor.prototype = properties;\n\t    }\n\t  }\n\t  d3.map = function(object) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) object.forEach(function(key, value) {\n\t      map.set(key, value);\n\t    }); else for (var key in object) map.set(key, object[key]);\n\t    return map;\n\t  };\n\t  function d3_Map() {}\n\t  d3_class(d3_Map, {\n\t    has: function(key) {\n\t      return d3_map_prefix + key in this;\n\t    },\n\t    get: function(key) {\n\t      return this[d3_map_prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      return this[d3_map_prefix + key] = value;\n\t    },\n\t    remove: function(key) {\n\t      key = d3_map_prefix + key;\n\t      return key in this && delete this[key];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      this.forEach(function(key) {\n\t        keys.push(key);\n\t      });\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(key, value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      this.forEach(function(key, value) {\n\t        entries.push({\n\t          key: key,\n\t          value: value\n\t        });\n\t      });\n\t      return entries;\n\t    },\n\t    forEach: function(f) {\n\t      for (var key in this) {\n\t        if (key.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, key.substring(1), this[key]);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {}\n\t  d3_class(d3_Set, {\n\t    has: function(value) {\n\t      return d3_map_prefix + value in this;\n\t    },\n\t    add: function(value) {\n\t      this[d3_map_prefix + value] = true;\n\t      return value;\n\t    },\n\t    remove: function(value) {\n\t      value = d3_map_prefix + value;\n\t      return value in this && delete this[value];\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    forEach: function(f) {\n\t      for (var value in this) {\n\t        if (value.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, value.substring(1));\n\t        }\n\t      }\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.substring(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.substring(i + 1);\n\t      type = type.substring(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = function(s, n) {\n\t      return Sizzle.uniqueSort(Sizzle(s, n));\n\t    };\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.substring(0, i);\n\t        name = name.substring(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return name.trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(function() {\n\t      var parent = this.parentNode;\n\t      if (parent) parent.removeChild(this);\n\t    });\n\t  };\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          keyValue = key.call(node = group[i], node.__data__, i);\n\t          if (nodeByKeyValue.has(keyValue)) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues.push(keyValue);\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          keyValue = key.call(groupData, nodeData = groupData[i], i);\n\t          if (node = nodeByKeyValue.get(keyValue)) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          } else if (!dataByKeyValue.has(keyValue)) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t          dataByKeyValue.set(keyValue, nodeData);\n\t          nodeByKeyValue.remove(keyValue);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValues[i])) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3.ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    this.each(function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3_selectionPrototype.transition = function() {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function() {\n\t    return this.each(d3_selection_interrupt);\n\t  };\n\t  function d3_selection_interrupt() {\n\t    var lock = this.__transition__;\n\t    if (lock) ++lock.active;\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.substring(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        function off() {\n\t          w.on(click, null);\n\t        }\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function touchid() {\n\t      return d3.event.changedTouches[0].identifier;\n\t    }\n\t    function touchposition(parent, id) {\n\t      return d3.touches(parent).filter(function(p) {\n\t        return p.identifier === id;\n\t      })[0];\n\t    }\n\t    function dragstart(id, position, move, end) {\n\t      return function() {\n\t        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n\t        if (origin) {\n\t          offset = origin.apply(target, arguments);\n\t          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n\t        } else {\n\t          offset = [ 0, 0 ];\n\t        }\n\t        event_({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n\t          dragged |= dx | dy;\n\t          origin_ = p;\n\t          event_({\n\t            type: \"drag\",\n\t            x: p[0] + offset[0],\n\t            y: p[1] + offset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n\t          dragRestore(dragged && d3.event.target === eventTarget);\n\t          event_({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(event_);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(event_);\n\t            };\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(event_);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(event_);\n\t          zoomed(event_);\n\t          zoomended(event_);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(event) {\n\t      event({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(event) {\n\t      rescale();\n\t      event({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(event) {\n\t      event({\n\t        type: \"zoomend\"\n\t      });\n\t    }\n\t    function mousedowned() {\n\t      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      zoomstarted(event_);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(target), l);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === eventTarget);\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      started();\n\t      zoomstarted(event_);\n\t      function relocate() {\n\t        var touches = d3.touches(target);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0], l = locations0[p.identifier];\n\t            scaleTo(view.k * 2);\n\t            translateTo(p, l);\n\t            d3_eventPreventDefault();\n\t            zoomed(event_);\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(target), p0, l0, p1, l1;\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        w.on(touchmove, null).on(touchend, null);\n\t        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var event_ = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      zoomstarted(event_);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(event_);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      var point = center || d3.mouse(this);\n\t      if (!translate0) translate0 = location(point);\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(point, translate0);\n\t      zoomed(event_);\n\t    }\n\t    function mousewheelreset() {\n\t      translate0 = null;\n\t    }\n\t    function dblclicked() {\n\t      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n\t      zoomstarted(event_);\n\t      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n\t      translateTo(p, l);\n\t      zoomed(event_);\n\t      zoomended(event_);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  function d3_Color() {}\n\t  d3_Color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = function(h, s, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n\t  };\n\t  function d3_hsl(h, s, l) {\n\t    return new d3_Hsl(h, s, l);\n\t  }\n\t  function d3_Hsl(h, s, l) {\n\t    this.h = h;\n\t    this.s = s;\n\t    this.l = l;\n\t  }\n\t  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = function(h, c, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n\t  };\n\t  function d3_hcl(h, c, l) {\n\t    return new d3_Hcl(h, c, l);\n\t  }\n\t  function d3_Hcl(h, c, l) {\n\t    this.h = h;\n\t    this.c = c;\n\t    this.l = l;\n\t  }\n\t  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = function(l, a, b) {\n\t    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n\t  };\n\t  function d3_lab(l, a, b) {\n\t    return new d3_Lab(l, a, b);\n\t  }\n\t  function d3_Lab(l, a, b) {\n\t    this.l = l;\n\t    this.a = a;\n\t    this.b = b;\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = function(r, g, b) {\n\t    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n\t  };\n\t  function d3_rgbNumber(value) {\n\t    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  function d3_rgb(r, g, b) {\n\t    return new d3_Rgb(r, g, b);\n\t  }\n\t  function d3_Rgb(r, g, b) {\n\t    this.r = r;\n\t    this.g = g;\n\t    this.b = b;\n\t  }\n\t  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, name;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n\t    if (format != null && format.charAt(0) === \"#\") {\n\t      if (format.length === 4) {\n\t        r = format.charAt(1);\n\t        r += r;\n\t        g = format.charAt(2);\n\t        g += g;\n\t        b = format.charAt(3);\n\t        b += b;\n\t      } else if (format.length === 7) {\n\t        r = format.substring(1, 3);\n\t        g = format.substring(3, 5);\n\t        b = format.substring(5, 7);\n\t      }\n\t      r = parseInt(r, 16);\n\t      g = parseInt(g, 16);\n\t      b = parseInt(b, 16);\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.substring(j, I - k);\n\t        }\n\t        return text.substring(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && !(a = f(a, n++))) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  d3.format = function(specifier) {\n\t    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n\t    if (precision) precision = +precision.substring(1);\n\t    if (zfill || fill === \"0\" && align === \"=\") {\n\t      zfill = fill = \"0\";\n\t      align = \"=\";\n\t      if (comma) width -= Math.floor((width - 1) / 4);\n\t    }\n\t    switch (type) {\n\t     case \"n\":\n\t      comma = true;\n\t      type = \"g\";\n\t      break;\n\t\n\t     case \"%\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"f\";\n\t      break;\n\t\n\t     case \"p\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"r\";\n\t      break;\n\t\n\t     case \"b\":\n\t     case \"o\":\n\t     case \"x\":\n\t     case \"X\":\n\t      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\t\n\t     case \"c\":\n\t     case \"d\":\n\t      integer = true;\n\t      precision = 0;\n\t      break;\n\t\n\t     case \"s\":\n\t      scale = -1;\n\t      type = \"r\";\n\t      break;\n\t    }\n\t    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n\t    if (type == \"r\" && !precision) type = \"g\";\n\t    if (precision != null) {\n\t      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t    }\n\t    type = d3_format_types.get(type) || d3_format_typeDefault;\n\t    var zcomma = zfill && comma;\n\t    return function(value) {\n\t      if (integer && value % 1) return \"\";\n\t      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n\t      if (scale < 0) {\n\t        var prefix = d3.formatPrefix(value, precision);\n\t        value = prefix.scale(value);\n\t        suffix = prefix.symbol;\n\t      } else {\n\t        value *= scale;\n\t      }\n\t      value = type(value, precision);\n\t      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n\t      if (!zfill && comma) before = d3_format_group(before);\n\t      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t      if (zcomma) before = d3_format_group(padding + before);\n\t      negative += symbol;\n\t      value = before + after;\n\t      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n\t    };\n\t  };\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_format_group = d3_identity;\n\t  if (d3_format_grouping) {\n\t    var d3_format_groupingLength = d3_format_grouping.length;\n\t    d3_format_group = function(value) {\n\t      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n\t      while (i > 0 && g > 0) {\n\t        t.push(value.substring(i -= g, i + g));\n\t        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n\t      }\n\t      return t.reverse().join(d3_format_thousandsSeparator);\n\t    };\n\t  }\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t          listener.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          listener.polygonEnd();\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          listener.lineStart();\n\t          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t          listener.lineEnd();\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n\t        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function isLeft(a, b, c) {\n\t        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return projection.rotate([ 0, 0 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n\t      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n\t      vertices = []; i < n; ++i) {\n\t        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n\t      }\n\t      for (i = 1; i < n; ++i) {\n\t        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        if (i === h) continue;\n\t        y1 = vertices[i][1] - vertices[h][1];\n\t        x1 = vertices[i][0] - vertices[h][0];\n\t        points.push({\n\t          angle: Math.atan2(y1, x1),\n\t          index: i\n\t        });\n\t      }\n\t      points.sort(function(a, b) {\n\t        return a.angle - b.angle;\n\t      });\n\t      a = points[0].angle;\n\t      v = points[0].index;\n\t      u = 0;\n\t      for (i = 1; i < plen; ++i) {\n\t        j = points[i].index;\n\t        if (a == points[i].angle) {\n\t          x1 = vertices[v][0] - vertices[h][0];\n\t          y1 = vertices[v][1] - vertices[h][1];\n\t          x2 = vertices[j][0] - vertices[h][0];\n\t          y2 = vertices[j][1] - vertices[h][1];\n\t          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n\t            points[i].index = -1;\n\t            continue;\n\t          } else {\n\t            points[u].index = -1;\n\t          }\n\t        }\n\t        a = points[i].angle;\n\t        u = i;\n\t        v = j;\n\t      }\n\t      stack.push(h);\n\t      for (i = 0, j = 0; i < 2; ++j) {\n\t        if (points[j].index > -1) {\n\t          stack.push(points[j].index);\n\t          i++;\n\t        }\n\t      }\n\t      sp = stack.length;\n\t      for (;j < plen; ++j) {\n\t        if (points[j].index < 0) continue;\n\t        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n\t          --sp;\n\t        }\n\t        stack[sp++] = points[j].index;\n\t      }\n\t      var poly = [];\n\t      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n\t      return poly;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullCCW(i1, i2, i3, v) {\n\t    var t, a, b, c, d, e, f;\n\t    t = v[i1];\n\t    a = t[0];\n\t    b = t[1];\n\t    t = v[i2];\n\t    c = t[0];\n\t    d = t[1];\n\t    t = v[i3];\n\t    e = t[0];\n\t    f = t[1];\n\t    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = sx; else x2 = sx;\n\t        if (bottom) y1 = sy; else y2 = sy;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    b -= a = +a;\n\t    return function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n\t    a = a + \"\", b = b + \"\";\n\t    d3_interpolate_number.lastIndex = 0;\n\t    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n\t      if (m.index) s.push(b.substring(s0, s1 = m.index));\n\t      q.push({\n\t        i: s.length,\n\t        x: m[0]\n\t      });\n\t      s.push(null);\n\t      s0 = d3_interpolate_number.lastIndex;\n\t    }\n\t    if (s0 < b.length) s.push(b.substring(s0));\n\t    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n\t      o = q[i];\n\t      if (o.x == m[0]) {\n\t        if (o.i) {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i - 1] += o.x;\n\t            s.splice(o.i, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          } else {\n\t            s[o.i - 1] += o.x + s[o.i + 1];\n\t            s.splice(o.i, 2);\n\t            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n\t          }\n\t        } else {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i] = o.x;\n\t          } else {\n\t            s[o.i] = o.x + s[o.i + 1];\n\t            s.splice(o.i + 1, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          }\n\t        }\n\t        q.splice(i, 1);\n\t        n--;\n\t        i--;\n\t      } else {\n\t        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n\t      }\n\t    }\n\t    while (i < n) {\n\t      o = q.pop();\n\t      if (s[o.i + 1] == null) {\n\t        s[o.i] = o.x;\n\t      } else {\n\t        s[o.i] = o.x + s[o.i + 1];\n\t        s.splice(o.i + 1, 1);\n\t      }\n\t      n--;\n\t    }\n\t    if (s.length === 1) {\n\t      return s[0] == null ? (o = q[0].x, function(t) {\n\t        return o(t) + \"\";\n\t      }) : function() {\n\t        return b;\n\t      };\n\t    }\n\t    return function(t) {\n\t      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return (x - a) * b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) * b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n\t          if ((x2 - x1) * dn < theta) {\n\t            var k = quad.charge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t            return true;\n\t          }\n\t          if (quad.point && isFinite(dn)) {\n\t            var k = quad.pointCharge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return theta;\n\t      theta = +x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function recurse(node, depth, nodes) {\n\t      var childs = children.call(hierarchy, node, depth);\n\t      node.depth = depth;\n\t      nodes.push(node);\n\t      if (childs && (n = childs.length)) {\n\t        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n\t        while (++i < n) {\n\t          d = c[i] = recurse(childs[i], j, nodes);\n\t          d.parent = node;\n\t          v += d.value;\n\t        }\n\t        if (sort) c.sort(sort);\n\t        if (value) node.value = v;\n\t      } else {\n\t        delete node.children;\n\t        if (value) {\n\t          node.value = +value.call(hierarchy, node, depth) || 0;\n\t        }\n\t      }\n\t      return node;\n\t    }\n\t    function revalue(node, depth) {\n\t      var children = node.children, v = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, j = depth + 1;\n\t        while (++i < n) v += revalue(children[i], j);\n\t      } else if (value) {\n\t        v = +value.call(hierarchy, node, depth) || 0;\n\t      }\n\t      if (value) node.value = v;\n\t      return v;\n\t    }\n\t    function hierarchy(d) {\n\t      var nodes = [];\n\t      recurse(d, 0, nodes);\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      revalue(root, 0);\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\t    function pie(data) {\n\t      var values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      });\n\t      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n\t      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n\t      var index = d3.range(data.length);\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      var arcs = [];\n\t      index.forEach(function(i) {\n\t        var d;\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: d = values[i],\n\t          startAngle: a,\n\t          endAngle: a += d * k\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return pie;\n\t    };\n\t    pie.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(x) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = x;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(x) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = x;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var n = series.length, m = series[0].length, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n\t      function firstWalk(node, previousSibling) {\n\t        var children = node.children, layout = node._tree;\n\t        if (children && (n = children.length)) {\n\t          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n\t          while (++i < n) {\n\t            child = children[i];\n\t            firstWalk(child, previousChild);\n\t            ancestor = apportion(child, previousChild, ancestor);\n\t            previousChild = child;\n\t          }\n\t          d3_layout_treeShift(node);\n\t          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t            layout.mod = layout.prelim - midpoint;\n\t          } else {\n\t            layout.prelim = midpoint;\n\t          }\n\t        } else {\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t          }\n\t        }\n\t      }\n\t      function secondWalk(node, x) {\n\t        node.x = node._tree.prelim + x;\n\t        var children = node.children;\n\t        if (children && (n = children.length)) {\n\t          var i = -1, n;\n\t          x += node._tree.mod;\n\t          while (++i < n) {\n\t            secondWalk(children[i], x);\n\t          }\n\t        }\n\t      }\n\t      function apportion(node, previousSibling, ancestor) {\n\t        if (previousSibling) {\n\t          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n\t          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t            vom = d3_layout_treeLeft(vom);\n\t            vop = d3_layout_treeRight(vop);\n\t            vop._tree.ancestor = node;\n\t            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n\t            if (shift > 0) {\n\t              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n\t              sip += shift;\n\t              sop += shift;\n\t            }\n\t            sim += vim._tree.mod;\n\t            sip += vip._tree.mod;\n\t            som += vom._tree.mod;\n\t            sop += vop._tree.mod;\n\t          }\n\t          if (vim && !d3_layout_treeRight(vop)) {\n\t            vop._tree.thread = vim;\n\t            vop._tree.mod += sim - sop;\n\t          }\n\t          if (vip && !d3_layout_treeLeft(vom)) {\n\t            vom._tree.thread = vip;\n\t            vom._tree.mod += sip - som;\n\t            ancestor = node;\n\t          }\n\t        }\n\t        return ancestor;\n\t      }\n\t      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n\t        node._tree = {\n\t          ancestor: node,\n\t          prelim: 0,\n\t          mod: 0,\n\t          change: 0,\n\t          shift: 0,\n\t          number: previousSibling ? previousSibling._tree.number + 1 : 0\n\t        };\n\t      });\n\t      firstWalk(root);\n\t      secondWalk(root, -root._tree.prelim);\n\t      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x *= size[0];\n\t        node.y = node.depth * size[1];\n\t        delete node._tree;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = node.depth / y1 * size[1];\n\t        delete node._tree;\n\t      });\n\t      return nodes;\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? children[0] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeSearch(node, compare) {\n\t    var children = node.children;\n\t    if (children && (n = children.length)) {\n\t      var child, n, i = -1;\n\t      while (++i < n) {\n\t        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n\t          node = child;\n\t        }\n\t      }\n\t    }\n\t    return node;\n\t  }\n\t  function d3_layout_treeRightmost(a, b) {\n\t    return a.x - b.x;\n\t  }\n\t  function d3_layout_treeLeftmost(a, b) {\n\t    return b.x - a.x;\n\t  }\n\t  function d3_layout_treeDeepest(a, b) {\n\t    return a.depth - b.depth;\n\t  }\n\t  function d3_layout_treeVisitAfter(node, callback) {\n\t    function visit(node, previousSibling) {\n\t      var children = node.children;\n\t      if (children && (n = children.length)) {\n\t        var child, previousChild = null, i = -1, n;\n\t        while (++i < n) {\n\t          child = children[i];\n\t          visit(child, previousChild);\n\t          previousChild = child;\n\t        }\n\t      }\n\t      callback(node, previousSibling);\n\t    }\n\t    visit(node, null);\n\t  }\n\t  function d3_layout_treeShift(node) {\n\t    var shift = 0, change = 0, children = node.children, i = children.length, child;\n\t    while (--i >= 0) {\n\t      child = children[i]._tree;\n\t      child.prelim += shift;\n\t      child.mod += shift;\n\t      shift += child.shift + (change += child.change);\n\t    }\n\t  }\n\t  function d3_layout_treeMove(ancestor, node, shift) {\n\t    ancestor = ancestor._tree;\n\t    node = node._tree;\n\t    var change = shift / (node.number - ancestor.number);\n\t    ancestor.change += change;\n\t    node.change -= change;\n\t    node.shift += shift;\n\t    node.prelim += shift;\n\t    node.mod += shift;\n\t  }\n\t  function d3_layout_treeAncestor(vim, node, ancestor) {\n\t    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_treeVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_treeVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n\t      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n\t    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n\t      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n\t      range = steps(start + Math.round(error / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.filter(function(d) {\n\t        return !isNaN(d);\n\t      }).sort(d3.ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function arc() {\n\t      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n\t      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n\t      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] + d3_svg_arcOffset;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  function d3_transition(groups, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection) {\n\t    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node.__transition__[id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node.__transition__[id].tween.remove(name);\n\t    } : function(node) {\n\t      node.__transition__[id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node.__transition__[id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node.__transition__[id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node.__transition__[id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node.__transition__[id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      d3_transitionInheritId = id;\n\t      d3_selection_each(this, function(node, i, j) {\n\t        d3_transitionInherit = node.__transition__[id];\n\t        type.call(node, node.__data__, i, j);\n\t      });\n\t      d3_transitionInherit = inherit;\n\t      d3_transitionInheritId = inheritId;\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node.__transition__[id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = Object.create(node.__transition__[id0]);\n\t          transition.delay += transition.duration;\n\t          d3_transitionNode(node, i, id1, transition);\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id1);\n\t  };\n\t  function d3_transitionNode(node, i, id, inherit) {\n\t    var lock = node.__transition__ || (node.__transition__ = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        ease: inherit.ease,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration\n\t      };\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, d, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, d, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return stop();\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, d, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node.__transition__;\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n\t        switch (orient) {\n\t         case \"bottom\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", innerTickSize);\n\t            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"top\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", -innerTickSize);\n\t            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"left\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", -innerTickSize);\n\t            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n\t            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"right\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", innerTickSize);\n\t            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n\t            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t            break;\n\t          }\n\t        }\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1);\n\t        }\n\t        tickEnter.call(tickTransform, scale0);\n\t        tickUpdate.call(tickTransform, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(\" + x(d) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(0,\" + y(d) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n\t  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  d3_time_daySymbols.forEach(function(day, i) {\n\t    day = day.toLowerCase();\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  d3_time.format = d3_time_format;\n\t  function d3_time_format(template) {\n\t    var n = template.length;\n\t    function format(date) {\n\t      var string = [], i = -1, j = 0, c, p, f;\n\t      while (++i < n) {\n\t        if (template.charCodeAt(i) === 37) {\n\t          string.push(template.substring(j, i));\n\t          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t      string.push(template.substring(j, i));\n\t      return string.join(\"\");\n\t    }\n\t    format.parse = function(string) {\n\t      var d = {\n\t        y: 1900,\n\t        m: 0,\n\t        d: 1,\n\t        H: 0,\n\t        M: 0,\n\t        S: 0,\n\t        L: 0,\n\t        Z: null\n\t      }, i = d3_time_parse(d, template, string, 0);\n\t      if (i != string.length) return null;\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t        date.setFullYear(d.y, 0, 1);\n\t        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t      } else date.setFullYear(d.y, d.m, d.d);\n\t      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n\t      return localZ ? date._ : date;\n\t    };\n\t    format.toString = function() {\n\t      return template;\n\t    };\n\t    return format;\n\t  }\n\t  function d3_time_parse(date, template, string, j) {\n\t    var c, p, t, i = 0, n = template.length, m = string.length;\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = template.charCodeAt(i++);\n\t      if (c === 37) {\n\t        t = template.charAt(i++);\n\t        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t        if (!p || (j = p(date, string, j)) < 0) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  };\n\t  var d3_time_formats = {\n\t    a: function(d) {\n\t      return d3_time_dayAbbreviations[d.getDay()];\n\t    },\n\t    A: function(d) {\n\t      return d3_time_days[d.getDay()];\n\t    },\n\t    b: function(d) {\n\t      return d3_time_monthAbbreviations[d.getMonth()];\n\t    },\n\t    B: function(d) {\n\t      return d3_time_months[d.getMonth()];\n\t    },\n\t    c: d3_time_format(d3_time_formatDateTime),\n\t    d: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    e: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    H: function(d, p) {\n\t      return d3_time_formatPad(d.getHours(), p, 2);\n\t    },\n\t    I: function(d, p) {\n\t      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t    },\n\t    j: function(d, p) {\n\t      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t    },\n\t    L: function(d, p) {\n\t      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t    },\n\t    m: function(d, p) {\n\t      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t    },\n\t    M: function(d, p) {\n\t      return d3_time_formatPad(d.getMinutes(), p, 2);\n\t    },\n\t    p: function(d) {\n\t      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n\t    },\n\t    S: function(d, p) {\n\t      return d3_time_formatPad(d.getSeconds(), p, 2);\n\t    },\n\t    U: function(d, p) {\n\t      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t    },\n\t    w: function(d) {\n\t      return d.getDay();\n\t    },\n\t    W: function(d, p) {\n\t      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t    },\n\t    x: d3_time_format(d3_time_formatDate),\n\t    X: d3_time_format(d3_time_formatTime),\n\t    y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t    },\n\t    Y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t    },\n\t    Z: d3_time_zone,\n\t    \"%\": function() {\n\t      return \"%\";\n\t    }\n\t  };\n\t  var d3_time_parsers = {\n\t    a: d3_time_parseWeekdayAbbrev,\n\t    A: d3_time_parseWeekday,\n\t    b: d3_time_parseMonthAbbrev,\n\t    B: d3_time_parseMonth,\n\t    c: d3_time_parseLocaleFull,\n\t    d: d3_time_parseDay,\n\t    e: d3_time_parseDay,\n\t    H: d3_time_parseHour24,\n\t    I: d3_time_parseHour24,\n\t    j: d3_time_parseDayOfYear,\n\t    L: d3_time_parseMilliseconds,\n\t    m: d3_time_parseMonthNumber,\n\t    M: d3_time_parseMinutes,\n\t    p: d3_time_parseAmPm,\n\t    S: d3_time_parseSeconds,\n\t    U: d3_time_parseWeekNumberSunday,\n\t    w: d3_time_parseWeekdayNumber,\n\t    W: d3_time_parseWeekNumberMonday,\n\t    x: d3_time_parseLocaleDate,\n\t    X: d3_time_parseLocaleTime,\n\t    y: d3_time_parseYear,\n\t    Y: d3_time_parseFullYear,\n\t    Z: d3_time_parseZone,\n\t    \"%\": d3_time_parseLiteralPercent\n\t  };\n\t  function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t    d3_time_dayAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekday(date, string, i) {\n\t    d3_time_dayRe.lastIndex = 0;\n\t    var n = d3_time_dayRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonthAbbrev(date, string, i) {\n\t    d3_time_monthAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonth(date, string, i) {\n\t    d3_time_monthRe.lastIndex = 0;\n\t    var n = d3_time_monthRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseLocaleFull(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleDate(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleTime(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  var d3_time_numberRe = /^\\s*\\d+/;\n\t  function d3_time_parseAmPm(date, string, i) {\n\t    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n\t    return n == null ? -1 : (date.p = n, i);\n\t  }\n\t  var d3_time_amPmLookup = d3.map({\n\t    am: 0,\n\t    pm: 1\n\t  });\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  d3_time_format.utc = d3_time_formatUtc;\n\t  function d3_time_formatUtc(template) {\n\t    var local = d3_time_format(template);\n\t    function format(date) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date();\n\t        utc._ = date;\n\t        return local(utc);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    format.parse = function(string) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var date = local.parse(string);\n\t        return date && date._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t    format.toString = local.toString;\n\t    return format;\n\t  }\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  function d3_time_scaleFormat(formats) {\n\t    return function(date) {\n\t      var i = formats.length - 1, f = formats[i];\n\t      while (!f[1](date)) f = formats[--i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n\t    return d.getMonth();\n\t  } ], [ d3_time_format(\"%b %d\"), function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%a %d\"), function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%I %p\"), function(d) {\n\t    return d.getHours();\n\t  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n\t    return d.getMinutes();\n\t  } ], [ d3_time_format(\":%S\"), function(d) {\n\t    return d.getSeconds();\n\t  } ], [ d3_time_format(\".%L\"), function(d) {\n\t    return d.getMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n\t  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  return d3;\n\t}();\n\n/***/ }),\n\n/***/ 304:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var svg;\n\t\n\t  //save off default references\n\t  var d3 = window.d3, topojson = window.topojson;\n\t  \n\t  var defaultOptions = {\n\t    scope: 'world',\n\t    responsive: false,\n\t    setProjection: setProjection,\n\t    projection: 'equirectangular',\n\t    dataType: 'json',\n\t    data: {},\n\t    done: function() {},\n\t    fills: {\n\t      defaultFill: '#ABDDA4'\n\t    },\n\t    geographyConfig: {\n\t        dataUrl: null,\n\t        hideAntarctica: true,\n\t        borderWidth: 1,\n\t        borderColor: '#FDFDFD',\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n\t        },\n\t        popupOnHover: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2\n\t    },\n\t    projectionConfig: {\n\t      rotation: [97, 0]\n\t    },\n\t    bubblesConfig: {\n\t        borderWidth: 2,\n\t        borderColor: '#FFFFFF',\n\t        popupOnHover: true,\n\t        radius: null,\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n\t        },\n\t        fillOpacity: 0.75,\n\t        animate: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2,\n\t        highlightFillOpacity: 0.85,\n\t        exitDelay: 100\n\t    },\n\t    arcConfig: {\n\t      strokeColor: '#DD1C77',\n\t      strokeWidth: 1,\n\t      arcSharpness: 1,\n\t      animationSpeed: 600\n\t    }\n\t  };\n\t\n\t  /*\n\t    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n\t  */\n\t  function val( datumValue, optionsValue, context ) {\n\t    if ( typeof context === 'undefined' ) {\n\t      context = optionsValue;\n\t      optionsValues = undefined;\n\t    }\n\t    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\t\n\t    if (typeof value === 'undefined') {\n\t      return  null;\n\t    }\n\t\n\t    if ( typeof value === 'function' ) {\n\t      var fnContext = [context];\n\t      if ( context.geography ) {\n\t        fnContext = [context.geography, context.data];\n\t      }\n\t      return value.apply(null, fnContext);\n\t    }\n\t    else {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  function addContainer( element, height, width ) {\n\t    this.svg = d3.select( element ).append('svg')\n\t      .attr('width', width || element.offsetWidth)\n\t      .attr('data-width', width || element.offsetWidth)\n\t      .attr('class', 'datamap')\n\t      .attr('height', height || element.offsetHeight)\n\t      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\t\n\t    if (this.options.responsive) {\n\t      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n\t      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n\t      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\t    \n\t    }\n\t\n\t    return this.svg;\n\t  }\n\t\n\t  // setProjection takes the svg element and options\n\t  function setProjection( element, options ) {\n\t    var width = options.width || element.offsetWidth;\n\t    var height = options.height || element.offsetHeight;\n\t    var projection, path;\n\t    var svg = this.svg;\n\t    \n\t    if ( options && typeof options.scope === 'undefined') {\n\t      options.scope = 'world';\n\t    }\n\t\n\t    if ( options.scope === 'usa' ) {\n\t      projection = d3.geo.albersUsa()\n\t        .scale(width)\n\t        .translate([width / 2, height / 2]);\n\t    }\n\t    else if ( options.scope === 'world' ) {\n\t      projection = d3.geo[options.projection]()\n\t        .scale((width + 1) / 2 / Math.PI)\n\t        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n\t    }\n\t\n\t    if ( options.projection === 'orthographic' ) {\n\t\n\t      svg.append(\"defs\").append(\"path\")\n\t        .datum({type: \"Sphere\"})\n\t        .attr(\"id\", \"sphere\")\n\t        .attr(\"d\", path);\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"stroke\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"fill\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n\t    }\n\t\n\t    path = d3.geo.path()\n\t      .projection( projection );\n\t\n\t    return {path: path, projection: projection};\n\t  }\n\t\n\t  function addStyleBlock() {\n\t    if ( d3.select('.datamaps-style-block').empty() ) {\n\t      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n\t      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n\t    }\n\t  }\n\t\n\t  function drawSubunits( data ) {\n\t    var fillData = this.options.fills,\n\t        colorCodeData = this.options.data || {},\n\t        geoConfig = this.options.geographyConfig;\n\t\n\t\n\t    var subunits = this.svg.select('g.datamaps-subunits');\n\t    if ( subunits.empty() ) {\n\t      subunits = this.addLayer('datamaps-subunits', null, true);\n\t    }\n\t\n\t    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n\t    if ( geoConfig.hideAntarctica ) {\n\t      geoData = geoData.filter(function(feature) {\n\t        return feature.id !== \"ATA\";\n\t      });\n\t    }\n\t\n\t    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\t\n\t    geo.enter()\n\t      .append('path')\n\t      .attr('d', this.path)\n\t      .attr('class', function(d) {\n\t        return 'datamaps-subunit ' + d.id;\n\t      })\n\t      .attr('data-info', function(d) {\n\t        return JSON.stringify( colorCodeData[d.id]);\n\t      })\n\t      .style('fill', function(d) {\n\t        //if fillKey - use that\n\t        //otherwise check 'fill'\n\t        //otherwise check 'defaultFill'\n\t        var fillColor;\n\t\n\t        var datum = colorCodeData[d.id];\n\t        if ( datum && datum.fillKey ) {\n\t          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n\t        }\n\t        \n\t        if ( typeof fillColor === 'undefined' ) {\n\t          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n\t        }\n\t\n\t        return fillColor;\n\t      })\n\t      .style('stroke-width', geoConfig.borderWidth)\n\t      .style('stroke', geoConfig.borderColor);\n\t  }\n\t\n\t  function handleGeographyConfig () {\n\t    var hoverover;\n\t    var svg = this.svg;\n\t    var self = this;\n\t    var options = this.options.geographyConfig;\n\t\n\t    if ( options.highlightOnHover || options.popupOnHover ) {\n\t      svg.selectAll('.datamaps-subunit')\n\t        .on('mouseover', function(d) {\n\t          var $this = d3.select(this);\n\t          var datum = self.options.data[d.id] || {};\n\t          if ( options.highlightOnHover ) {\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t\n\t            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n\t            if ( ! /((MSIE)|(Trident))/.test ) {\n\t             moveToFront.call(this);\n\t            }\n\t          }\n\t\n\t          if ( options.popupOnHover ) {\n\t            self.updatePopup($this, d, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function() {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t          $this.on('mousemove', null);\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        });\n\t    }\n\t    \n\t    function moveToFront() {\n\t      this.parentNode.appendChild(this);\n\t    }\n\t  }\n\t\n\t  //plugin to add a simple map legend\n\t  function addLegend(layer, data, options) {\n\t    data = data || {};\n\t    if ( !this.options.fills ) {\n\t      return;\n\t    }\n\t\n\t    var html = '<dl>';\n\t    var label = '';\n\t    if ( data.legendTitle ) {\n\t      html = '<h2>' + data.legendTitle + '</h2>' + html;\n\t    }\n\t    for ( var fillKey in this.options.fills ) {\n\t\n\t      if ( fillKey === 'defaultFill') {\n\t        if (! data.defaultFillName ) {\n\t          continue;\n\t        }\n\t        label = data.defaultFillName;\n\t      } else {\n\t        if (data.labels && data.labels[fillKey]) {\n\t          label = data.labels[fillKey];\n\t        } else {\n\t          label= fillKey + ': ';\n\t        }\n\t      }\n\t      html += '<dt>' + label + '</dt>';\n\t      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n\t    }\n\t    html += '</dl>';\n\t\n\t    var hoverover = d3.select( this.options.element ).append('div')\n\t      .attr('class', 'datamaps-legend')\n\t      .html(html);\n\t  }\n\t\n\t    function addGraticule ( layer, options ) {\n\t      var graticule = d3.geo.graticule();\n\t      this.svg.insert(\"path\", '.datamaps-subunits')\n\t        .datum(graticule)\n\t        .attr(\"class\", \"datamaps-graticule\")\n\t        .attr(\"d\", this.path); \n\t  }\n\t\n\t  function handleArcs (layer, data, options) {\n\t    var self = this,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - arcs must be an array\";\n\t    }\n\t\n\t    // For some reason arc options were put in an `options` object instead of the parent arc\n\t    // I don't like this, so to match bubbles and other plugins I'm moving it\n\t    // This is to keep backwards compatability\n\t    for ( var i = 0; i < data.length; i++ ) {\n\t      data[i] = defaults(data[i], data[i].options);\n\t      delete data[i].options;\n\t    }\n\t\n\t    if ( typeof options === \"undefined\" ) {\n\t      options = defaultOptions.arcConfig;\n\t    }\n\t\n\t    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\t\n\t    var path = d3.geo.path()\n\t        .projection(self.projection);\n\t\n\t    arcs\n\t      .enter()\n\t        .append('svg:path')\n\t        .attr('class', 'datamaps-arc')\n\t        .style('stroke-linecap', 'round')\n\t        .style('stroke', function(datum) {\n\t          return val(datum.strokeColor, options.strokeColor, datum);\n\t        })\n\t        .style('fill', 'none')\n\t        .style('stroke-width', function(datum) {\n\t            return val(datum.strokeWidth, options.strokeWidth, datum);\n\t        })\n\t        .attr('d', function(datum) {\n\t            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n\t            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n\t            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n\t            if (options.greatArc) {\n\t                  // TODO: Move this to inside `if` clause when setting attr `d`\n\t              var greatArc = d3.geo.greatArc()\n\t                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n\t                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\t\n\t              return path(greatArc(datum))\n\t            }\n\t            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n\t            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n\t        })\n\t        .transition()\n\t          .delay(100)\n\t          .style('fill', function(datum) {\n\t            /*\n\t              Thank you Jake Archibald, this is awesome.\n\t              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n\t            */\n\t            var length = this.getTotalLength();\n\t            this.style.transition = this.style.WebkitTransition = 'none';\n\t            this.style.strokeDasharray = length + ' ' + length;\n\t            this.style.strokeDashoffset = length;\n\t            this.getBoundingClientRect();\n\t            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n\t            this.style.strokeDashoffset = '0';\n\t            return 'none';\n\t          })\n\t\n\t    arcs.exit()\n\t      .transition()\n\t      .style('opacity', 0)\n\t      .remove();\n\t  }\n\t\n\t  function handleLabels ( layer, options ) {\n\t    var self = this;\n\t    options = options || {};\n\t    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n\t    this.svg.selectAll(\".datamaps-subunit\")\n\t      .attr(\"data-foo\", function(d) {\n\t        var center = self.path.centroid(d);\n\t        var xOffset = 7.5, yOffset = 5;\n\t\n\t        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n\t        if ( d.id === \"NY\" ) xOffset = -1;\n\t        if ( d.id === \"MI\" ) yOffset = 18;\n\t        if ( d.id === \"LA\" ) xOffset = 13;\n\t\n\t        var x,y;\n\t\n\t        x = center[0] - xOffset;\n\t        y = center[1] + yOffset;\n\t\n\t        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n\t        if ( smallStateIndex > -1) {\n\t          var yStart = labelStartCoodinates[1];\n\t          x = labelStartCoodinates[0];\n\t          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n\t          layer.append(\"line\")\n\t            .attr(\"x1\", x - 3)\n\t            .attr(\"y1\", y - 5)\n\t            .attr(\"x2\", center[0])\n\t            .attr(\"y2\", center[1])\n\t            .style(\"stroke\", options.labelColor || \"#000\")\n\t            .style(\"stroke-width\", options.lineWidth || 1)\n\t        }\n\t\n\t        layer.append(\"text\")\n\t          .attr(\"x\", x)\n\t          .attr(\"y\", y)\n\t          .style(\"font-size\", (options.fontSize || 10) + 'px')\n\t          .style(\"font-family\", options.fontFamily || \"Verdana\")\n\t          .style(\"fill\", options.labelColor || \"#000\")\n\t          .text( d.id );\n\t        return \"bar\";\n\t      });\n\t  }\n\t\n\t\n\t  function handleBubbles (layer, data, options ) {\n\t    var self = this,\n\t        fillData = this.options.fills,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - bubbles must be an array\";\n\t    }\n\t\n\t    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\t\n\t    bubbles\n\t      .enter()\n\t        .append('svg:circle')\n\t        .attr('class', 'datamaps-bubble')\n\t        .attr('cx', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[0];\n\t        })\n\t        .attr('cy', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[1];;\n\t        })\n\t        .attr('r', 0) //for animation purposes\n\t        .attr('data-info', function(d) {\n\t          return JSON.stringify(d);\n\t        })\n\t        .style('stroke', function ( datum ) {\n\t          return val(datum.borderColor, options.borderColor, datum);\n\t        })\n\t        .style('stroke-width', function ( datum ) {\n\t          return val(datum.borderWidth, options.borderWidth, datum);\n\t        })\n\t        .style('fill-opacity', function ( datum ) {\n\t          return val(datum.fillOpacity, options.fillOpacity, datum);\n\t        })\n\t        .style('fill', function ( datum ) {\n\t          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n\t          return fillColor || fillData.defaultFill;\n\t        })\n\t        .on('mouseover', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //save all previous attributes for mouseout\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t          }\n\t\n\t          if (options.popupOnHover) {\n\t            self.updatePopup($this, datum, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        })\n\t        .transition().duration(400)\n\t          .attr('r', function ( datum ) {\n\t            return val(datum.radius, options.radius, datum);\n\t          });\n\t\n\t    bubbles.exit()\n\t      .transition()\n\t        .delay(options.exitDelay)\n\t        .attr(\"r\", 0)\n\t        .remove();\n\t\n\t    function datumHasCoords (datum) {\n\t      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n\t    }\n\t\n\t  }\n\t\n\t  //stolen from underscore.js\n\t  function defaults(obj) {\n\t    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n\t      if (source) {\n\t        for (var prop in source) {\n\t          if (obj[prop] == null) obj[prop] = source[prop];\n\t        }\n\t      }\n\t    });\n\t    return obj;\n\t  }\n\t  /**************************************\n\t             Public Functions\n\t  ***************************************/\n\t\n\t  function Datamap( options ) {\n\t\n\t    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n\t      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n\t   }\n\t    //set options for global use\n\t    this.options = defaults(options, defaultOptions);\n\t    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n\t    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n\t    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n\t    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\t\n\t    //add the SVG container\n\t    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n\t      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n\t    }\n\t\n\t    /* Add core plugins to this instance */\n\t    this.addPlugin('bubbles', handleBubbles);\n\t    this.addPlugin('legend', addLegend);\n\t    this.addPlugin('arc', handleArcs);\n\t    this.addPlugin('labels', handleLabels);\n\t    this.addPlugin('graticule', addGraticule);\n\t\n\t    //append style block with basic hoverover styles\n\t    if ( ! this.options.disableDefaultStyles ) {\n\t      addStyleBlock();\n\t    }\n\t\n\t    return this.draw();\n\t  }\n\t\n\t  // resize map\n\t  Datamap.prototype.resize = function () {\n\t\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (options.responsive) {\n\t      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n\t          newsize = options.element.clientWidth,\n\t          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\t\n\t      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n\t    }\n\t  }\n\t\n\t  // actually draw the features(states & countries)\n\t  Datamap.prototype.draw = function() {\n\t    //save off in a closure\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    //set projections and paths based on scope\n\t    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\t\n\t    this.path = pathAndProjection.path;\n\t    this.projection = pathAndProjection.projection;\n\t\n\t    //if custom URL for topojson data, retrieve it and render\n\t    if ( options.geographyConfig.dataUrl ) {\n\t      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n\t        if ( error ) throw new Error(error);\n\t        self.customTopo = results;\n\t        draw( results );\n\t      });\n\t    }\n\t    else {\n\t      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n\t    }\n\t\n\t    return this;\n\t\n\t      function draw (data) {\n\t        // if fetching remote data, draw the map first then call `updateChoropleth`\n\t        if ( self.options.dataUrl ) {\n\t          //allow for csv or json data types\n\t          d3[self.options.dataType](self.options.dataUrl, function(data) {\n\t            //in the case of csv, transform data to object\n\t            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n\t              var tmpData = {};\n\t              for(var i = 0; i < data.length; i++) {\n\t                tmpData[data[i].id] = data[i];\n\t              } \n\t              data = tmpData;\n\t            }\n\t            Datamaps.prototype.updateChoropleth.call(self, data);\n\t          });\n\t        }\n\t        drawSubunits.call(self, data);\n\t        handleGeographyConfig.call(self);\n\t\n\t        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n\t          hoverover = d3.select( self.options.element ).append('div')\n\t            .attr('class', 'datamaps-hoverover')\n\t            .style('z-index', 10001)\n\t            .style('position', 'absolute');\n\t        }\n\t\n\t        //fire off finished callback\n\t        self.options.done(self);\n\t      }\n\t  };\n\t  /**************************************\n\t                TopoJSON\n\t  ***************************************/\n\t  Datamap.prototype.worldTopo = {\n\t    \"type\": \"Topology\",\n\t    \"objects\": {\n\t        \"world\": {\n\t            \"type\": \"GeometryCollection\",\n\t            \"geometries\": [{\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Afghanistan\"\n\t                },\n\t                \"id\": \"AFG\",\n\t                \"arcs\": [\n\t                    [0, 1, 2, 3, 4, 5]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Angola\"\n\t                },\n\t                \"id\": \"AGO\",\n\t                \"arcs\": [\n\t                    [\n\t                        [6, 7, 8, 9]\n\t                    ],\n\t                    [\n\t                        [10, 11, 12]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Albania\"\n\t                },\n\t                \"id\": \"ALB\",\n\t                \"arcs\": [\n\t                    [13, 14, 15, 16, 17]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Arab Emirates\"\n\t                },\n\t                \"id\": \"ARE\",\n\t                \"arcs\": [\n\t                    [18, 19, 20, 21, 22]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Argentina\"\n\t                },\n\t                \"id\": \"ARG\",\n\t                \"arcs\": [\n\t                    [\n\t                        [23, 24]\n\t                    ],\n\t                    [\n\t                        [25, 26, 27, 28, 29, 30]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Armenia\"\n\t                },\n\t                \"id\": \"ARM\",\n\t                \"arcs\": [\n\t                    [31, 32, 33, 34, 35]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Antarctica\"\n\t                },\n\t                \"id\": \"ATA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [36]\n\t                    ],\n\t                    [\n\t                        [37]\n\t                    ],\n\t                    [\n\t                        [38]\n\t                    ],\n\t                    [\n\t                        [39]\n\t                    ],\n\t                    [\n\t                        [40]\n\t                    ],\n\t                    [\n\t                        [41]\n\t                    ],\n\t                    [\n\t                        [42]\n\t                    ],\n\t                    [\n\t                        [43]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"French Southern and Antarctic Lands\"\n\t                },\n\t                \"id\": \"ATF\",\n\t                \"arcs\": [\n\t                    [44]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Australia\"\n\t                },\n\t                \"id\": \"AUS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [45]\n\t                    ],\n\t                    [\n\t                        [46]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Austria\"\n\t                },\n\t                \"id\": \"AUT\",\n\t                \"arcs\": [\n\t                    [47, 48, 49, 50, 51, 52, 53]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Azerbaijan\"\n\t                },\n\t                \"id\": \"AZE\",\n\t                \"arcs\": [\n\t                    [\n\t                        [54, -35]\n\t                    ],\n\t                    [\n\t                        [55, 56, -33, 57, 58]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Burundi\"\n\t                },\n\t                \"id\": \"BDI\",\n\t                \"arcs\": [\n\t                    [59, 60, 61]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belgium\"\n\t                },\n\t                \"id\": \"BEL\",\n\t                \"arcs\": [\n\t                    [62, 63, 64, 65, 66]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Benin\"\n\t                },\n\t                \"id\": \"BEN\",\n\t                \"arcs\": [\n\t                    [67, 68, 69, 70, 71]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Burkina Faso\"\n\t                },\n\t                \"id\": \"BFA\",\n\t                \"arcs\": [\n\t                    [72, 73, 74, -70, 75, 76]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bangladesh\"\n\t                },\n\t                \"id\": \"BGD\",\n\t                \"arcs\": [\n\t                    [77, 78, 79]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bulgaria\"\n\t                },\n\t                \"id\": \"BGR\",\n\t                \"arcs\": [\n\t                    [80, 81, 82, 83, 84, 85]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"The Bahamas\"\n\t                },\n\t                \"id\": \"BHS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [86]\n\t                    ],\n\t                    [\n\t                        [87]\n\t                    ],\n\t                    [\n\t                        [88]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bosnia and Herzegovina\"\n\t                },\n\t                \"id\": \"BIH\",\n\t                \"arcs\": [\n\t                    [89, 90, 91]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belarus\"\n\t                },\n\t                \"id\": \"BLR\",\n\t                \"arcs\": [\n\t                    [92, 93, 94, 95, 96]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belize\"\n\t                },\n\t                \"id\": \"BLZ\",\n\t                \"arcs\": [\n\t                    [97, 98, 99]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bolivia\"\n\t                },\n\t                \"id\": \"BOL\",\n\t                \"arcs\": [\n\t                    [100, 101, 102, 103, -31]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Brazil\"\n\t                },\n\t                \"id\": \"BRA\",\n\t                \"arcs\": [\n\t                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Brunei\"\n\t                },\n\t                \"id\": \"BRN\",\n\t                \"arcs\": [\n\t                    [113, 114]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bhutan\"\n\t                },\n\t                \"id\": \"BTN\",\n\t                \"arcs\": [\n\t                    [115, 116]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Botswana\"\n\t                },\n\t                \"id\": \"BWA\",\n\t                \"arcs\": [\n\t                    [117, 118, 119, 120]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Central African Republic\"\n\t                },\n\t                \"id\": \"CAF\",\n\t                \"arcs\": [\n\t                    [121, 122, 123, 124, 125, 126, 127]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Canada\"\n\t                },\n\t                \"id\": \"CAN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [128]\n\t                    ],\n\t                    [\n\t                        [129]\n\t                    ],\n\t                    [\n\t                        [130]\n\t                    ],\n\t                    [\n\t                        [131]\n\t                    ],\n\t                    [\n\t                        [132]\n\t                    ],\n\t                    [\n\t                        [133]\n\t                    ],\n\t                    [\n\t                        [134]\n\t                    ],\n\t                    [\n\t                        [135]\n\t                    ],\n\t                    [\n\t                        [136]\n\t                    ],\n\t                    [\n\t                        [137]\n\t                    ],\n\t                    [\n\t                        [138, 139, 140, 141]\n\t                    ],\n\t                    [\n\t                        [142]\n\t                    ],\n\t                    [\n\t                        [143]\n\t                    ],\n\t                    [\n\t                        [144]\n\t                    ],\n\t                    [\n\t                        [145]\n\t                    ],\n\t                    [\n\t                        [146]\n\t                    ],\n\t                    [\n\t                        [147]\n\t                    ],\n\t                    [\n\t                        [148]\n\t                    ],\n\t                    [\n\t                        [149]\n\t                    ],\n\t                    [\n\t                        [150]\n\t                    ],\n\t                    [\n\t                        [151]\n\t                    ],\n\t                    [\n\t                        [152]\n\t                    ],\n\t                    [\n\t                        [153]\n\t                    ],\n\t                    [\n\t                        [154]\n\t                    ],\n\t                    [\n\t                        [155]\n\t                    ],\n\t                    [\n\t                        [156]\n\t                    ],\n\t                    [\n\t                        [157]\n\t                    ],\n\t                    [\n\t                        [158]\n\t                    ],\n\t                    [\n\t                        [159]\n\t                    ],\n\t                    [\n\t                        [160]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Switzerland\"\n\t                },\n\t                \"id\": \"CHE\",\n\t                \"arcs\": [\n\t                    [-51, 161, 162, 163]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Chile\"\n\t                },\n\t                \"id\": \"CHL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [-24, 164]\n\t                    ],\n\t                    [\n\t                        [-30, 165, 166, -101]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"China\"\n\t                },\n\t                \"id\": \"CHN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [167]\n\t                    ],\n\t                    [\n\t                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ivory Coast\"\n\t                },\n\t                \"id\": \"CIV\",\n\t                \"arcs\": [\n\t                    [184, 185, 186, 187, -73, 188]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cameroon\"\n\t                },\n\t                \"id\": \"CMR\",\n\t                \"arcs\": [\n\t                    [189, 190, 191, 192, 193, 194, -128, 195]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Democratic Republic of the Congo\"\n\t                },\n\t                \"id\": \"COD\",\n\t                \"arcs\": [\n\t                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Republic of the Congo\"\n\t                },\n\t                \"id\": \"COG\",\n\t                \"arcs\": [\n\t                    [-12, 203, 204, -196, -127, -202]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Colombia\"\n\t                },\n\t                \"id\": \"COL\",\n\t                \"arcs\": [\n\t                    [205, 206, 207, 208, 209, -107, 210]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Costa Rica\"\n\t                },\n\t                \"id\": \"CRI\",\n\t                \"arcs\": [\n\t                    [211, 212, 213, 214]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cuba\"\n\t                },\n\t                \"id\": \"CUB\",\n\t                \"arcs\": [\n\t                    [215]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Northern Cyprus\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [216, 217]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cyprus\"\n\t                },\n\t                \"id\": \"CYP\",\n\t                \"arcs\": [\n\t                    [218, -218]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Czech Republic\"\n\t                },\n\t                \"id\": \"CZE\",\n\t                \"arcs\": [\n\t                    [-53, 219, 220, 221]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Germany\"\n\t                },\n\t                \"id\": \"DEU\",\n\t                \"arcs\": [\n\t                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Djibouti\"\n\t                },\n\t                \"id\": \"DJI\",\n\t                \"arcs\": [\n\t                    [229, 230, 231, 232]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Denmark\"\n\t                },\n\t                \"id\": \"DNK\",\n\t                \"arcs\": [\n\t                    [\n\t                        [233]\n\t                    ],\n\t                    [\n\t                        [-229, 234]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Dominican Republic\"\n\t                },\n\t                \"id\": \"DOM\",\n\t                \"arcs\": [\n\t                    [235, 236]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Algeria\"\n\t                },\n\t                \"id\": \"DZA\",\n\t                \"arcs\": [\n\t                    [237, 238, 239, 240, 241, 242, 243, 244]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ecuador\"\n\t                },\n\t                \"id\": \"ECU\",\n\t                \"arcs\": [\n\t                    [245, -206, 246]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Egypt\"\n\t                },\n\t                \"id\": \"EGY\",\n\t                \"arcs\": [\n\t                    [247, 248, 249, 250, 251]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Eritrea\"\n\t                },\n\t                \"id\": \"ERI\",\n\t                \"arcs\": [\n\t                    [252, 253, 254, -233]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Spain\"\n\t                },\n\t                \"id\": \"ESP\",\n\t                \"arcs\": [\n\t                    [255, 256, 257, 258]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Estonia\"\n\t                },\n\t                \"id\": \"EST\",\n\t                \"arcs\": [\n\t                    [259, 260, 261]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ethiopia\"\n\t                },\n\t                \"id\": \"ETH\",\n\t                \"arcs\": [\n\t                    [-232, 262, 263, 264, 265, 266, 267, -253]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Finland\"\n\t                },\n\t                \"id\": \"FIN\",\n\t                \"arcs\": [\n\t                    [268, 269, 270, 271]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Fiji\"\n\t                },\n\t                \"id\": \"FJI\",\n\t                \"arcs\": [\n\t                    [\n\t                        [272]\n\t                    ],\n\t                    [\n\t                        [273, 274]\n\t                    ],\n\t                    [\n\t                        [275, -275]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Falkland Islands\"\n\t                },\n\t                \"id\": \"FLK\",\n\t                \"arcs\": [\n\t                    [276]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"France\"\n\t                },\n\t                \"id\": \"FRA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [277]\n\t                    ],\n\t                    [\n\t                        [278, -225, -163, 279, 280, -257, 281, -66]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"French Guiana\"\n\t                },\n\t                \"id\": \"GUF\",\n\t                \"arcs\": [\n\t                    [282, 283, 284, 285, -111]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Gabon\"\n\t                },\n\t                \"id\": \"GAB\",\n\t                \"arcs\": [\n\t                    [286, 287, -190, -205]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Kingdom\"\n\t                },\n\t                \"id\": \"GBR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [288, 289]\n\t                    ],\n\t                    [\n\t                        [290]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Georgia\"\n\t                },\n\t                \"id\": \"GEO\",\n\t                \"arcs\": [\n\t                    [291, 292, -58, -32, 293]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ghana\"\n\t                },\n\t                \"id\": \"GHA\",\n\t                \"arcs\": [\n\t                    [294, -189, -77, 295]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guinea\"\n\t                },\n\t                \"id\": \"GIN\",\n\t                \"arcs\": [\n\t                    [296, 297, 298, 299, 300, 301, -187]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Gambia\"\n\t                },\n\t                \"id\": \"GMB\",\n\t                \"arcs\": [\n\t                    [302, 303]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guinea Bissau\"\n\t                },\n\t                \"id\": \"GNB\",\n\t                \"arcs\": [\n\t                    [304, 305, -300]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Equatorial Guinea\"\n\t                },\n\t                \"id\": \"GNQ\",\n\t                \"arcs\": [\n\t                    [306, -191, -288]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Greece\"\n\t                },\n\t                \"id\": \"GRC\",\n\t                \"arcs\": [\n\t                    [\n\t                        [307]\n\t                    ],\n\t                    [\n\t                        [308, -15, 309, -84, 310]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Greenland\"\n\t                },\n\t                \"id\": \"GRL\",\n\t                \"arcs\": [\n\t                    [311]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guatemala\"\n\t                },\n\t                \"id\": \"GTM\",\n\t                \"arcs\": [\n\t                    [312, 313, -100, 314, 315, 316]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guyana\"\n\t                },\n\t                \"id\": \"GUY\",\n\t                \"arcs\": [\n\t                    [317, 318, -109, 319]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Honduras\"\n\t                },\n\t                \"id\": \"HND\",\n\t                \"arcs\": [\n\t                    [320, 321, -316, 322, 323]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Croatia\"\n\t                },\n\t                \"id\": \"HRV\",\n\t                \"arcs\": [\n\t                    [324, -92, 325, 326, 327, 328]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Haiti\"\n\t                },\n\t                \"id\": \"HTI\",\n\t                \"arcs\": [\n\t                    [-237, 329]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Hungary\"\n\t                },\n\t                \"id\": \"HUN\",\n\t                \"arcs\": [\n\t                    [-48, 330, 331, 332, 333, -329, 334]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Indonesia\"\n\t                },\n\t                \"id\": \"IDN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [335]\n\t                    ],\n\t                    [\n\t                        [336, 337]\n\t                    ],\n\t                    [\n\t                        [338]\n\t                    ],\n\t                    [\n\t                        [339]\n\t                    ],\n\t                    [\n\t                        [340]\n\t                    ],\n\t                    [\n\t                        [341]\n\t                    ],\n\t                    [\n\t                        [342]\n\t                    ],\n\t                    [\n\t                        [343]\n\t                    ],\n\t                    [\n\t                        [344, 345]\n\t                    ],\n\t                    [\n\t                        [346]\n\t                    ],\n\t                    [\n\t                        [347]\n\t                    ],\n\t                    [\n\t                        [348, 349]\n\t                    ],\n\t                    [\n\t                        [350]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"India\"\n\t                },\n\t                \"id\": \"IND\",\n\t                \"arcs\": [\n\t                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ireland\"\n\t                },\n\t                \"id\": \"IRL\",\n\t                \"arcs\": [\n\t                    [355, -289]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iran\"\n\t                },\n\t                \"id\": \"IRN\",\n\t                \"arcs\": [\n\t                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iraq\"\n\t                },\n\t                \"id\": \"IRQ\",\n\t                \"arcs\": [\n\t                    [362, 363, 364, 365, 366, 367, -360]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iceland\"\n\t                },\n\t                \"id\": \"ISL\",\n\t                \"arcs\": [\n\t                    [368]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Israel\"\n\t                },\n\t                \"id\": \"ISR\",\n\t                \"arcs\": [\n\t                    [369, 370, 371, -252, 372, 373, 374]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Italy\"\n\t                },\n\t                \"id\": \"ITA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [375]\n\t                    ],\n\t                    [\n\t                        [376]\n\t                    ],\n\t                    [\n\t                        [377, 378, -280, -162, -50]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Jamaica\"\n\t                },\n\t                \"id\": \"JAM\",\n\t                \"arcs\": [\n\t                    [379]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Jordan\"\n\t                },\n\t                \"id\": \"JOR\",\n\t                \"arcs\": [\n\t                    [-370, 380, -366, 381, 382, -372, 383]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Japan\"\n\t                },\n\t                \"id\": \"JPN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [384]\n\t                    ],\n\t                    [\n\t                        [385]\n\t                    ],\n\t                    [\n\t                        [386]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kazakhstan\"\n\t                },\n\t                \"id\": \"KAZ\",\n\t                \"arcs\": [\n\t                    [387, 388, 389, 390, -181, 391]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kenya\"\n\t                },\n\t                \"id\": \"KEN\",\n\t                \"arcs\": [\n\t                    [392, 393, 394, 395, -265, 396]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kyrgyzstan\"\n\t                },\n\t                \"id\": \"KGZ\",\n\t                \"arcs\": [\n\t                    [-392, -180, 397, 398]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cambodia\"\n\t                },\n\t                \"id\": \"KHM\",\n\t                \"arcs\": [\n\t                    [399, 400, 401, 402]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Korea\"\n\t                },\n\t                \"id\": \"KOR\",\n\t                \"arcs\": [\n\t                    [403, 404]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kosovo\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [-18, 405, 406, 407]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kuwait\"\n\t                },\n\t                \"id\": \"KWT\",\n\t                \"arcs\": [\n\t                    [408, 409, -364]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Laos\"\n\t                },\n\t                \"id\": \"LAO\",\n\t                \"arcs\": [\n\t                    [410, 411, -172, 412, -401]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lebanon\"\n\t                },\n\t                \"id\": \"LBN\",\n\t                \"arcs\": [\n\t                    [-374, 413, 414]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Liberia\"\n\t                },\n\t                \"id\": \"LBR\",\n\t                \"arcs\": [\n\t                    [415, 416, -297, -186]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Libya\"\n\t                },\n\t                \"id\": \"LBY\",\n\t                \"arcs\": [\n\t                    [417, -245, 418, 419, -250, 420, 421]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sri Lanka\"\n\t                },\n\t                \"id\": \"LKA\",\n\t                \"arcs\": [\n\t                    [422]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lesotho\"\n\t                },\n\t                \"id\": \"LSO\",\n\t                \"arcs\": [\n\t                    [423]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lithuania\"\n\t                },\n\t                \"id\": \"LTU\",\n\t                \"arcs\": [\n\t                    [424, 425, 426, -93, 427]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Luxembourg\"\n\t                },\n\t                \"id\": \"LUX\",\n\t                \"arcs\": [\n\t                    [-226, -279, -65]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Latvia\"\n\t                },\n\t                \"id\": \"LVA\",\n\t                \"arcs\": [\n\t                    [428, -262, 429, -94, -427]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Morocco\"\n\t                },\n\t                \"id\": \"MAR\",\n\t                \"arcs\": [\n\t                    [-242, 430, 431]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Moldova\"\n\t                },\n\t                \"id\": \"MDA\",\n\t                \"arcs\": [\n\t                    [432, 433]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Madagascar\"\n\t                },\n\t                \"id\": \"MDG\",\n\t                \"arcs\": [\n\t                    [434]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mexico\"\n\t                },\n\t                \"id\": \"MEX\",\n\t                \"arcs\": [\n\t                    [435, -98, -314, 436, 437]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Macedonia\"\n\t                },\n\t                \"id\": \"MKD\",\n\t                \"arcs\": [\n\t                    [-408, 438, -85, -310, -14]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mali\"\n\t                },\n\t                \"id\": \"MLI\",\n\t                \"arcs\": [\n\t                    [439, -239, 440, -74, -188, -302, 441]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Myanmar\"\n\t                },\n\t                \"id\": \"MMR\",\n\t                \"arcs\": [\n\t                    [442, -78, -353, -173, -412, 443]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Montenegro\"\n\t                },\n\t                \"id\": \"MNE\",\n\t                \"arcs\": [\n\t                    [444, -326, -91, 445, -406, -17]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mongolia\"\n\t                },\n\t                \"id\": \"MNG\",\n\t                \"arcs\": [\n\t                    [446, -183]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mozambique\"\n\t                },\n\t                \"id\": \"MOZ\",\n\t                \"arcs\": [\n\t                    [447, 448, 449, 450, 451, 452, 453, 454]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mauritania\"\n\t                },\n\t                \"id\": \"MRT\",\n\t                \"arcs\": [\n\t                    [455, 456, 457, -240, -440]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Malawi\"\n\t                },\n\t                \"id\": \"MWI\",\n\t                \"arcs\": [\n\t                    [-455, 458, 459]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Malaysia\"\n\t                },\n\t                \"id\": \"MYS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [460, 461]\n\t                    ],\n\t                    [\n\t                        [-349, 462, -115, 463]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Namibia\"\n\t                },\n\t                \"id\": \"NAM\",\n\t                \"arcs\": [\n\t                    [464, -8, 465, -119, 466]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"New Caledonia\"\n\t                },\n\t                \"id\": \"NCL\",\n\t                \"arcs\": [\n\t                    [467]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Niger\"\n\t                },\n\t                \"id\": \"NER\",\n\t                \"arcs\": [\n\t                    [-75, -441, -238, -418, 468, -194, 469, -71]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nigeria\"\n\t                },\n\t                \"id\": \"NGA\",\n\t                \"arcs\": [\n\t                    [470, -72, -470, -193]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nicaragua\"\n\t                },\n\t                \"id\": \"NIC\",\n\t                \"arcs\": [\n\t                    [471, -324, 472, -213]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Netherlands\"\n\t                },\n\t                \"id\": \"NLD\",\n\t                \"arcs\": [\n\t                    [-227, -63, 473]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Norway\"\n\t                },\n\t                \"id\": \"NOR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [474, -272, 475, 476]\n\t                    ],\n\t                    [\n\t                        [477]\n\t                    ],\n\t                    [\n\t                        [478]\n\t                    ],\n\t                    [\n\t                        [479]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nepal\"\n\t                },\n\t                \"id\": \"NPL\",\n\t                \"arcs\": [\n\t                    [-352, -176]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"New Zealand\"\n\t                },\n\t                \"id\": \"NZL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [480]\n\t                    ],\n\t                    [\n\t                        [481]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Oman\"\n\t                },\n\t                \"id\": \"OMN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [482, 483, -22, 484]\n\t                    ],\n\t                    [\n\t                        [-20, 485]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Pakistan\"\n\t                },\n\t                \"id\": \"PAK\",\n\t                \"arcs\": [\n\t                    [-178, -355, 486, -358, -5]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Panama\"\n\t                },\n\t                \"id\": \"PAN\",\n\t                \"arcs\": [\n\t                    [487, -215, 488, -208]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Peru\"\n\t                },\n\t                \"id\": \"PER\",\n\t                \"arcs\": [\n\t                    [-167, 489, -247, -211, -106, -102]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Philippines\"\n\t                },\n\t                \"id\": \"PHL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [490]\n\t                    ],\n\t                    [\n\t                        [491]\n\t                    ],\n\t                    [\n\t                        [492]\n\t                    ],\n\t                    [\n\t                        [493]\n\t                    ],\n\t                    [\n\t                        [494]\n\t                    ],\n\t                    [\n\t                        [495]\n\t                    ],\n\t                    [\n\t                        [496]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Papua New Guinea\"\n\t                },\n\t                \"id\": \"PNG\",\n\t                \"arcs\": [\n\t                    [\n\t                        [497]\n\t                    ],\n\t                    [\n\t                        [498]\n\t                    ],\n\t                    [\n\t                        [-345, 499]\n\t                    ],\n\t                    [\n\t                        [500]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Poland\"\n\t                },\n\t                \"id\": \"POL\",\n\t                \"arcs\": [\n\t                    [-224, 501, 502, -428, -97, 503, 504, -221]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Puerto Rico\"\n\t                },\n\t                \"id\": \"PRI\",\n\t                \"arcs\": [\n\t                    [505]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"North Korea\"\n\t                },\n\t                \"id\": \"PRK\",\n\t                \"arcs\": [\n\t                    [506, 507, -405, 508, -169]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Portugal\"\n\t                },\n\t                \"id\": \"PRT\",\n\t                \"arcs\": [\n\t                    [-259, 509]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Paraguay\"\n\t                },\n\t                \"id\": \"PRY\",\n\t                \"arcs\": [\n\t                    [-104, -105, -26]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Qatar\"\n\t                },\n\t                \"id\": \"QAT\",\n\t                \"arcs\": [\n\t                    [510, 511]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Romania\"\n\t                },\n\t                \"id\": \"ROU\",\n\t                \"arcs\": [\n\t                    [512, -434, 513, 514, -81, 515, -333]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Russia\"\n\t                },\n\t                \"id\": \"RUS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [516]\n\t                    ],\n\t                    [\n\t                        [-503, 517, -425]\n\t                    ],\n\t                    [\n\t                        [518, 519]\n\t                    ],\n\t                    [\n\t                        [520]\n\t                    ],\n\t                    [\n\t                        [521]\n\t                    ],\n\t                    [\n\t                        [522]\n\t                    ],\n\t                    [\n\t                        [523]\n\t                    ],\n\t                    [\n\t                        [524]\n\t                    ],\n\t                    [\n\t                        [525]\n\t                    ],\n\t                    [\n\t                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n\t                    ],\n\t                    [\n\t                        [532]\n\t                    ],\n\t                    [\n\t                        [533]\n\t                    ],\n\t                    [\n\t                        [534]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Rwanda\"\n\t                },\n\t                \"id\": \"RWA\",\n\t                \"arcs\": [\n\t                    [535, -61, -198, 536]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Western Sahara\"\n\t                },\n\t                \"id\": \"ESH\",\n\t                \"arcs\": [\n\t                    [-241, -458, 537, -431]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Saudi Arabia\"\n\t                },\n\t                \"id\": \"SAU\",\n\t                \"arcs\": [\n\t                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sudan\"\n\t                },\n\t                \"id\": \"SDN\",\n\t                \"arcs\": [\n\t                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Sudan\"\n\t                },\n\t                \"id\": \"SSD\",\n\t                \"arcs\": [\n\t                    [547, -266, -396, 548, -203, -125, 549, -543]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Senegal\"\n\t                },\n\t                \"id\": \"SEN\",\n\t                \"arcs\": [\n\t                    [550, -456, -442, -301, -306, 551, -304]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Solomon Islands\"\n\t                },\n\t                \"id\": \"SLB\",\n\t                \"arcs\": [\n\t                    [\n\t                        [552]\n\t                    ],\n\t                    [\n\t                        [553]\n\t                    ],\n\t                    [\n\t                        [554]\n\t                    ],\n\t                    [\n\t                        [555]\n\t                    ],\n\t                    [\n\t                        [556]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sierra Leone\"\n\t                },\n\t                \"id\": \"SLE\",\n\t                \"arcs\": [\n\t                    [557, -298, -417]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"El Salvador\"\n\t                },\n\t                \"id\": \"SLV\",\n\t                \"arcs\": [\n\t                    [558, -317, -322]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Somaliland\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [-263, -231, 559, 560]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Somalia\"\n\t                },\n\t                \"id\": \"SOM\",\n\t                \"arcs\": [\n\t                    [-397, -264, -561, 561]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Republic of Serbia\"\n\t                },\n\t                \"id\": \"SRB\",\n\t                \"arcs\": [\n\t                    [-86, -439, -407, -446, -90, -325, -334, -516]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Suriname\"\n\t                },\n\t                \"id\": \"SUR\",\n\t                \"arcs\": [\n\t                    [562, -285, 563, -283, -110, -319]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Slovakia\"\n\t                },\n\t                \"id\": \"SVK\",\n\t                \"arcs\": [\n\t                    [-505, 564, -331, -54, -222]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Slovenia\"\n\t                },\n\t                \"id\": \"SVN\",\n\t                \"arcs\": [\n\t                    [-49, -335, -328, 565, -378]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sweden\"\n\t                },\n\t                \"id\": \"SWE\",\n\t                \"arcs\": [\n\t                    [-476, -271, 566]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Swaziland\"\n\t                },\n\t                \"id\": \"SWZ\",\n\t                \"arcs\": [\n\t                    [567, -451]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Syria\"\n\t                },\n\t                \"id\": \"SYR\",\n\t                \"arcs\": [\n\t                    [-381, -375, -415, 568, 569, -367]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Chad\"\n\t                },\n\t                \"id\": \"TCD\",\n\t                \"arcs\": [\n\t                    [-469, -422, -545, -122, -195]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Togo\"\n\t                },\n\t                \"id\": \"TGO\",\n\t                \"arcs\": [\n\t                    [570, -296, -76, -69]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Thailand\"\n\t                },\n\t                \"id\": \"THA\",\n\t                \"arcs\": [\n\t                    [571, -462, 572, -444, -411, -400]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Tajikistan\"\n\t                },\n\t                \"id\": \"TJK\",\n\t                \"arcs\": [\n\t                    [-398, -179, -3, 573]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Turkmenistan\"\n\t                },\n\t                \"id\": \"TKM\",\n\t                \"arcs\": [\n\t                    [-357, 574, -389, 575, -1]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"East Timor\"\n\t                },\n\t                \"id\": \"TLS\",\n\t                \"arcs\": [\n\t                    [576, -337]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Trinidad and Tobago\"\n\t                },\n\t                \"id\": \"TTO\",\n\t                \"arcs\": [\n\t                    [577]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Tunisia\"\n\t                },\n\t                \"id\": \"TUN\",\n\t                \"arcs\": [\n\t                    [-244, 578, -419]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Turkey\"\n\t                },\n\t                \"id\": \"TUR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [-294, -36, -361, -368, -570, 579]\n\t                    ],\n\t                    [\n\t                        [-311, -83, 580]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Taiwan\"\n\t                },\n\t                \"id\": \"TWN\",\n\t                \"arcs\": [\n\t                    [581]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Republic of Tanzania\"\n\t                },\n\t                \"id\": \"TZA\",\n\t                \"arcs\": [\n\t                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uganda\"\n\t                },\n\t                \"id\": \"UGA\",\n\t                \"arcs\": [\n\t                    [-537, -197, -549, -395, -585]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ukraine\"\n\t                },\n\t                \"id\": \"UKR\",\n\t                \"arcs\": [\n\t                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uruguay\"\n\t                },\n\t                \"id\": \"URY\",\n\t                \"arcs\": [\n\t                    [-113, 586, -28]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United States of America\"\n\t                },\n\t                \"id\": \"USA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [587]\n\t                    ],\n\t                    [\n\t                        [588]\n\t                    ],\n\t                    [\n\t                        [589]\n\t                    ],\n\t                    [\n\t                        [590]\n\t                    ],\n\t                    [\n\t                        [591]\n\t                    ],\n\t                    [\n\t                        [592, -438, 593, -139]\n\t                    ],\n\t                    [\n\t                        [594]\n\t                    ],\n\t                    [\n\t                        [595]\n\t                    ],\n\t                    [\n\t                        [596]\n\t                    ],\n\t                    [\n\t                        [-141, 597]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uzbekistan\"\n\t                },\n\t                \"id\": \"UZB\",\n\t                \"arcs\": [\n\t                    [-576, -388, -399, -574, -2]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Venezuela\"\n\t                },\n\t                \"id\": \"VEN\",\n\t                \"arcs\": [\n\t                    [598, -320, -108, -210]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Vietnam\"\n\t                },\n\t                \"id\": \"VNM\",\n\t                \"arcs\": [\n\t                    [599, -402, -413, -171]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Vanuatu\"\n\t                },\n\t                \"id\": \"VUT\",\n\t                \"arcs\": [\n\t                    [\n\t                        [600]\n\t                    ],\n\t                    [\n\t                        [601]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"West Bank\"\n\t                },\n\t                \"id\": \"PSE\",\n\t                \"arcs\": [\n\t                    [-384, -371]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Yemen\"\n\t                },\n\t                \"id\": \"YEM\",\n\t                \"arcs\": [\n\t                    [602, -542, -483]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Africa\"\n\t                },\n\t                \"id\": \"ZAF\",\n\t                \"arcs\": [\n\t                    [-467, -118, 603, -452, -568, -450, 604],\n\t                    [-424]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Zambia\"\n\t                },\n\t                \"id\": \"ZMB\",\n\t                \"arcs\": [\n\t                    [-459, -454, 605, -120, -466, -7, -200, -584]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Zimbabwe\"\n\t                },\n\t                \"id\": \"ZWE\",\n\t                \"arcs\": [\n\t                    [-604, -121, -606, -453]\n\t                ]\n\t            }]\n\t        }\n\t    },\n\t    \"arcs\": [\n\t        [\n\t            [6700, 7164],\n\t            [28, -23],\n\t            [21, 8],\n\t            [6, 27],\n\t            [22, 9],\n\t            [15, 18],\n\t            [6, 47],\n\t            [23, 11],\n\t            [5, 21],\n\t            [13, -15],\n\t            [8, -2]\n\t        ],\n\t        [\n\t            [6847, 7265],\n\t            [16, -1],\n\t            [20, -12]\n\t        ],\n\t        [\n\t            [6883, 7252],\n\t            [9, -7],\n\t            [20, 19],\n\t            [9, -12],\n\t            [9, 27],\n\t            [17, -1],\n\t            [4, 9],\n\t            [3, 24],\n\t            [12, 20],\n\t            [15, -13],\n\t            [-3, -18],\n\t            [9, -3],\n\t            [-3, -50],\n\t            [11, -19],\n\t            [10, 12],\n\t            [12, 6],\n\t            [17, 27],\n\t            [19, -5],\n\t            [29, 0]\n\t        ],\n\t        [\n\t            [7082, 7268],\n\t            [5, -17]\n\t        ],\n\t        [\n\t            [7087, 7251],\n\t            [-16, -6],\n\t            [-14, -11],\n\t            [-32, -7],\n\t            [-30, -13],\n\t            [-16, -25],\n\t            [6, -25],\n\t            [4, -30],\n\t            [-14, -25],\n\t            [1, -22],\n\t            [-8, -22],\n\t            [-26, 2],\n\t            [11, -39],\n\t            [-18, -15],\n\t            [-12, -35],\n\t            [2, -36],\n\t            [-11, -16],\n\t            [-10, 5],\n\t            [-22, -8],\n\t            [-3, -16],\n\t            [-20, 0],\n\t            [-16, -34],\n\t            [-1, -50],\n\t            [-36, -24],\n\t            [-19, 5],\n\t            [-6, -13],\n\t            [-16, 7],\n\t            [-28, -8],\n\t            [-47, 30]\n\t        ],\n\t        [\n\t            [6690, 6820],\n\t            [25, 53],\n\t            [-2, 38],\n\t            [-21, 10],\n\t            [-2, 38],\n\t            [-9, 47],\n\t            [12, 32],\n\t            [-12, 9],\n\t            [7, 43],\n\t            [12, 74]\n\t        ],\n\t        [\n\t            [5664, 4412],\n\t            [3, -18],\n\t            [-4, -29],\n\t            [5, -28],\n\t            [-4, -22],\n\t            [3, -20],\n\t            [-58, 1],\n\t            [-2, -188],\n\t            [19, -49],\n\t            [18, -37]\n\t        ],\n\t        [\n\t            [5644, 4022],\n\t            [-51, -24],\n\t            [-67, 9],\n\t            [-19, 28],\n\t            [-113, -3],\n\t            [-4, -4],\n\t            [-17, 27],\n\t            [-18, 2],\n\t            [-16, -10],\n\t            [-14, -12]\n\t        ],\n\t        [\n\t            [5325, 4035],\n\t            [-2, 38],\n\t            [4, 51],\n\t            [9, 55],\n\t            [2, 25],\n\t            [9, 53],\n\t            [6, 24],\n\t            [16, 39],\n\t            [9, 26],\n\t            [3, 44],\n\t            [-1, 34],\n\t            [-9, 21],\n\t            [-7, 36],\n\t            [-7, 35],\n\t            [2, 12],\n\t            [8, 24],\n\t            [-8, 57],\n\t            [-6, 39],\n\t            [-14, 38],\n\t            [3, 11]\n\t        ],\n\t        [\n\t            [5342, 4697],\n\t            [11, 8],\n\t            [8, -1],\n\t            [10, 7],\n\t            [82, -1],\n\t            [7, -44],\n\t            [8, -35],\n\t            [6, -19],\n\t            [11, -31],\n\t            [18, 5],\n\t            [9, 8],\n\t            [16, -8],\n\t            [4, 14],\n\t            [7, 35],\n\t            [17, 2],\n\t            [2, 10],\n\t            [14, 1],\n\t            [-3, -22],\n\t            [34, 1],\n\t            [1, -37],\n\t            [5, -23],\n\t            [-4, -36],\n\t            [2, -36],\n\t            [9, -22],\n\t            [-1, -70],\n\t            [7, 5],\n\t            [12, -1],\n\t            [17, 8],\n\t            [13, -3]\n\t        ],\n\t        [\n\t            [5338, 4715],\n\t            [-8, 45]\n\t        ],\n\t        [\n\t            [5330, 4760],\n\t            [12, 25],\n\t            [8, 10],\n\t            [10, -20]\n\t        ],\n\t        [\n\t            [5360, 4775],\n\t            [-10, -12],\n\t            [-4, -16],\n\t            [-1, -25],\n\t            [-7, -7]\n\t        ],\n\t        [\n\t            [5571, 7530],\n\t            [-3, -20],\n\t            [4, -25],\n\t            [11, -15]\n\t        ],\n\t        [\n\t            [5583, 7470],\n\t            [0, -15],\n\t            [-9, -9],\n\t            [-2, -19],\n\t            [-13, -29]\n\t        ],\n\t        [\n\t            [5559, 7398],\n\t            [-5, 5],\n\t            [0, 13],\n\t            [-15, 19],\n\t            [-3, 29],\n\t            [2, 40],\n\t            [4, 18],\n\t            [-4, 10]\n\t        ],\n\t        [\n\t            [5538, 7532],\n\t            [-2, 18],\n\t            [12, 29],\n\t            [1, -11],\n\t            [8, 6]\n\t        ],\n\t        [\n\t            [5557, 7574],\n\t            [6, -16],\n\t            [7, -6],\n\t            [1, -22]\n\t        ],\n\t        [\n\t            [6432, 6490],\n\t            [5, 3],\n\t            [1, -16],\n\t            [22, 9],\n\t            [23, -2],\n\t            [17, -1],\n\t            [19, 39],\n\t            [20, 38],\n\t            [18, 37]\n\t        ],\n\t        [\n\t            [6557, 6597],\n\t            [5, -20]\n\t        ],\n\t        [\n\t            [6562, 6577],\n\t            [4, -47]\n\t        ],\n\t        [\n\t            [6566, 6530],\n\t            [-14, 0],\n\t            [-3, -39],\n\t            [5, -8],\n\t            [-12, -12],\n\t            [0, -24],\n\t            [-8, -24],\n\t            [-1, -24]\n\t        ],\n\t        [\n\t            [6533, 6399],\n\t            [-6, -12],\n\t            [-83, 29],\n\t            [-11, 60],\n\t            [-1, 14]\n\t        ],\n\t        [\n\t            [3140, 1814],\n\t            [-17, 2],\n\t            [-30, 0],\n\t            [0, 132]\n\t        ],\n\t        [\n\t            [3093, 1948],\n\t            [11, -27],\n\t            [14, -45],\n\t            [36, -35],\n\t            [39, -15],\n\t            [-13, -30],\n\t            [-26, -2],\n\t            [-14, 20]\n\t        ],\n\t        [\n\t            [3258, 3743],\n\t            [51, -96],\n\t            [23, -9],\n\t            [34, -44],\n\t            [29, -23],\n\t            [4, -26],\n\t            [-28, -90],\n\t            [28, -16],\n\t            [32, -9],\n\t            [22, 10],\n\t            [25, 45],\n\t            [4, 52]\n\t        ],\n\t        [\n\t            [3482, 3537],\n\t            [14, 11],\n\t            [14, -34],\n\t            [-1, -47],\n\t            [-23, -33],\n\t            [-19, -24],\n\t            [-31, -57],\n\t            [-37, -81]\n\t        ],\n\t        [\n\t            [3399, 3272],\n\t            [-7, -47],\n\t            [-7, -61],\n\t            [0, -58],\n\t            [-6, -14],\n\t            [-2, -38]\n\t        ],\n\t        [\n\t            [3377, 3054],\n\t            [-2, -31],\n\t            [35, -50],\n\t            [-4, -41],\n\t            [18, -26],\n\t            [-2, -29],\n\t            [-26, -75],\n\t            [-42, -32],\n\t            [-55, -12],\n\t            [-31, 6],\n\t            [6, -36],\n\t            [-6, -44],\n\t            [5, -30],\n\t            [-16, -20],\n\t            [-29, -8],\n\t            [-26, 21],\n\t            [-11, -15],\n\t            [4, -59],\n\t            [18, -18],\n\t            [16, 19],\n\t            [8, -31],\n\t            [-26, -18],\n\t            [-22, -37],\n\t            [-4, -59],\n\t            [-7, -32],\n\t            [-26, 0],\n\t            [-22, -31],\n\t            [-8, -44],\n\t            [28, -43],\n\t            [26, -12],\n\t            [-9, -53],\n\t            [-33, -33],\n\t            [-18, -70],\n\t            [-25, -23],\n\t            [-12, -28],\n\t            [9, -61],\n\t            [19, -34],\n\t            [-12, 3]\n\t        ],\n\t        [\n\t            [3095, 1968],\n\t            [-26, 9],\n\t            [-67, 8],\n\t            [-11, 34],\n\t            [0, 45],\n\t            [-18, -4],\n\t            [-10, 21],\n\t            [-3, 63],\n\t            [22, 26],\n\t            [9, 37],\n\t            [-4, 30],\n\t            [15, 51],\n\t            [10, 78],\n\t            [-3, 35],\n\t            [12, 11],\n\t            [-3, 22],\n\t            [-13, 12],\n\t            [10, 25],\n\t            [-13, 22],\n\t            [-6, 68],\n\t            [11, 12],\n\t            [-5, 72],\n\t            [7, 61],\n\t            [7, 52],\n\t            [17, 22],\n\t            [-9, 58],\n\t            [0, 54],\n\t            [21, 38],\n\t            [-1, 50],\n\t            [16, 57],\n\t            [0, 55],\n\t            [-7, 11],\n\t            [-13, 102],\n\t            [17, 60],\n\t            [-2, 58],\n\t            [10, 53],\n\t            [18, 56],\n\t            [20, 36],\n\t            [-9, 24],\n\t            [6, 19],\n\t            [-1, 98],\n\t            [30, 29],\n\t            [10, 62],\n\t            [-3, 14]\n\t        ],\n\t        [\n\t            [3136, 3714],\n\t            [23, 54],\n\t            [36, -15],\n\t            [16, -42],\n\t            [11, 47],\n\t            [32, -2],\n\t            [4, -13]\n\t        ],\n\t        [\n\t            [6210, 7485],\n\t            [39, 9]\n\t        ],\n\t        [\n\t            [6249, 7494],\n\t            [5, -15],\n\t            [11, -10],\n\t            [-6, -15],\n\t            [15, -21],\n\t            [-8, -18],\n\t            [12, -16],\n\t            [13, -10],\n\t            [0, -41]\n\t        ],\n\t        [\n\t            [6291, 7348],\n\t            [-10, -2]\n\t        ],\n\t        [\n\t            [6281, 7346],\n\t            [-11, 34],\n\t            [0, 10],\n\t            [-12, -1],\n\t            [-9, 16],\n\t            [-5, -1]\n\t        ],\n\t        [\n\t            [6244, 7404],\n\t            [-11, 17],\n\t            [-21, 15],\n\t            [3, 28],\n\t            [-5, 21]\n\t        ],\n\t        [\n\t            [3345, 329],\n\t            [-8, -30],\n\t            [-8, -27],\n\t            [-59, 8],\n\t            [-62, -3],\n\t            [-34, 20],\n\t            [0, 2],\n\t            [-16, 17],\n\t            [63, -2],\n\t            [60, -6],\n\t            [20, 24],\n\t            [15, 21],\n\t            [29, -24]\n\t        ],\n\t        [\n\t            [577, 361],\n\t            [-53, -8],\n\t            [-36, 21],\n\t            [-17, 21],\n\t            [-1, 3],\n\t            [-18, 16],\n\t            [17, 22],\n\t            [52, -9],\n\t            [28, -18],\n\t            [21, -21],\n\t            [7, -27]\n\t        ],\n\t        [\n\t            [3745, 447],\n\t            [35, -26],\n\t            [12, -36],\n\t            [3, -25],\n\t            [1, -30],\n\t            [-43, -19],\n\t            [-45, -15],\n\t            [-52, -14],\n\t            [-59, -11],\n\t            [-65, 3],\n\t            [-37, 20],\n\t            [5, 24],\n\t            [59, 16],\n\t            [24, 20],\n\t            [18, 26],\n\t            [12, 22],\n\t            [17, 20],\n\t            [18, 25],\n\t            [14, 0],\n\t            [41, 12],\n\t            [42, -12]\n\t        ],\n\t        [\n\t            [1633, 715],\n\t            [36, -9],\n\t            [33, 10],\n\t            [-16, -20],\n\t            [-26, -15],\n\t            [-39, 4],\n\t            [-27, 21],\n\t            [6, 20],\n\t            [33, -11]\n\t        ],\n\t        [\n\t            [1512, 716],\n\t            [43, -23],\n\t            [-17, 3],\n\t            [-36, 5],\n\t            [-38, 17],\n\t            [20, 12],\n\t            [28, -14]\n\t        ],\n\t        [\n\t            [2250, 808],\n\t            [31, -8],\n\t            [30, 7],\n\t            [17, -34],\n\t            [-22, 5],\n\t            [-34, -2],\n\t            [-34, 2],\n\t            [-38, -4],\n\t            [-28, 12],\n\t            [-15, 24],\n\t            [18, 11],\n\t            [35, -8],\n\t            [40, -5]\n\t        ],\n\t        [\n\t            [3098, 866],\n\t            [4, -27],\n\t            [-5, -23],\n\t            [-8, -22],\n\t            [-33, -8],\n\t            [-31, -12],\n\t            [-36, 1],\n\t            [14, 24],\n\t            [-33, -9],\n\t            [-31, -8],\n\t            [-21, 18],\n\t            [-2, 24],\n\t            [30, 23],\n\t            [20, 7],\n\t            [32, -2],\n\t            [8, 30],\n\t            [1, 22],\n\t            [0, 47],\n\t            [16, 28],\n\t            [25, 9],\n\t            [15, -22],\n\t            [6, -22],\n\t            [12, -26],\n\t            [10, -26],\n\t            [7, -26]\n\t        ],\n\t        [\n\t            [3371, 1268],\n\t            [-11, -13],\n\t            [-21, 9],\n\t            [-23, -6],\n\t            [-19, -14],\n\t            [-20, -15],\n\t            [-14, -17],\n\t            [-4, -23],\n\t            [2, -22],\n\t            [13, -20],\n\t            [-19, -14],\n\t            [-26, -4],\n\t            [-15, -20],\n\t            [-17, -19],\n\t            [-17, -25],\n\t            [-4, -22],\n\t            [9, -24],\n\t            [15, -19],\n\t            [23, -14],\n\t            [21, -18],\n\t            [12, -23],\n\t            [6, -22],\n\t            [8, -24],\n\t            [13, -19],\n\t            [8, -22],\n\t            [4, -55],\n\t            [8, -22],\n\t            [2, -23],\n\t            [9, -23],\n\t            [-4, -31],\n\t            [-15, -24],\n\t            [-17, -20],\n\t            [-37, -8],\n\t            [-12, -21],\n\t            [-17, -20],\n\t            [-42, -22],\n\t            [-37, -9],\n\t            [-35, -13],\n\t            [-37, -13],\n\t            [-22, -24],\n\t            [-45, -2],\n\t            [-49, 2],\n\t            [-44, -4],\n\t            [-47, 0],\n\t            [9, -24],\n\t            [42, -10],\n\t            [31, -16],\n\t            [18, -21],\n\t            [-31, -19],\n\t            [-48, 6],\n\t            [-40, -15],\n\t            [-2, -24],\n\t            [-1, -23],\n\t            [33, -20],\n\t            [6, -22],\n\t            [35, -22],\n\t            [59, -9],\n\t            [50, -16],\n\t            [40, -19],\n\t            [50, -18],\n\t            [70, -10],\n\t            [68, -16],\n\t            [47, -17],\n\t            [52, -20],\n\t            [27, -28],\n\t            [13, -22],\n\t            [34, 21],\n\t            [46, 17],\n\t            [48, 19],\n\t            [58, 15],\n\t            [49, 16],\n\t            [69, 1],\n\t            [68, -8],\n\t            [56, -14],\n\t            [18, 26],\n\t            [39, 17],\n\t            [70, 1],\n\t            [55, 13],\n\t            [52, 13],\n\t            [58, 8],\n\t            [62, 10],\n\t            [43, 15],\n\t            [-20, 21],\n\t            [-12, 21],\n\t            [0, 22],\n\t            [-54, -2],\n\t            [-57, -10],\n\t            [-54, 0],\n\t            [-8, 22],\n\t            [4, 44],\n\t            [12, 13],\n\t            [40, 14],\n\t            [47, 14],\n\t            [34, 17],\n\t            [33, 18],\n\t            [25, 23],\n\t            [38, 10],\n\t            [38, 8],\n\t            [19, 5],\n\t            [43, 2],\n\t            [41, 8],\n\t            [34, 12],\n\t            [34, 14],\n\t            [30, 14],\n\t            [39, 18],\n\t            [24, 20],\n\t            [26, 17],\n\t            [9, 24],\n\t            [-30, 13],\n\t            [10, 25],\n\t            [18, 18],\n\t            [29, 12],\n\t            [31, 14],\n\t            [28, 18],\n\t            [22, 23],\n\t            [13, 28],\n\t            [21, 16],\n\t            [33, -3],\n\t            [13, -20],\n\t            [34, -2],\n\t            [1, 22],\n\t            [14, 23],\n\t            [30, -6],\n\t            [7, -22],\n\t            [33, -3],\n\t            [36, 10],\n\t            [35, 7],\n\t            [31, -3],\n\t            [12, -25],\n\t            [31, 20],\n\t            [28, 10],\n\t            [31, 9],\n\t            [31, 8],\n\t            [29, 14],\n\t            [31, 9],\n\t            [24, 13],\n\t            [17, 20],\n\t            [20, -15],\n\t            [29, 8],\n\t            [20, -27],\n\t            [16, -21],\n\t            [32, 11],\n\t            [12, 24],\n\t            [28, 16],\n\t            [37, -4],\n\t            [11, -22],\n\t            [22, 22],\n\t            [30, 7],\n\t            [33, 3],\n\t            [29, -2],\n\t            [31, -7],\n\t            [30, -3],\n\t            [13, -20],\n\t            [18, -17],\n\t            [31, 10],\n\t            [32, 3],\n\t            [32, 0],\n\t            [31, 1],\n\t            [28, 8],\n\t            [29, 7],\n\t            [25, 16],\n\t            [26, 11],\n\t            [28, 5],\n\t            [21, 17],\n\t            [15, 32],\n\t            [16, 20],\n\t            [29, -10],\n\t            [11, -21],\n\t            [24, -13],\n\t            [29, 4],\n\t            [19, -21],\n\t            [21, -15],\n\t            [28, 14],\n\t            [10, 26],\n\t            [25, 10],\n\t            [29, 20],\n\t            [27, 8],\n\t            [33, 11],\n\t            [22, 13],\n\t            [22, 14],\n\t            [22, 13],\n\t            [26, -7],\n\t            [25, 21],\n\t            [18, 16],\n\t            [26, -1],\n\t            [23, 14],\n\t            [6, 21],\n\t            [23, 16],\n\t            [23, 11],\n\t            [28, 10],\n\t            [25, 4],\n\t            [25, -3],\n\t            [26, -6],\n\t            [22, -16],\n\t            [3, -26],\n\t            [24, -19],\n\t            [17, -17],\n\t            [33, -7],\n\t            [19, -16],\n\t            [23, -16],\n\t            [26, -3],\n\t            [23, 11],\n\t            [24, 24],\n\t            [26, -12],\n\t            [27, -7],\n\t            [26, -7],\n\t            [27, -5],\n\t            [28, 0],\n\t            [23, -61],\n\t            [-1, -15],\n\t            [-4, -27],\n\t            [-26, -15],\n\t            [-22, -22],\n\t            [4, -23],\n\t            [31, 1],\n\t            [-4, -23],\n\t            [-14, -22],\n\t            [-13, -24],\n\t            [21, -19],\n\t            [32, -6],\n\t            [32, 11],\n\t            [15, 23],\n\t            [10, 22],\n\t            [15, 18],\n\t            [17, 18],\n\t            [7, 21],\n\t            [15, 29],\n\t            [18, 5],\n\t            [31, 3],\n\t            [28, 7],\n\t            [28, 9],\n\t            [14, 23],\n\t            [8, 22],\n\t            [19, 22],\n\t            [27, 15],\n\t            [23, 12],\n\t            [16, 19],\n\t            [15, 11],\n\t            [21, 9],\n\t            [27, -6],\n\t            [25, 6],\n\t            [28, 7],\n\t            [30, -4],\n\t            [20, 17],\n\t            [14, 39],\n\t            [11, -16],\n\t            [13, -28],\n\t            [23, -12],\n\t            [27, -4],\n\t            [26, 7],\n\t            [29, -5],\n\t            [26, -1],\n\t            [17, 6],\n\t            [24, -4],\n\t            [21, -12],\n\t            [25, 8],\n\t            [30, 0],\n\t            [25, 8],\n\t            [29, -8],\n\t            [19, 19],\n\t            [14, 20],\n\t            [19, 16],\n\t            [35, 44],\n\t            [18, -8],\n\t            [21, -16],\n\t            [18, -21],\n\t            [36, -36],\n\t            [27, -1],\n\t            [25, 0],\n\t            [30, 7],\n\t            [30, 8],\n\t            [23, 16],\n\t            [19, 18],\n\t            [31, 2],\n\t            [21, 13],\n\t            [22, -12],\n\t            [14, -18],\n\t            [19, -19],\n\t            [31, 2],\n\t            [19, -15],\n\t            [33, -15],\n\t            [35, -5],\n\t            [29, 4],\n\t            [21, 19],\n\t            [19, 18],\n\t            [25, 5],\n\t            [25, -8],\n\t            [29, -6],\n\t            [26, 9],\n\t            [25, 0],\n\t            [24, -6],\n\t            [26, -5],\n\t            [25, 10],\n\t            [30, 9],\n\t            [28, 3],\n\t            [32, 0],\n\t            [25, 5],\n\t            [25, 5],\n\t            [8, 29],\n\t            [1, 24],\n\t            [17, -16],\n\t            [5, -27],\n\t            [10, -24],\n\t            [11, -20],\n\t            [23, -10],\n\t            [32, 4],\n\t            [36, 1],\n\t            [25, 3],\n\t            [37, 0],\n\t            [26, 1],\n\t            [36, -2],\n\t            [31, -5],\n\t            [20, -18],\n\t            [-5, -22],\n\t            [18, -18],\n\t            [30, -13],\n\t            [31, -15],\n\t            [35, -11],\n\t            [38, -9],\n\t            [28, -9],\n\t            [32, -2],\n\t            [18, 20],\n\t            [24, -16],\n\t            [21, -19],\n\t            [25, -13],\n\t            [34, -6],\n\t            [32, -7],\n\t            [13, -23],\n\t            [32, -14],\n\t            [21, -21],\n\t            [31, -9],\n\t            [32, 1],\n\t            [30, -4],\n\t            [33, 1],\n\t            [34, -4],\n\t            [31, -8],\n\t            [28, -14],\n\t            [29, -12],\n\t            [20, -17],\n\t            [-3, -23],\n\t            [-15, -21],\n\t            [-13, -27],\n\t            [-9, -21],\n\t            [-14, -24],\n\t            [-36, -9],\n\t            [-16, -21],\n\t            [-36, -13],\n\t            [-13, -23],\n\t            [-19, -22],\n\t            [-20, -18],\n\t            [-11, -25],\n\t            [-7, -22],\n\t            [-3, -26],\n\t            [0, -22],\n\t            [16, -23],\n\t            [6, -22],\n\t            [13, -21],\n\t            [52, -8],\n\t            [11, -26],\n\t            [-50, -9],\n\t            [-43, -13],\n\t            [-52, -2],\n\t            [-24, -34],\n\t            [-5, -27],\n\t            [-12, -22],\n\t            [-14, -22],\n\t            [37, -20],\n\t            [14, -24],\n\t            [24, -22],\n\t            [33, -20],\n\t            [39, -19],\n\t            [42, -18],\n\t            [64, -19],\n\t            [14, -29],\n\t            [80, -12],\n\t            [5, -5],\n\t            [21, -17],\n\t            [77, 15],\n\t            [63, -19],\n\t            [48, -14],\n\t            [-9997, -1],\n\t            [24, 35],\n\t            [50, -19],\n\t            [3, 2],\n\t            [30, 19],\n\t            [4, 0],\n\t            [3, -1],\n\t            [40, -25],\n\t            [35, 25],\n\t            [7, 3],\n\t            [81, 11],\n\t            [27, -14],\n\t            [13, -7],\n\t            [41, -20],\n\t            [79, -15],\n\t            [63, -18],\n\t            [107, -14],\n\t            [80, 16],\n\t            [118, -11],\n\t            [67, -19],\n\t            [73, 17],\n\t            [78, 17],\n\t            [6, 27],\n\t            [-110, 3],\n\t            [-89, 14],\n\t            [-24, 23],\n\t            [-74, 12],\n\t            [5, 27],\n\t            [10, 24],\n\t            [10, 22],\n\t            [-5, 25],\n\t            [-46, 16],\n\t            [-22, 21],\n\t            [-43, 18],\n\t            [68, -3],\n\t            [64, 9],\n\t            [40, -20],\n\t            [50, 18],\n\t            [45, 22],\n\t            [23, 19],\n\t            [-10, 25],\n\t            [-36, 16],\n\t            [-41, 17],\n\t            [-57, 4],\n\t            [-50, 8],\n\t            [-54, 6],\n\t            [-18, 22],\n\t            [-36, 18],\n\t            [-21, 21],\n\t            [-9, 67],\n\t            [14, -6],\n\t            [25, -18],\n\t            [45, 6],\n\t            [44, 8],\n\t            [23, -26],\n\t            [44, 6],\n\t            [37, 13],\n\t            [35, 16],\n\t            [32, 20],\n\t            [41, 5],\n\t            [-1, 22],\n\t            [-9, 22],\n\t            [8, 21],\n\t            [36, 11],\n\t            [16, -20],\n\t            [42, 12],\n\t            [32, 15],\n\t            [40, 1],\n\t            [38, 6],\n\t            [37, 13],\n\t            [30, 13],\n\t            [34, 13],\n\t            [22, -4],\n\t            [19, -4],\n\t            [41, 8],\n\t            [37, -10],\n\t            [38, 1],\n\t            [37, 8],\n\t            [37, -6],\n\t            [41, -6],\n\t            [39, 3],\n\t            [40, -2],\n\t            [42, -1],\n\t            [38, 3],\n\t            [28, 17],\n\t            [34, 9],\n\t            [35, -13],\n\t            [33, 11],\n\t            [30, 21],\n\t            [18, -19],\n\t            [9, -21],\n\t            [18, -19],\n\t            [29, 17],\n\t            [33, -22],\n\t            [38, -7],\n\t            [32, -16],\n\t            [39, 3],\n\t            [36, 11],\n\t            [41, -3],\n\t            [38, -8],\n\t            [38, -10],\n\t            [15, 25],\n\t            [-18, 20],\n\t            [-14, 21],\n\t            [-36, 5],\n\t            [-15, 22],\n\t            [-6, 22],\n\t            [-10, 43],\n\t            [21, -8],\n\t            [36, -3],\n\t            [36, 3],\n\t            [33, -9],\n\t            [28, -17],\n\t            [12, -21],\n\t            [38, -4],\n\t            [36, 9],\n\t            [38, 11],\n\t            [34, 7],\n\t            [28, -14],\n\t            [37, 5],\n\t            [24, 45],\n\t            [23, -27],\n\t            [32, -10],\n\t            [34, 6],\n\t            [23, -23],\n\t            [37, -3],\n\t            [33, -7],\n\t            [34, -12],\n\t            [21, 22],\n\t            [11, 20],\n\t            [28, -23],\n\t            [38, 6],\n\t            [28, -13],\n\t            [19, -19],\n\t            [37, 5],\n\t            [29, 13],\n\t            [29, 15],\n\t            [33, 8],\n\t            [39, 7],\n\t            [36, 8],\n\t            [27, 13],\n\t            [16, 19],\n\t            [7, 25],\n\t            [-3, 24],\n\t            [-9, 24],\n\t            [-10, 23],\n\t            [-9, 23],\n\t            [-7, 21],\n\t            [-1, 23],\n\t            [2, 23],\n\t            [13, 22],\n\t            [11, 24],\n\t            [5, 23],\n\t            [-6, 26],\n\t            [-3, 23],\n\t            [14, 27],\n\t            [15, 17],\n\t            [18, 22],\n\t            [19, 19],\n\t            [22, 17],\n\t            [11, 25],\n\t            [15, 17],\n\t            [18, 15],\n\t            [26, 3],\n\t            [18, 19],\n\t            [19, 11],\n\t            [23, 7],\n\t            [20, 15],\n\t            [16, 19],\n\t            [22, 7],\n\t            [16, -15],\n\t            [-10, -20],\n\t            [-29, -17]\n\t        ],\n\t        [\n\t            [6914, 2185],\n\t            [18, -19],\n\t            [26, -7],\n\t            [1, -11],\n\t            [-7, -27],\n\t            [-43, -4],\n\t            [-1, 31],\n\t            [4, 25],\n\t            [2, 12]\n\t        ],\n\t        [\n\t            [9038, 2648],\n\t            [27, -21],\n\t            [15, 8],\n\t            [22, 12],\n\t            [16, -4],\n\t            [2, -70],\n\t            [-9, -21],\n\t            [-3, -47],\n\t            [-10, 16],\n\t            [-19, -41],\n\t            [-6, 3],\n\t            [-17, 2],\n\t            [-17, 50],\n\t            [-4, 39],\n\t            [-16, 52],\n\t            [1, 27],\n\t            [18, -5]\n\t        ],\n\t        [\n\t            [8987, 4244],\n\t            [10, -46],\n\t            [18, 22],\n\t            [9, -25],\n\t            [13, -23],\n\t            [-3, -26],\n\t            [6, -51],\n\t            [5, -29],\n\t            [7, -7],\n\t            [7, -51],\n\t            [-3, -30],\n\t            [9, -40],\n\t            [31, -31],\n\t            [19, -28],\n\t            [19, -26],\n\t            [-4, -14],\n\t            [16, -37],\n\t            [11, -64],\n\t            [11, 13],\n\t            [11, -26],\n\t            [7, 9],\n\t            [5, -63],\n\t            [19, -36],\n\t            [13, -22],\n\t            [22, -48],\n\t            [8, -48],\n\t            [1, -33],\n\t            [-2, -37],\n\t            [13, -50],\n\t            [-2, -52],\n\t            [-5, -28],\n\t            [-7, -52],\n\t            [1, -34],\n\t            [-6, -43],\n\t            [-12, -53],\n\t            [-21, -29],\n\t            [-10, -46],\n\t            [-9, -29],\n\t            [-8, -51],\n\t            [-11, -30],\n\t            [-7, -44],\n\t            [-4, -41],\n\t            [2, -18],\n\t            [-16, -21],\n\t            [-31, -2],\n\t            [-26, -24],\n\t            [-13, -23],\n\t            [-17, -26],\n\t            [-23, 27],\n\t            [-17, 10],\n\t            [5, 31],\n\t            [-15, -11],\n\t            [-25, -43],\n\t            [-24, 16],\n\t            [-15, 9],\n\t            [-16, 4],\n\t            [-27, 17],\n\t            [-18, 37],\n\t            [-5, 45],\n\t            [-7, 30],\n\t            [-13, 24],\n\t            [-27, 7],\n\t            [9, 28],\n\t            [-7, 44],\n\t            [-13, -41],\n\t            [-25, -11],\n\t            [14, 33],\n\t            [5, 34],\n\t            [10, 29],\n\t            [-2, 44],\n\t            [-22, -50],\n\t            [-18, -21],\n\t            [-10, -47],\n\t            [-22, 25],\n\t            [1, 31],\n\t            [-18, 43],\n\t            [-14, 22],\n\t            [5, 14],\n\t            [-36, 35],\n\t            [-19, 2],\n\t            [-27, 29],\n\t            [-50, -6],\n\t            [-36, -21],\n\t            [-31, -20],\n\t            [-27, 4],\n\t            [-29, -30],\n\t            [-24, -14],\n\t            [-6, -31],\n\t            [-10, -24],\n\t            [-23, -1],\n\t            [-18, -5],\n\t            [-24, 10],\n\t            [-20, -6],\n\t            [-19, -3],\n\t            [-17, -31],\n\t            [-8, 2],\n\t            [-14, -16],\n\t            [-13, -19],\n\t            [-21, 2],\n\t            [-18, 0],\n\t            [-30, 38],\n\t            [-15, 11],\n\t            [1, 34],\n\t            [14, 8],\n\t            [4, 14],\n\t            [-1, 21],\n\t            [4, 41],\n\t            [-3, 35],\n\t            [-15, 60],\n\t            [-4, 33],\n\t            [1, 34],\n\t            [-11, 38],\n\t            [-1, 18],\n\t            [-12, 23],\n\t            [-4, 47],\n\t            [-16, 46],\n\t            [-4, 26],\n\t            [13, -26],\n\t            [-10, 55],\n\t            [14, -17],\n\t            [8, -23],\n\t            [0, 30],\n\t            [-14, 47],\n\t            [-3, 18],\n\t            [-6, 18],\n\t            [3, 34],\n\t            [6, 15],\n\t            [4, 29],\n\t            [-3, 35],\n\t            [11, 42],\n\t            [2, -45],\n\t            [12, 41],\n\t            [22, 20],\n\t            [14, 25],\n\t            [21, 22],\n\t            [13, 4],\n\t            [7, -7],\n\t            [22, 22],\n\t            [17, 6],\n\t            [4, 13],\n\t            [8, 6],\n\t            [15, -2],\n\t            [29, 18],\n\t            [15, 26],\n\t            [7, 31],\n\t            [17, 30],\n\t            [1, 24],\n\t            [1, 32],\n\t            [19, 50],\n\t            [12, -51],\n\t            [12, 12],\n\t            [-10, 28],\n\t            [9, 29],\n\t            [12, -13],\n\t            [3, 45],\n\t            [15, 29],\n\t            [7, 23],\n\t            [14, 10],\n\t            [0, 17],\n\t            [13, -7],\n\t            [0, 15],\n\t            [12, 8],\n\t            [14, 8],\n\t            [20, -27],\n\t            [16, -35],\n\t            [17, 0],\n\t            [18, -6],\n\t            [-6, 33],\n\t            [13, 47],\n\t            [13, 15],\n\t            [-5, 15],\n\t            [12, 34],\n\t            [17, 21],\n\t            [14, -7],\n\t            [24, 11],\n\t            [-1, 30],\n\t            [-20, 19],\n\t            [15, 9],\n\t            [18, -15],\n\t            [15, -24],\n\t            [23, -15],\n\t            [8, 6],\n\t            [17, -18],\n\t            [17, 17],\n\t            [10, -5],\n\t            [7, 11],\n\t            [12, -29],\n\t            [-7, -32],\n\t            [-11, -24],\n\t            [-9, -2],\n\t            [3, -23],\n\t            [-8, -30],\n\t            [-10, -29],\n\t            [2, -17],\n\t            [22, -32],\n\t            [21, -19],\n\t            [15, -20],\n\t            [20, -35],\n\t            [8, 0],\n\t            [14, -15],\n\t            [4, -19],\n\t            [27, -20],\n\t            [18, 20],\n\t            [6, 32],\n\t            [5, 26],\n\t            [4, 33],\n\t            [8, 47],\n\t            [-4, 28],\n\t            [2, 17],\n\t            [-3, 34],\n\t            [4, 45],\n\t            [5, 12],\n\t            [-4, 20],\n\t            [7, 31],\n\t            [5, 32],\n\t            [1, 17],\n\t            [10, 22],\n\t            [8, -29],\n\t            [2, -37],\n\t            [7, -7],\n\t            [1, -25],\n\t            [10, -30],\n\t            [2, -33],\n\t            [-1, -22]\n\t        ],\n\t        [\n\t            [5471, 7900],\n\t            [-2, -24],\n\t            [-16, 0],\n\t            [6, -13],\n\t            [-9, -38]\n\t        ],\n\t        [\n\t            [5450, 7825],\n\t            [-6, -10],\n\t            [-24, -1],\n\t            [-14, -13],\n\t            [-23, 4]\n\t        ],\n\t        [\n\t            [5383, 7805],\n\t            [-40, 15],\n\t            [-6, 21],\n\t            [-27, -10],\n\t            [-4, -12],\n\t            [-16, 9]\n\t        ],\n\t        [\n\t            [5290, 7828],\n\t            [-15, 1],\n\t            [-12, 11],\n\t            [4, 15],\n\t            [-1, 10]\n\t        ],\n\t        [\n\t            [5266, 7865],\n\t            [8, 3],\n\t            [14, -16],\n\t            [4, 16],\n\t            [25, -3],\n\t            [20, 11],\n\t            [13, -2],\n\t            [9, -12],\n\t            [2, 10],\n\t            [-4, 38],\n\t            [10, 8],\n\t            [10, 27]\n\t        ],\n\t        [\n\t            [5377, 7945],\n\t            [21, -19],\n\t            [15, 24],\n\t            [10, 5],\n\t            [22, -18],\n\t            [13, 3],\n\t            [13, -12]\n\t        ],\n\t        [\n\t            [5471, 7928],\n\t            [-3, -7],\n\t            [3, -21]\n\t        ],\n\t        [\n\t            [6281, 7346],\n\t            [-19, 8],\n\t            [-14, 27],\n\t            [-4, 23]\n\t        ],\n\t        [\n\t            [6349, 7527],\n\t            [15, -31],\n\t            [14, -42],\n\t            [13, -2],\n\t            [8, -16],\n\t            [-23, -5],\n\t            [-5, -46],\n\t            [-4, -21],\n\t            [-11, -13],\n\t            [1, -30]\n\t        ],\n\t        [\n\t            [6357, 7321],\n\t            [-7, -3],\n\t            [-17, 31],\n\t            [10, 30],\n\t            [-9, 17],\n\t            [-10, -4],\n\t            [-33, -44]\n\t        ],\n\t        [\n\t            [6249, 7494],\n\t            [6, 10],\n\t            [21, -17],\n\t            [15, -4],\n\t            [4, 7],\n\t            [-14, 32],\n\t            [7, 9]\n\t        ],\n\t        [\n\t            [6288, 7531],\n\t            [8, -2],\n\t            [19, -36],\n\t            [13, -4],\n\t            [4, 15],\n\t            [17, 23]\n\t        ],\n\t        [\n\t            [5814, 4792],\n\t            [-1, 71],\n\t            [-7, 27]\n\t        ],\n\t        [\n\t            [5806, 4890],\n\t            [17, -5],\n\t            [8, 34],\n\t            [15, -4]\n\t        ],\n\t        [\n\t            [5846, 4915],\n\t            [1, -23],\n\t            [6, -14],\n\t            [1, -19],\n\t            [-7, -12],\n\t            [-11, -31],\n\t            [-10, -22],\n\t            [-12, -2]\n\t        ],\n\t        [\n\t            [5092, 8091],\n\t            [20, -5],\n\t            [26, 12],\n\t            [17, -25],\n\t            [16, -14]\n\t        ],\n\t        [\n\t            [5171, 8059],\n\t            [-4, -40]\n\t        ],\n\t        [\n\t            [5167, 8019],\n\t            [-7, -2],\n\t            [-3, -33]\n\t        ],\n\t        [\n\t            [5157, 7984],\n\t            [-24, 26],\n\t            [-14, -4],\n\t            [-20, 28],\n\t            [-13, 23],\n\t            [-13, 1],\n\t            [-4, 21]\n\t        ],\n\t        [\n\t            [5069, 8079],\n\t            [23, 12]\n\t        ],\n\t        [\n\t            [5074, 5427],\n\t            [-23, -7]\n\t        ],\n\t        [\n\t            [5051, 5420],\n\t            [-7, 41],\n\t            [2, 136],\n\t            [-6, 12],\n\t            [-1, 29],\n\t            [-10, 21],\n\t            [-8, 17],\n\t            [3, 31]\n\t        ],\n\t        [\n\t            [5024, 5707],\n\t            [10, 7],\n\t            [6, 26],\n\t            [13, 5],\n\t            [6, 18]\n\t        ],\n\t        [\n\t            [5059, 5763],\n\t            [10, 17],\n\t            [10, 0],\n\t            [21, -34]\n\t        ],\n\t        [\n\t            [5100, 5746],\n\t            [-1, -19],\n\t            [6, -35],\n\t            [-6, -24],\n\t            [3, -16],\n\t            [-13, -37],\n\t            [-9, -18],\n\t            [-5, -37],\n\t            [1, -38],\n\t            [-2, -95]\n\t        ],\n\t        [\n\t            [4921, 5627],\n\t            [-19, 15],\n\t            [-13, -2],\n\t            [-10, -15],\n\t            [-12, 13],\n\t            [-5, 19],\n\t            [-13, 13]\n\t        ],\n\t        [\n\t            [4849, 5670],\n\t            [-1, 34],\n\t            [7, 26],\n\t            [-1, 20],\n\t            [23, 48],\n\t            [4, 41],\n\t            [7, 14],\n\t            [14, -8],\n\t            [11, 12],\n\t            [4, 16],\n\t            [22, 26],\n\t            [5, 19],\n\t            [26, 24],\n\t            [15, 9],\n\t            [7, -12],\n\t            [18, 0]\n\t        ],\n\t        [\n\t            [5010, 5939],\n\t            [-2, -28],\n\t            [3, -27],\n\t            [16, -39],\n\t            [1, -28],\n\t            [32, -14],\n\t            [-1, -40]\n\t        ],\n\t        [\n\t            [5024, 5707],\n\t            [-24, 1]\n\t        ],\n\t        [\n\t            [5000, 5708],\n\t            [-13, 5],\n\t            [-9, -9],\n\t            [-12, 4],\n\t            [-48, -3],\n\t            [-1, -33],\n\t            [4, -45]\n\t        ],\n\t        [\n\t            [7573, 6360],\n\t            [0, -43],\n\t            [-10, 9],\n\t            [2, -47]\n\t        ],\n\t        [\n\t            [7565, 6279],\n\t            [-8, 30],\n\t            [-1, 31],\n\t            [-6, 28],\n\t            [-11, 34],\n\t            [-26, 3],\n\t            [3, -25],\n\t            [-9, -32],\n\t            [-12, 12],\n\t            [-4, -11],\n\t            [-8, 6],\n\t            [-11, 5]\n\t        ],\n\t        [\n\t            [7472, 6360],\n\t            [-4, 49],\n\t            [-10, 45],\n\t            [5, 35],\n\t            [-17, 16],\n\t            [6, 22],\n\t            [18, 22],\n\t            [-20, 31],\n\t            [9, 40],\n\t            [22, -26],\n\t            [14, -3],\n\t            [2, -41],\n\t            [26, -8],\n\t            [26, 1],\n\t            [16, -10],\n\t            [-13, -50],\n\t            [-12, -3],\n\t            [-9, -34],\n\t            [16, -31],\n\t            [4, 38],\n\t            [8, 0],\n\t            [14, -93]\n\t        ],\n\t        [\n\t            [5629, 7671],\n\t            [8, -25],\n\t            [11, 5],\n\t            [21, -9],\n\t            [41, -4],\n\t            [13, 16],\n\t            [33, 13],\n\t            [20, -21],\n\t            [17, -6]\n\t        ],\n\t        [\n\t            [5793, 7640],\n\t            [-15, -25],\n\t            [-10, -42],\n\t            [9, -34]\n\t        ],\n\t        [\n\t            [5777, 7539],\n\t            [-24, 8],\n\t            [-28, -18]\n\t        ],\n\t        [\n\t            [5725, 7529],\n\t            [0, -30],\n\t            [-26, -5],\n\t            [-19, 20],\n\t            [-22, -16],\n\t            [-21, 2]\n\t        ],\n\t        [\n\t            [5637, 7500],\n\t            [-2, 39],\n\t            [-14, 19]\n\t        ],\n\t        [\n\t            [5621, 7558],\n\t            [5, 8],\n\t            [-3, 7],\n\t            [4, 19],\n\t            [11, 18],\n\t            [-14, 26],\n\t            [-2, 21],\n\t            [7, 14]\n\t        ],\n\t        [\n\t            [2846, 6461],\n\t            [-7, -3],\n\t            [-7, 34],\n\t            [-10, 17],\n\t            [6, 38],\n\t            [8, -3],\n\t            [10, -49],\n\t            [0, -34]\n\t        ],\n\t        [\n\t            [2838, 6628],\n\t            [-30, -10],\n\t            [-2, 22],\n\t            [13, 5],\n\t            [18, -2],\n\t            [1, -15]\n\t        ],\n\t        [\n\t            [2861, 6628],\n\t            [-5, -42],\n\t            [-5, 8],\n\t            [0, 31],\n\t            [-12, 23],\n\t            [0, 7],\n\t            [22, -27]\n\t        ],\n\t        [\n\t            [5527, 7708],\n\t            [10, 0],\n\t            [-7, -26],\n\t            [14, -23],\n\t            [-4, -28],\n\t            [-7, -2]\n\t        ],\n\t        [\n\t            [5533, 7629],\n\t            [-5, -6],\n\t            [-9, -13],\n\t            [-4, -33]\n\t        ],\n\t        [\n\t            [5515, 7577],\n\t            [-25, 23],\n\t            [-10, 24],\n\t            [-11, 13],\n\t            [-12, 22],\n\t            [-6, 19],\n\t            [-14, 27],\n\t            [6, 25],\n\t            [10, -14],\n\t            [6, 12],\n\t            [13, 2],\n\t            [24, -10],\n\t            [19, 1],\n\t            [12, -13]\n\t        ],\n\t        [\n\t            [5652, 8242],\n\t            [27, 0],\n\t            [30, 22],\n\t            [6, 34],\n\t            [23, 19],\n\t            [-3, 26]\n\t        ],\n\t        [\n\t            [5735, 8343],\n\t            [17, 10],\n\t            [30, 23]\n\t        ],\n\t        [\n\t            [5782, 8376],\n\t            [29, -15],\n\t            [4, -15],\n\t            [15, 7],\n\t            [27, -14],\n\t            [3, -27],\n\t            [-6, -16],\n\t            [17, -39],\n\t            [12, -11],\n\t            [-2, -11],\n\t            [19, -10],\n\t            [8, -16],\n\t            [-11, -13],\n\t            [-23, 2],\n\t            [-5, -5],\n\t            [7, -20],\n\t            [6, -37]\n\t        ],\n\t        [\n\t            [5882, 8136],\n\t            [-23, -4],\n\t            [-9, -13],\n\t            [-2, -30],\n\t            [-11, 6],\n\t            [-25, -3],\n\t            [-7, 14],\n\t            [-11, -10],\n\t            [-10, 8],\n\t            [-22, 1],\n\t            [-31, 15],\n\t            [-28, 4],\n\t            [-22, -1],\n\t            [-15, -16],\n\t            [-13, -2]\n\t        ],\n\t        [\n\t            [5653, 8105],\n\t            [-1, 26],\n\t            [-8, 27],\n\t            [17, 12],\n\t            [0, 24],\n\t            [-8, 22],\n\t            [-1, 26]\n\t        ],\n\t        [\n\t            [2524, 6110],\n\t            [-1, 8],\n\t            [4, 3],\n\t            [5, -7],\n\t            [10, 36],\n\t            [5, 0]\n\t        ],\n\t        [\n\t            [2547, 6150],\n\t            [0, -8],\n\t            [5, -1],\n\t            [0, -16],\n\t            [-5, -25],\n\t            [3, -9],\n\t            [-3, -21],\n\t            [2, -6],\n\t            [-4, -30],\n\t            [-5, -16],\n\t            [-5, -1],\n\t            [-6, -21]\n\t        ],\n\t        [\n\t            [2529, 5996],\n\t            [-8, 0],\n\t            [2, 67],\n\t            [1, 47]\n\t        ],\n\t        [\n\t            [3136, 3714],\n\t            [-20, -8],\n\t            [-11, 82],\n\t            [-15, 66],\n\t            [9, 57],\n\t            [-15, 25],\n\t            [-4, 43],\n\t            [-13, 40]\n\t        ],\n\t        [\n\t            [3067, 4019],\n\t            [17, 64],\n\t            [-12, 49],\n\t            [7, 20],\n\t            [-5, 22],\n\t            [10, 30],\n\t            [1, 50],\n\t            [1, 41],\n\t            [6, 20],\n\t            [-24, 96]\n\t        ],\n\t        [\n\t            [3068, 4411],\n\t            [21, -5],\n\t            [14, 1],\n\t            [6, 18],\n\t            [25, 24],\n\t            [14, 22],\n\t            [37, 10],\n\t            [-3, -44],\n\t            [3, -23],\n\t            [-2, -40],\n\t            [30, -53],\n\t            [31, -9],\n\t            [11, -23],\n\t            [19, -11],\n\t            [11, -17],\n\t            [18, 0],\n\t            [16, -17],\n\t            [1, -34],\n\t            [6, -18],\n\t            [0, -25],\n\t            [-8, -1],\n\t            [11, -69],\n\t            [53, -2],\n\t            [-4, -35],\n\t            [3, -23],\n\t            [15, -16],\n\t            [6, -37],\n\t            [-4, -47],\n\t            [-8, -26],\n\t            [3, -33],\n\t            [-9, -12]\n\t        ],\n\t        [\n\t            [3384, 3866],\n\t            [-1, 18],\n\t            [-25, 30],\n\t            [-26, 1],\n\t            [-49, -17],\n\t            [-13, -52],\n\t            [-1, -32],\n\t            [-11, -71]\n\t        ],\n\t        [\n\t            [3482, 3537],\n\t            [6, 34],\n\t            [3, 35],\n\t            [1, 32],\n\t            [-10, 11],\n\t            [-11, -9],\n\t            [-10, 2],\n\t            [-4, 23],\n\t            [-2, 54],\n\t            [-5, 18],\n\t            [-19, 16],\n\t            [-11, -12],\n\t            [-30, 11],\n\t            [2, 81],\n\t            [-8, 33]\n\t        ],\n\t        [\n\t            [3068, 4411],\n\t            [-15, -11],\n\t            [-13, 7],\n\t            [2, 90],\n\t            [-23, -35],\n\t            [-24, 2],\n\t            [-11, 31],\n\t            [-18, 4],\n\t            [5, 25],\n\t            [-15, 36],\n\t            [-11, 53],\n\t            [7, 11],\n\t            [0, 25],\n\t            [17, 17],\n\t            [-3, 32],\n\t            [7, 20],\n\t            [2, 28],\n\t            [32, 40],\n\t            [22, 11],\n\t            [4, 9],\n\t            [25, -2]\n\t        ],\n\t        [\n\t            [3058, 4804],\n\t            [13, 162],\n\t            [0, 25],\n\t            [-4, 34],\n\t            [-12, 22],\n\t            [0, 42],\n\t            [15, 10],\n\t            [6, -6],\n\t            [1, 23],\n\t            [-16, 6],\n\t            [-1, 37],\n\t            [54, -2],\n\t            [10, 21],\n\t            [7, -19],\n\t            [6, -35],\n\t            [5, 8]\n\t        ],\n\t        [\n\t            [3142, 5132],\n\t            [15, -32],\n\t            [22, 4],\n\t            [5, 18],\n\t            [21, 14],\n\t            [11, 10],\n\t            [4, 25],\n\t            [19, 17],\n\t            [-1, 12],\n\t            [-24, 5],\n\t            [-3, 37],\n\t            [1, 40],\n\t            [-13, 15],\n\t            [5, 6],\n\t            [21, -8],\n\t            [22, -15],\n\t            [8, 14],\n\t            [20, 9],\n\t            [31, 23],\n\t            [10, 22],\n\t            [-3, 17]\n\t        ],\n\t        [\n\t            [3313, 5365],\n\t            [14, 2],\n\t            [7, -13],\n\t            [-4, -26],\n\t            [9, -9],\n\t            [7, -28],\n\t            [-8, -20],\n\t            [-4, -51],\n\t            [7, -30],\n\t            [2, -27],\n\t            [17, -28],\n\t            [14, -3],\n\t            [3, 12],\n\t            [8, 3],\n\t            [13, 10],\n\t            [9, 16],\n\t            [15, -5],\n\t            [7, 2]\n\t        ],\n\t        [\n\t            [3429, 5170],\n\t            [15, -5],\n\t            [3, 12],\n\t            [-5, 12],\n\t            [3, 17],\n\t            [11, -5],\n\t            [13, 6],\n\t            [16, -13]\n\t        ],\n\t        [\n\t            [3485, 5194],\n\t            [12, -12],\n\t            [9, 16],\n\t            [6, -3],\n\t            [4, -16],\n\t            [13, 4],\n\t            [11, 22],\n\t            [8, 44],\n\t            [17, 54]\n\t        ],\n\t        [\n\t            [3565, 5303],\n\t            [9, 3],\n\t            [7, -33],\n\t            [16, -103],\n\t            [14, -10],\n\t            [1, -41],\n\t            [-21, -48],\n\t            [9, -18],\n\t            [49, -9],\n\t            [1, -60],\n\t            [21, 39],\n\t            [35, -21],\n\t            [46, -36],\n\t            [14, -35],\n\t            [-5, -32],\n\t            [33, 18],\n\t            [54, -32],\n\t            [41, 3],\n\t            [41, -49],\n\t            [36, -66],\n\t            [21, -17],\n\t            [24, -3],\n\t            [10, -18],\n\t            [9, -76],\n\t            [5, -35],\n\t            [-11, -98],\n\t            [-14, -39],\n\t            [-39, -82],\n\t            [-18, -67],\n\t            [-21, -51],\n\t            [-7, -1],\n\t            [-7, -43],\n\t            [2, -111],\n\t            [-8, -91],\n\t            [-3, -39],\n\t            [-9, -23],\n\t            [-5, -79],\n\t            [-28, -77],\n\t            [-5, -61],\n\t            [-22, -26],\n\t            [-7, -35],\n\t            [-30, 0],\n\t            [-44, -23],\n\t            [-19, -26],\n\t            [-31, -18],\n\t            [-33, -47],\n\t            [-23, -58],\n\t            [-5, -44],\n\t            [5, -33],\n\t            [-5, -60],\n\t            [-6, -28],\n\t            [-20, -33],\n\t            [-31, -104],\n\t            [-24, -47],\n\t            [-19, -27],\n\t            [-13, -57],\n\t            [-18, -33]\n\t        ],\n\t        [\n\t            [3517, 3063],\n\t            [-8, 33],\n\t            [13, 28],\n\t            [-16, 40],\n\t            [-22, 33],\n\t            [-29, 38],\n\t            [-10, -2],\n\t            [-28, 46],\n\t            [-18, -7]\n\t        ],\n\t        [\n\t            [8172, 5325],\n\t            [11, 22],\n\t            [23, 32]\n\t        ],\n\t        [\n\t            [8206, 5379],\n\t            [-1, -29],\n\t            [-2, -37],\n\t            [-13, 1],\n\t            [-6, -20],\n\t            [-12, 31]\n\t        ],\n\t        [\n\t            [7546, 6698],\n\t            [12, -19],\n\t            [-2, -36],\n\t            [-23, -2],\n\t            [-23, 4],\n\t            [-18, -9],\n\t            [-25, 22],\n\t            [-1, 12]\n\t        ],\n\t        [\n\t            [7466, 6670],\n\t            [19, 44],\n\t            [15, 15],\n\t            [20, -14],\n\t            [14, -1],\n\t            [12, -16]\n\t        ],\n\t        [\n\t            [5817, 3752],\n\t            [-39, -43],\n\t            [-25, -44],\n\t            [-10, -40],\n\t            [-8, -22],\n\t            [-15, -4],\n\t            [-5, -29],\n\t            [-3, -18],\n\t            [-17, -14],\n\t            [-23, 3],\n\t            [-13, 17],\n\t            [-12, 7],\n\t            [-14, -14],\n\t            [-6, -28],\n\t            [-14, -18],\n\t            [-13, -26],\n\t            [-20, -6],\n\t            [-6, 20],\n\t            [2, 36],\n\t            [-16, 56],\n\t            [-8, 9]\n\t        ],\n\t        [\n\t            [5552, 3594],\n\t            [0, 173],\n\t            [27, 2],\n\t            [1, 210],\n\t            [21, 2],\n\t            [43, 21],\n\t            [10, -24],\n\t            [18, 23],\n\t            [9, 0],\n\t            [15, 13]\n\t        ],\n\t        [\n\t            [5696, 4014],\n\t            [5, -4]\n\t        ],\n\t        [\n\t            [5701, 4010],\n\t            [11, -48],\n\t            [5, -10],\n\t            [9, -34],\n\t            [32, -65],\n\t            [12, -7],\n\t            [0, -20],\n\t            [8, -38],\n\t            [21, -9],\n\t            [18, -27]\n\t        ],\n\t        [\n\t            [5424, 5496],\n\t            [23, 4],\n\t            [5, 16],\n\t            [5, -2],\n\t            [7, -13],\n\t            [34, 23],\n\t            [12, 23],\n\t            [15, 20],\n\t            [-3, 21],\n\t            [8, 6],\n\t            [27, -4],\n\t            [26, 27],\n\t            [20, 65],\n\t            [14, 24],\n\t            [18, 10]\n\t        ],\n\t        [\n\t            [5635, 5716],\n\t            [3, -26],\n\t            [16, -36],\n\t            [0, -25],\n\t            [-5, -24],\n\t            [2, -18],\n\t            [10, -18]\n\t        ],\n\t        [\n\t            [5661, 5569],\n\t            [21, -25]\n\t        ],\n\t        [\n\t            [5682, 5544],\n\t            [15, -24],\n\t            [0, -19],\n\t            [19, -31],\n\t            [12, -26],\n\t            [7, -35],\n\t            [20, -24],\n\t            [5, -18]\n\t        ],\n\t        [\n\t            [5760, 5367],\n\t            [-9, -7],\n\t            [-18, 2],\n\t            [-21, 6],\n\t            [-10, -5],\n\t            [-5, -14],\n\t            [-9, -2],\n\t            [-10, 12],\n\t            [-31, -29],\n\t            [-13, 6],\n\t            [-4, -5],\n\t            [-8, -35],\n\t            [-21, 11],\n\t            [-20, 6],\n\t            [-18, 22],\n\t            [-23, 20],\n\t            [-15, -19],\n\t            [-10, -30],\n\t            [-3, -41]\n\t        ],\n\t        [\n\t            [5512, 5265],\n\t            [-18, 3],\n\t            [-19, 10],\n\t            [-16, -32],\n\t            [-15, -55]\n\t        ],\n\t        [\n\t            [5444, 5191],\n\t            [-3, 18],\n\t            [-1, 27],\n\t            [-13, 19],\n\t            [-10, 30],\n\t            [-2, 21],\n\t            [-13, 31],\n\t            [2, 18],\n\t            [-3, 25],\n\t            [2, 45],\n\t            [7, 11],\n\t            [14, 60]\n\t        ],\n\t        [\n\t            [3231, 7808],\n\t            [20, -8],\n\t            [26, 1],\n\t            [-14, -24],\n\t            [-10, -4],\n\t            [-35, 25],\n\t            [-7, 20],\n\t            [10, 18],\n\t            [10, -28]\n\t        ],\n\t        [\n\t            [3283, 7958],\n\t            [-14, -1],\n\t            [-36, 19],\n\t            [-26, 28],\n\t            [10, 5],\n\t            [37, -15],\n\t            [28, -25],\n\t            [1, -11]\n\t        ],\n\t        [\n\t            [1569, 7923],\n\t            [-14, -8],\n\t            [-46, 27],\n\t            [-8, 21],\n\t            [-25, 21],\n\t            [-5, 16],\n\t            [-28, 11],\n\t            [-11, 32],\n\t            [2, 14],\n\t            [30, -13],\n\t            [17, -9],\n\t            [26, -6],\n\t            [9, -21],\n\t            [14, -28],\n\t            [28, -24],\n\t            [11, -33]\n\t        ],\n\t        [\n\t            [3440, 8052],\n\t            [-18, -52],\n\t            [18, 20],\n\t            [19, -12],\n\t            [-10, -21],\n\t            [25, -16],\n\t            [12, 14],\n\t            [28, -18],\n\t            [-8, -43],\n\t            [19, 10],\n\t            [4, -32],\n\t            [8, -36],\n\t            [-11, -52],\n\t            [-13, -2],\n\t            [-18, 11],\n\t            [6, 48],\n\t            [-8, 8],\n\t            [-32, -52],\n\t            [-17, 2],\n\t            [20, 28],\n\t            [-27, 14],\n\t            [-30, -3],\n\t            [-54, 2],\n\t            [-4, 17],\n\t            [17, 21],\n\t            [-12, 16],\n\t            [24, 36],\n\t            [28, 94],\n\t            [18, 33],\n\t            [24, 21],\n\t            [13, -3],\n\t            [-6, -16],\n\t            [-15, -37]\n\t        ],\n\t        [\n\t            [1313, 8250],\n\t            [27, 5],\n\t            [-8, -67],\n\t            [24, -48],\n\t            [-11, 0],\n\t            [-17, 27],\n\t            [-10, 27],\n\t            [-14, 19],\n\t            [-5, 26],\n\t            [1, 19],\n\t            [13, -8]\n\t        ],\n\t        [\n\t            [2798, 8730],\n\t            [-11, -31],\n\t            [-12, 5],\n\t            [-8, 17],\n\t            [2, 4],\n\t            [10, 18],\n\t            [12, -1],\n\t            [7, -12]\n\t        ],\n\t        [\n\t            [2725, 8762],\n\t            [-33, -32],\n\t            [-19, 1],\n\t            [-6, 16],\n\t            [20, 27],\n\t            [38, 0],\n\t            [0, -12]\n\t        ],\n\t        [\n\t            [2634, 8936],\n\t            [5, -26],\n\t            [15, 9],\n\t            [16, -15],\n\t            [30, -20],\n\t            [32, -19],\n\t            [2, -28],\n\t            [21, 5],\n\t            [20, -20],\n\t            [-25, -18],\n\t            [-43, 14],\n\t            [-16, 26],\n\t            [-27, -31],\n\t            [-40, -31],\n\t            [-9, 35],\n\t            [-38, -6],\n\t            [24, 30],\n\t            [4, 46],\n\t            [9, 54],\n\t            [20, -5]\n\t        ],\n\t        [\n\t            [2892, 9024],\n\t            [-31, -3],\n\t            [-7, 29],\n\t            [12, 34],\n\t            [26, 8],\n\t            [21, -17],\n\t            [1, -25],\n\t            [-4, -8],\n\t            [-18, -18]\n\t        ],\n\t        [\n\t            [2343, 9140],\n\t            [-17, -21],\n\t            [-38, 18],\n\t            [-22, -6],\n\t            [-38, 26],\n\t            [24, 19],\n\t            [19, 25],\n\t            [30, -16],\n\t            [17, -11],\n\t            [8, -11],\n\t            [17, -23]\n\t        ],\n\t        [\n\t            [3135, 7724],\n\t            [-18, 33],\n\t            [0, 81],\n\t            [-13, 17],\n\t            [-18, -10],\n\t            [-10, 16],\n\t            [-21, -45],\n\t            [-8, -46],\n\t            [-10, -27],\n\t            [-12, -9],\n\t            [-9, -3],\n\t            [-3, -15],\n\t            [-51, 0],\n\t            [-42, 0],\n\t            [-12, -11],\n\t            [-30, -42],\n\t            [-3, -5],\n\t            [-9, -23],\n\t            [-26, 0],\n\t            [-27, 0],\n\t            [-12, -10],\n\t            [4, -11],\n\t            [2, -18],\n\t            [0, -6],\n\t            [-36, -30],\n\t            [-29, -9],\n\t            [-32, -31],\n\t            [-7, 0],\n\t            [-10, 9],\n\t            [-3, 8],\n\t            [1, 6],\n\t            [6, 21],\n\t            [13, 33],\n\t            [8, 35],\n\t            [-5, 51],\n\t            [-6, 53],\n\t            [-29, 28],\n\t            [3, 11],\n\t            [-4, 7],\n\t            [-8, 0],\n\t            [-5, 9],\n\t            [-2, 14],\n\t            [-5, -6],\n\t            [-7, 2],\n\t            [1, 6],\n\t            [-6, 6],\n\t            [-3, 15],\n\t            [-21, 19],\n\t            [-23, 20],\n\t            [-27, 23],\n\t            [-26, 21],\n\t            [-25, -17],\n\t            [-9, 0],\n\t            [-34, 15],\n\t            [-23, -8],\n\t            [-27, 19],\n\t            [-28, 9],\n\t            [-19, 4],\n\t            [-9, 10],\n\t            [-5, 32],\n\t            [-9, 0],\n\t            [-1, -23],\n\t            [-57, 0],\n\t            [-95, 0],\n\t            [-94, 0],\n\t            [-84, 0],\n\t            [-83, 0],\n\t            [-82, 0],\n\t            [-85, 0],\n\t            [-27, 0],\n\t            [-82, 0],\n\t            [-79, 0]\n\t        ],\n\t        [\n\t            [1588, 7952],\n\t            [-4, 0],\n\t            [-54, 58],\n\t            [-20, 26],\n\t            [-50, 24],\n\t            [-15, 53],\n\t            [3, 36],\n\t            [-35, 25],\n\t            [-5, 48],\n\t            [-34, 43],\n\t            [0, 30]\n\t        ],\n\t        [\n\t            [1374, 8295],\n\t            [15, 29],\n\t            [0, 37],\n\t            [-48, 37],\n\t            [-28, 68],\n\t            [-17, 42],\n\t            [-26, 27],\n\t            [-19, 24],\n\t            [-14, 31],\n\t            [-28, -20],\n\t            [-27, -33],\n\t            [-25, 39],\n\t            [-19, 26],\n\t            [-27, 16],\n\t            [-28, 2],\n\t            [0, 337],\n\t            [1, 219]\n\t        ],\n\t        [\n\t            [1084, 9176],\n\t            [51, -14],\n\t            [44, -29],\n\t            [29, -5],\n\t            [24, 24],\n\t            [34, 19],\n\t            [41, -7],\n\t            [42, 26],\n\t            [45, 14],\n\t            [20, -24],\n\t            [20, 14],\n\t            [6, 27],\n\t            [20, -6],\n\t            [47, -53],\n\t            [37, 40],\n\t            [3, -45],\n\t            [34, 10],\n\t            [11, 17],\n\t            [34, -3],\n\t            [42, -25],\n\t            [65, -22],\n\t            [38, -10],\n\t            [28, 4],\n\t            [37, -30],\n\t            [-39, -29],\n\t            [50, -13],\n\t            [75, 7],\n\t            [24, 11],\n\t            [29, -36],\n\t            [31, 30],\n\t            [-29, 25],\n\t            [18, 20],\n\t            [34, 3],\n\t            [22, 6],\n\t            [23, -14],\n\t            [28, -32],\n\t            [31, 5],\n\t            [49, -27],\n\t            [43, 9],\n\t            [40, -1],\n\t            [-3, 37],\n\t            [25, 10],\n\t            [43, -20],\n\t            [0, -56],\n\t            [17, 47],\n\t            [23, -1],\n\t            [12, 59],\n\t            [-30, 36],\n\t            [-32, 24],\n\t            [2, 65],\n\t            [33, 43],\n\t            [37, -9],\n\t            [28, -26],\n\t            [38, -67],\n\t            [-25, -29],\n\t            [52, -12],\n\t            [-1, -60],\n\t            [38, 46],\n\t            [33, -38],\n\t            [-9, -44],\n\t            [27, -40],\n\t            [29, 43],\n\t            [21, 51],\n\t            [1, 65],\n\t            [40, -5],\n\t            [41, -8],\n\t            [37, -30],\n\t            [2, -29],\n\t            [-21, -31],\n\t            [20, -32],\n\t            [-4, -29],\n\t            [-54, -41],\n\t            [-39, -9],\n\t            [-29, 18],\n\t            [-8, -30],\n\t            [-27, -50],\n\t            [-8, -26],\n\t            [-32, -40],\n\t            [-40, -4],\n\t            [-22, -25],\n\t            [-2, -38],\n\t            [-32, -7],\n\t            [-34, -48],\n\t            [-30, -67],\n\t            [-11, -46],\n\t            [-1, -69],\n\t            [40, -10],\n\t            [13, -55],\n\t            [13, -45],\n\t            [39, 12],\n\t            [51, -26],\n\t            [28, -22],\n\t            [20, -28],\n\t            [35, -17],\n\t            [29, -24],\n\t            [46, -4],\n\t            [30, -6],\n\t            [-4, -51],\n\t            [8, -59],\n\t            [21, -66],\n\t            [41, -56],\n\t            [21, 19],\n\t            [15, 61],\n\t            [-14, 93],\n\t            [-20, 31],\n\t            [45, 28],\n\t            [31, 41],\n\t            [16, 41],\n\t            [-3, 40],\n\t            [-19, 50],\n\t            [-33, 44],\n\t            [32, 62],\n\t            [-12, 54],\n\t            [-9, 92],\n\t            [19, 14],\n\t            [48, -16],\n\t            [29, -6],\n\t            [23, 15],\n\t            [25, -20],\n\t            [35, -34],\n\t            [8, -23],\n\t            [50, -4],\n\t            [-1, -50],\n\t            [9, -74],\n\t            [25, -10],\n\t            [21, -35],\n\t            [40, 33],\n\t            [26, 65],\n\t            [19, 28],\n\t            [21, -53],\n\t            [36, -75],\n\t            [31, -71],\n\t            [-11, -37],\n\t            [37, -33],\n\t            [25, -34],\n\t            [44, -15],\n\t            [18, -19],\n\t            [11, -50],\n\t            [22, -8],\n\t            [11, -22],\n\t            [2, -67],\n\t            [-20, -22],\n\t            [-20, -21],\n\t            [-46, -21],\n\t            [-35, -48],\n\t            [-47, -10],\n\t            [-59, 13],\n\t            [-42, 0],\n\t            [-29, -4],\n\t            [-23, -43],\n\t            [-35, -26],\n\t            [-40, -78],\n\t            [-32, -54],\n\t            [23, 9],\n\t            [45, 78],\n\t            [58, 49],\n\t            [42, 6],\n\t            [24, -29],\n\t            [-26, -40],\n\t            [9, -63],\n\t            [9, -45],\n\t            [36, -29],\n\t            [46, 8],\n\t            [28, 67],\n\t            [2, -43],\n\t            [17, -22],\n\t            [-34, -38],\n\t            [-61, -36],\n\t            [-28, -23],\n\t            [-31, -43],\n\t            [-21, 4],\n\t            [-1, 50],\n\t            [48, 49],\n\t            [-44, -2],\n\t            [-31, -7]\n\t        ],\n\t        [\n\t            [1829, 9377],\n\t            [-14, -27],\n\t            [61, 17],\n\t            [39, -29],\n\t            [31, 30],\n\t            [26, -20],\n\t            [23, -58],\n\t            [14, 25],\n\t            [-20, 60],\n\t            [24, 9],\n\t            [28, -9],\n\t            [31, -24],\n\t            [17, -58],\n\t            [9, -41],\n\t            [47, -30],\n\t            [50, -28],\n\t            [-3, -26],\n\t            [-46, -4],\n\t            [18, -23],\n\t            [-9, -22],\n\t            [-51, 9],\n\t            [-48, 16],\n\t            [-32, -3],\n\t            [-52, -20],\n\t            [-70, -9],\n\t            [-50, -6],\n\t            [-15, 28],\n\t            [-38, 16],\n\t            [-24, -6],\n\t            [-35, 47],\n\t            [19, 6],\n\t            [43, 10],\n\t            [39, -3],\n\t            [36, 11],\n\t            [-54, 13],\n\t            [-59, -4],\n\t            [-39, 1],\n\t            [-15, 22],\n\t            [64, 23],\n\t            [-42, -1],\n\t            [-49, 16],\n\t            [23, 44],\n\t            [20, 24],\n\t            [74, 36],\n\t            [29, -12]\n\t        ],\n\t        [\n\t            [2097, 9395],\n\t            [-24, -39],\n\t            [-44, 41],\n\t            [10, 9],\n\t            [37, 2],\n\t            [21, -13]\n\t        ],\n\t        [\n\t            [2879, 9376],\n\t            [3, -16],\n\t            [-30, 2],\n\t            [-30, 1],\n\t            [-30, -8],\n\t            [-8, 3],\n\t            [-31, 32],\n\t            [1, 21],\n\t            [14, 4],\n\t            [63, -6],\n\t            [48, -33]\n\t        ],\n\t        [\n\t            [2595, 9379],\n\t            [22, -36],\n\t            [26, 47],\n\t            [70, 24],\n\t            [48, -61],\n\t            [-4, -38],\n\t            [55, 17],\n\t            [26, 23],\n\t            [62, -30],\n\t            [38, -28],\n\t            [3, -25],\n\t            [52, 13],\n\t            [29, -38],\n\t            [67, -23],\n\t            [24, -24],\n\t            [26, -55],\n\t            [-51, -28],\n\t            [66, -38],\n\t            [44, -13],\n\t            [40, -55],\n\t            [44, -3],\n\t            [-9, -42],\n\t            [-49, -69],\n\t            [-34, 26],\n\t            [-44, 57],\n\t            [-36, -8],\n\t            [-3, -34],\n\t            [29, -34],\n\t            [38, -27],\n\t            [11, -16],\n\t            [18, -58],\n\t            [-9, -43],\n\t            [-35, 16],\n\t            [-70, 47],\n\t            [39, -51],\n\t            [29, -35],\n\t            [5, -21],\n\t            [-76, 24],\n\t            [-59, 34],\n\t            [-34, 29],\n\t            [10, 17],\n\t            [-42, 30],\n\t            [-40, 29],\n\t            [0, -18],\n\t            [-80, -9],\n\t            [-23, 20],\n\t            [18, 44],\n\t            [52, 1],\n\t            [57, 7],\n\t            [-9, 21],\n\t            [10, 30],\n\t            [36, 57],\n\t            [-8, 27],\n\t            [-11, 20],\n\t            [-42, 29],\n\t            [-57, 20],\n\t            [18, 15],\n\t            [-29, 36],\n\t            [-25, 4],\n\t            [-22, 20],\n\t            [-14, -18],\n\t            [-51, -7],\n\t            [-101, 13],\n\t            [-59, 17],\n\t            [-45, 9],\n\t            [-23, 21],\n\t            [29, 27],\n\t            [-39, 0],\n\t            [-9, 60],\n\t            [21, 53],\n\t            [29, 24],\n\t            [72, 16],\n\t            [-21, -39]\n\t        ],\n\t        [\n\t            [2212, 9420],\n\t            [33, -12],\n\t            [50, 7],\n\t            [7, -17],\n\t            [-26, -28],\n\t            [42, -26],\n\t            [-5, -53],\n\t            [-45, -23],\n\t            [-27, 5],\n\t            [-19, 23],\n\t            [-69, 45],\n\t            [0, 19],\n\t            [57, -7],\n\t            [-31, 38],\n\t            [33, 29]\n\t        ],\n\t        [\n\t            [2411, 9357],\n\t            [-30, -45],\n\t            [-32, 3],\n\t            [-17, 52],\n\t            [1, 29],\n\t            [14, 25],\n\t            [28, 16],\n\t            [58, -2],\n\t            [53, -14],\n\t            [-42, -53],\n\t            [-33, -11]\n\t        ],\n\t        [\n\t            [1654, 9275],\n\t            [-73, -29],\n\t            [-15, 26],\n\t            [-64, 31],\n\t            [12, 25],\n\t            [19, 43],\n\t            [24, 39],\n\t            [-27, 36],\n\t            [94, 10],\n\t            [39, -13],\n\t            [71, -3],\n\t            [27, -17],\n\t            [30, -25],\n\t            [-35, -15],\n\t            [-68, -41],\n\t            [-34, -42],\n\t            [0, -25]\n\t        ],\n\t        [\n\t            [2399, 9487],\n\t            [-15, -23],\n\t            [-40, 5],\n\t            [-34, 15],\n\t            [15, 27],\n\t            [40, 16],\n\t            [24, -21],\n\t            [10, -19]\n\t        ],\n\t        [\n\t            [2264, 9590],\n\t            [21, -27],\n\t            [1, -31],\n\t            [-13, -44],\n\t            [-46, -6],\n\t            [-30, 10],\n\t            [1, 34],\n\t            [-45, -4],\n\t            [-2, 45],\n\t            [30, -2],\n\t            [41, 21],\n\t            [40, -4],\n\t            [2, 8]\n\t        ],\n\t        [\n\t            [1994, 9559],\n\t            [11, -21],\n\t            [25, 10],\n\t            [29, -2],\n\t            [5, -29],\n\t            [-17, -28],\n\t            [-94, -10],\n\t            [-70, -25],\n\t            [-43, -2],\n\t            [-3, 20],\n\t            [57, 26],\n\t            [-125, -7],\n\t            [-39, 10],\n\t            [38, 58],\n\t            [26, 17],\n\t            [78, -20],\n\t            [50, -35],\n\t            [48, -5],\n\t            [-40, 57],\n\t            [26, 21],\n\t            [29, -7],\n\t            [9, -28]\n\t        ],\n\t        [\n\t            [2370, 9612],\n\t            [30, -19],\n\t            [55, 0],\n\t            [24, -19],\n\t            [-6, -22],\n\t            [32, -14],\n\t            [17, -14],\n\t            [38, -2],\n\t            [40, -5],\n\t            [44, 13],\n\t            [57, 5],\n\t            [45, -5],\n\t            [30, -22],\n\t            [6, -24],\n\t            [-17, -16],\n\t            [-42, -13],\n\t            [-35, 8],\n\t            [-80, -10],\n\t            [-57, -1],\n\t            [-45, 8],\n\t            [-74, 19],\n\t            [-9, 32],\n\t            [-4, 29],\n\t            [-27, 26],\n\t            [-58, 7],\n\t            [-32, 19],\n\t            [10, 24],\n\t            [58, -4]\n\t        ],\n\t        [\n\t            [1772, 9645],\n\t            [-4, -46],\n\t            [-21, -20],\n\t            [-26, -3],\n\t            [-52, -26],\n\t            [-44, -9],\n\t            [-38, 13],\n\t            [47, 44],\n\t            [57, 39],\n\t            [43, -1],\n\t            [38, 9]\n\t        ],\n\t        [\n\t            [2393, 9637],\n\t            [-13, -2],\n\t            [-52, 4],\n\t            [-7, 17],\n\t            [56, -1],\n\t            [19, -11],\n\t            [-3, -7]\n\t        ],\n\t        [\n\t            [1939, 9648],\n\t            [-52, -17],\n\t            [-41, 19],\n\t            [23, 19],\n\t            [40, 6],\n\t            [39, -10],\n\t            [-9, -17]\n\t        ],\n\t        [\n\t            [1954, 9701],\n\t            [-34, -11],\n\t            [-46, 0],\n\t            [0, 8],\n\t            [29, 18],\n\t            [14, -3],\n\t            [37, -12]\n\t        ],\n\t        [\n\t            [2338, 9669],\n\t            [-41, -12],\n\t            [-23, 13],\n\t            [-12, 23],\n\t            [-2, 24],\n\t            [36, -2],\n\t            [16, -4],\n\t            [33, -21],\n\t            [-7, -21]\n\t        ],\n\t        [\n\t            [2220, 9685],\n\t            [11, -25],\n\t            [-45, 7],\n\t            [-46, 19],\n\t            [-62, 2],\n\t            [27, 18],\n\t            [-34, 14],\n\t            [-2, 22],\n\t            [55, -8],\n\t            [75, -21],\n\t            [21, -28]\n\t        ],\n\t        [\n\t            [2583, 9764],\n\t            [33, -20],\n\t            [-38, -17],\n\t            [-51, -45],\n\t            [-50, -4],\n\t            [-57, 8],\n\t            [-30, 24],\n\t            [0, 21],\n\t            [22, 16],\n\t            [-50, 0],\n\t            [-31, 19],\n\t            [-18, 27],\n\t            [20, 26],\n\t            [19, 18],\n\t            [28, 4],\n\t            [-12, 14],\n\t            [65, 3],\n\t            [35, -32],\n\t            [47, -12],\n\t            [46, -11],\n\t            [22, -39]\n\t        ],\n\t        [\n\t            [3097, 9967],\n\t            [74, -4],\n\t            [60, -8],\n\t            [51, -16],\n\t            [-2, -16],\n\t            [-67, -25],\n\t            [-68, -12],\n\t            [-25, -14],\n\t            [61, 1],\n\t            [-66, -36],\n\t            [-45, -17],\n\t            [-48, -48],\n\t            [-57, -10],\n\t            [-18, -12],\n\t            [-84, -6],\n\t            [39, -8],\n\t            [-20, -10],\n\t            [23, -29],\n\t            [-26, -21],\n\t            [-43, -16],\n\t            [-13, -24],\n\t            [-39, -17],\n\t            [4, -14],\n\t            [48, 3],\n\t            [0, -15],\n\t            [-74, -35],\n\t            [-73, 16],\n\t            [-81, -9],\n\t            [-42, 7],\n\t            [-52, 3],\n\t            [-4, 29],\n\t            [52, 13],\n\t            [-14, 43],\n\t            [17, 4],\n\t            [74, -26],\n\t            [-38, 38],\n\t            [-45, 11],\n\t            [23, 23],\n\t            [49, 14],\n\t            [8, 21],\n\t            [-39, 23],\n\t            [-12, 31],\n\t            [76, -3],\n\t            [22, -6],\n\t            [43, 21],\n\t            [-62, 7],\n\t            [-98, -4],\n\t            [-49, 20],\n\t            [-23, 24],\n\t            [-32, 17],\n\t            [-6, 21],\n\t            [41, 11],\n\t            [32, 2],\n\t            [55, 9],\n\t            [41, 22],\n\t            [34, -3],\n\t            [30, -16],\n\t            [21, 32],\n\t            [37, 9],\n\t            [50, 7],\n\t            [85, 2],\n\t            [14, -6],\n\t            [81, 10],\n\t            [60, -4],\n\t            [60, -4]\n\t        ],\n\t        [\n\t            [5290, 7828],\n\t            [-3, -24],\n\t            [-12, -10],\n\t            [-20, 7],\n\t            [-6, -24],\n\t            [-14, -2],\n\t            [-5, 10],\n\t            [-15, -20],\n\t            [-13, -3],\n\t            [-12, 13]\n\t        ],\n\t        [\n\t            [5190, 7775],\n\t            [-10, 25],\n\t            [-13, -9],\n\t            [0, 27],\n\t            [21, 33],\n\t            [-1, 15],\n\t            [12, -5],\n\t            [8, 10]\n\t        ],\n\t        [\n\t            [5207, 7871],\n\t            [24, -1],\n\t            [5, 13],\n\t            [30, -18]\n\t        ],\n\t        [\n\t            [3140, 1814],\n\t            [-10, -24],\n\t            [-23, -18],\n\t            [-14, 2],\n\t            [-16, 5],\n\t            [-21, 18],\n\t            [-29, 8],\n\t            [-35, 33],\n\t            [-28, 32],\n\t            [-38, 66],\n\t            [23, -12],\n\t            [39, -40],\n\t            [36, -21],\n\t            [15, 27],\n\t            [9, 41],\n\t            [25, 24],\n\t            [20, -7]\n\t        ],\n\t        [\n\t            [3095, 1968],\n\t            [-25, 0],\n\t            [-13, -14],\n\t            [-25, -22],\n\t            [-5, -55],\n\t            [-11, -1],\n\t            [-32, 19],\n\t            [-32, 41],\n\t            [-34, 34],\n\t            [-9, 37],\n\t            [8, 35],\n\t            [-14, 39],\n\t            [-4, 101],\n\t            [12, 57],\n\t            [30, 45],\n\t            [-43, 18],\n\t            [27, 52],\n\t            [9, 98],\n\t            [31, -21],\n\t            [15, 123],\n\t            [-19, 15],\n\t            [-9, -73],\n\t            [-17, 8],\n\t            [9, 84],\n\t            [9, 110],\n\t            [13, 40],\n\t            [-8, 58],\n\t            [-2, 66],\n\t            [11, 2],\n\t            [17, 96],\n\t            [20, 94],\n\t            [11, 88],\n\t            [-6, 89],\n\t            [8, 49],\n\t            [-3, 72],\n\t            [16, 73],\n\t            [5, 114],\n\t            [9, 123],\n\t            [9, 132],\n\t            [-2, 96],\n\t            [-6, 84]\n\t        ],\n\t        [\n\t            [3045, 3974],\n\t            [14, 15],\n\t            [8, 30]\n\t        ],\n\t        [\n\t            [8064, 6161],\n\t            [-24, -28],\n\t            [-23, 18],\n\t            [0, 51],\n\t            [13, 26],\n\t            [31, 17],\n\t            [16, -1],\n\t            [6, -23],\n\t            [-12, -26],\n\t            [-7, -34]\n\t        ],\n\t        [\n\t            [8628, 7562],\n\t            [-18, 35],\n\t            [-11, -33],\n\t            [-43, -26],\n\t            [4, -31],\n\t            [-24, 2],\n\t            [-13, 19],\n\t            [-19, -42],\n\t            [-30, -32],\n\t            [-23, -38]\n\t        ],\n\t        [\n\t            [8451, 7416],\n\t            [-39, -17],\n\t            [-20, -27],\n\t            [-30, -17],\n\t            [15, 28],\n\t            [-6, 23],\n\t            [22, 40],\n\t            [-15, 30],\n\t            [-24, -20],\n\t            [-32, -41],\n\t            [-17, -39],\n\t            [-27, -2],\n\t            [-14, -28],\n\t            [15, -40],\n\t            [22, -10],\n\t            [1, -26],\n\t            [22, -17],\n\t            [31, 42],\n\t            [25, -23],\n\t            [18, -2],\n\t            [4, -31],\n\t            [-39, -16],\n\t            [-13, -32],\n\t            [-27, -30],\n\t            [-14, -41],\n\t            [30, -33],\n\t            [11, -58],\n\t            [17, -54],\n\t            [18, -45],\n\t            [0, -44],\n\t            [-17, -16],\n\t            [6, -32],\n\t            [17, -18],\n\t            [-5, -48],\n\t            [-7, -47],\n\t            [-15, -5],\n\t            [-21, -64],\n\t            [-22, -78],\n\t            [-26, -70],\n\t            [-38, -55],\n\t            [-39, -50],\n\t            [-31, -6],\n\t            [-17, -27],\n\t            [-10, 20],\n\t            [-15, -30],\n\t            [-39, -29],\n\t            [-29, -9],\n\t            [-10, -63],\n\t            [-15, -3],\n\t            [-8, 43],\n\t            [7, 22],\n\t            [-37, 19],\n\t            [-13, -9]\n\t        ],\n\t        [\n\t            [8001, 6331],\n\t            [-28, 15],\n\t            [-14, 24],\n\t            [5, 34],\n\t            [-26, 11],\n\t            [-13, 22],\n\t            [-24, -31],\n\t            [-27, -7],\n\t            [-22, 0],\n\t            [-15, -14]\n\t        ],\n\t        [\n\t            [7837, 6385],\n\t            [-14, -9],\n\t            [4, -68],\n\t            [-15, 2],\n\t            [-2, 14]\n\t        ],\n\t        [\n\t            [7810, 6324],\n\t            [-1, 24],\n\t            [-20, -17],\n\t            [-12, 11],\n\t            [-21, 22],\n\t            [8, 49],\n\t            [-18, 12],\n\t            [-6, 54],\n\t            [-30, -10],\n\t            [4, 70],\n\t            [26, 50],\n\t            [1, 48],\n\t            [-1, 46],\n\t            [-12, 14],\n\t            [-9, 35],\n\t            [-16, -5]\n\t        ],\n\t        [\n\t            [7703, 6727],\n\t            [-30, 9],\n\t            [9, 25],\n\t            [-13, 36],\n\t            [-20, -24],\n\t            [-23, 14],\n\t            [-32, -37],\n\t            [-25, -44],\n\t            [-23, -8]\n\t        ],\n\t        [\n\t            [7466, 6670],\n\t            [-2, 47],\n\t            [-17, -13]\n\t        ],\n\t        [\n\t            [7447, 6704],\n\t            [-32, 6],\n\t            [-32, 14],\n\t            [-22, 26],\n\t            [-22, 11],\n\t            [-9, 29],\n\t            [-16, 8],\n\t            [-28, 39],\n\t            [-22, 18],\n\t            [-12, -14]\n\t        ],\n\t        [\n\t            [7252, 6841],\n\t            [-38, 41],\n\t            [-28, 37],\n\t            [-7, 65],\n\t            [20, -7],\n\t            [1, 30],\n\t            [-12, 30],\n\t            [3, 48],\n\t            [-30, 69]\n\t        ],\n\t        [\n\t            [7161, 7154],\n\t            [-45, 24],\n\t            [-8, 46],\n\t            [-21, 27]\n\t        ],\n\t        [\n\t            [7082, 7268],\n\t            [-4, 34],\n\t            [1, 23],\n\t            [-17, 13],\n\t            [-9, -6],\n\t            [-7, 55]\n\t        ],\n\t        [\n\t            [7046, 7387],\n\t            [8, 13],\n\t            [-4, 14],\n\t            [26, 28],\n\t            [20, 12],\n\t            [29, -8],\n\t            [11, 38],\n\t            [35, 7],\n\t            [10, 23],\n\t            [44, 32],\n\t            [4, 13]\n\t        ],\n\t        [\n\t            [7229, 7559],\n\t            [-2, 34],\n\t            [19, 15],\n\t            [-25, 103],\n\t            [55, 24],\n\t            [14, 13],\n\t            [20, 106],\n\t            [55, -20],\n\t            [15, 27],\n\t            [2, 59],\n\t            [23, 6],\n\t            [21, 39]\n\t        ],\n\t        [\n\t            [7426, 7965],\n\t            [11, 5]\n\t        ],\n\t        [\n\t            [7437, 7970],\n\t            [7, -41],\n\t            [23, -32],\n\t            [40, -22],\n\t            [19, -47],\n\t            [-10, -70],\n\t            [10, -25],\n\t            [33, -10],\n\t            [37, -8],\n\t            [33, -37],\n\t            [18, -7],\n\t            [12, -54],\n\t            [17, -35],\n\t            [30, 1],\n\t            [58, -13],\n\t            [36, 8],\n\t            [28, -9],\n\t            [41, -36],\n\t            [34, 0],\n\t            [12, -18],\n\t            [32, 32],\n\t            [45, 20],\n\t            [42, 2],\n\t            [32, 21],\n\t            [20, 32],\n\t            [20, 20],\n\t            [-5, 19],\n\t            [-9, 23],\n\t            [15, 38],\n\t            [15, -5],\n\t            [29, -12],\n\t            [28, 31],\n\t            [42, 23],\n\t            [20, 39],\n\t            [20, 17],\n\t            [40, 8],\n\t            [22, -7],\n\t            [3, 21],\n\t            [-25, 41],\n\t            [-22, 19],\n\t            [-22, -22],\n\t            [-27, 10],\n\t            [-16, -8],\n\t            [-7, 24],\n\t            [20, 59],\n\t            [13, 45]\n\t        ],\n\t        [\n\t            [8240, 8005],\n\t            [34, -23],\n\t            [39, 38],\n\t            [-1, 26],\n\t            [26, 62],\n\t            [15, 19],\n\t            [0, 33],\n\t            [-16, 14],\n\t            [23, 29],\n\t            [35, 11],\n\t            [37, 2],\n\t            [41, -18],\n\t            [25, -22],\n\t            [17, -59],\n\t            [10, -26],\n\t            [10, -36],\n\t            [10, -58],\n\t            [49, -19],\n\t            [32, -42],\n\t            [12, -55],\n\t            [42, 0],\n\t            [24, 23],\n\t            [46, 17],\n\t            [-15, -53],\n\t            [-11, -21],\n\t            [-9, -65],\n\t            [-19, -58],\n\t            [-33, 11],\n\t            [-24, -21],\n\t            [7, -51],\n\t            [-4, -69],\n\t            [-14, -2],\n\t            [0, -30]\n\t        ],\n\t        [\n\t            [4920, 5353],\n\t            [-12, -1],\n\t            [-20, 12],\n\t            [-18, -1],\n\t            [-33, -10],\n\t            [-19, -18],\n\t            [-27, -21],\n\t            [-6, 1]\n\t        ],\n\t        [\n\t            [4785, 5315],\n\t            [2, 49],\n\t            [3, 7],\n\t            [-1, 24],\n\t            [-12, 24],\n\t            [-8, 4],\n\t            [-8, 17],\n\t            [6, 26],\n\t            [-3, 28],\n\t            [1, 18]\n\t        ],\n\t        [\n\t            [4765, 5512],\n\t            [5, 0],\n\t            [1, 25],\n\t            [-2, 12],\n\t            [3, 8],\n\t            [10, 7],\n\t            [-7, 47],\n\t            [-6, 25],\n\t            [2, 20],\n\t            [5, 4]\n\t        ],\n\t        [\n\t            [4776, 5660],\n\t            [4, 6],\n\t            [8, -9],\n\t            [21, -1],\n\t            [5, 18],\n\t            [5, -1],\n\t            [8, 6],\n\t            [4, -25],\n\t            [7, 7],\n\t            [11, 9]\n\t        ],\n\t        [\n\t            [4921, 5627],\n\t            [7, -84],\n\t            [-11, -50],\n\t            [-8, -66],\n\t            [12, -51],\n\t            [-1, -23]\n\t        ],\n\t        [\n\t            [5363, 5191],\n\t            [-4, 4],\n\t            [-16, -8],\n\t            [-17, 8],\n\t            [-13, -4]\n\t        ],\n\t        [\n\t            [5313, 5191],\n\t            [-45, 1]\n\t        ],\n\t        [\n\t            [5268, 5192],\n\t            [4, 47],\n\t            [-11, 39],\n\t            [-13, 10],\n\t            [-6, 27],\n\t            [-7, 8],\n\t            [1, 16]\n\t        ],\n\t        [\n\t            [5236, 5339],\n\t            [7, 42],\n\t            [13, 57],\n\t            [8, 1],\n\t            [17, 34],\n\t            [10, 1],\n\t            [16, -24],\n\t            [19, 20],\n\t            [2, 25],\n\t            [7, 23],\n\t            [4, 30],\n\t            [15, 25],\n\t            [5, 41],\n\t            [6, 13],\n\t            [4, 31],\n\t            [7, 37],\n\t            [24, 46],\n\t            [1, 20],\n\t            [3, 10],\n\t            [-11, 24]\n\t        ],\n\t        [\n\t            [5393, 5795],\n\t            [1, 19],\n\t            [8, 3]\n\t        ],\n\t        [\n\t            [5402, 5817],\n\t            [11, -38],\n\t            [2, -39],\n\t            [-1, -39],\n\t            [15, -54],\n\t            [-15, 1],\n\t            [-8, -4],\n\t            [-13, 6],\n\t            [-6, -28],\n\t            [16, -35],\n\t            [13, -10],\n\t            [3, -24],\n\t            [9, -41],\n\t            [-4, -16]\n\t        ],\n\t        [\n\t            [5444, 5191],\n\t            [-2, -31],\n\t            [-22, 14],\n\t            [-22, 15],\n\t            [-35, 2]\n\t        ],\n\t        [\n\t            [5856, 5265],\n\t            [-2, -69],\n\t            [11, -8],\n\t            [-9, -21],\n\t            [-10, -16],\n\t            [-11, -31],\n\t            [-6, -27],\n\t            [-1, -48],\n\t            [-7, -22],\n\t            [0, -45]\n\t        ],\n\t        [\n\t            [5821, 4978],\n\t            [-8, -16],\n\t            [-1, -35],\n\t            [-4, -5],\n\t            [-2, -32]\n\t        ],\n\t        [\n\t            [5814, 4792],\n\t            [5, -55],\n\t            [-2, -30],\n\t            [5, -35],\n\t            [16, -33],\n\t            [15, -74]\n\t        ],\n\t        [\n\t            [5853, 4565],\n\t            [-11, 6],\n\t            [-37, -10],\n\t            [-7, -7],\n\t            [-8, -38],\n\t            [6, -26],\n\t            [-5, -70],\n\t            [-3, -59],\n\t            [7, -11],\n\t            [19, -23],\n\t            [8, 11],\n\t            [2, -64],\n\t            [-21, 1],\n\t            [-11, 32],\n\t            [-10, 25],\n\t            [-22, 9],\n\t            [-6, 31],\n\t            [-17, -19],\n\t            [-22, 8],\n\t            [-10, 27],\n\t            [-17, 6],\n\t            [-13, -2],\n\t            [-2, 19],\n\t            [-9, 1]\n\t        ],\n\t        [\n\t            [5342, 4697],\n\t            [-4, 18]\n\t        ],\n\t        [\n\t            [5360, 4775],\n\t            [8, -6],\n\t            [9, 23],\n\t            [15, -1],\n\t            [2, -17],\n\t            [11, -10],\n\t            [16, 37],\n\t            [16, 29],\n\t            [7, 19],\n\t            [-1, 48],\n\t            [12, 58],\n\t            [13, 30],\n\t            [18, 29],\n\t            [3, 18],\n\t            [1, 22],\n\t            [5, 21],\n\t            [-2, 33],\n\t            [4, 52],\n\t            [5, 37],\n\t            [8, 32],\n\t            [2, 36]\n\t        ],\n\t        [\n\t            [5760, 5367],\n\t            [17, -49],\n\t            [12, -7],\n\t            [8, 10],\n\t            [12, -4],\n\t            [16, 12],\n\t            [6, -25],\n\t            [25, -39]\n\t        ],\n\t        [\n\t            [5330, 4760],\n\t            [-22, 62]\n\t        ],\n\t        [\n\t            [5308, 4822],\n\t            [21, 33],\n\t            [-11, 39],\n\t            [10, 15],\n\t            [19, 7],\n\t            [2, 26],\n\t            [15, -28],\n\t            [24, -2],\n\t            [9, 27],\n\t            [3, 40],\n\t            [-3, 46],\n\t            [-13, 35],\n\t            [12, 68],\n\t            [-7, 12],\n\t            [-21, -5],\n\t            [-7, 31],\n\t            [2, 25]\n\t        ],\n\t        [\n\t            [2906, 5049],\n\t            [-12, 14],\n\t            [-14, 19],\n\t            [-7, -9],\n\t            [-24, 8],\n\t            [-7, 25],\n\t            [-5, -1],\n\t            [-28, 34]\n\t        ],\n\t        [\n\t            [2809, 5139],\n\t            [-3, 18],\n\t            [10, 5],\n\t            [-1, 29],\n\t            [6, 22],\n\t            [14, 4],\n\t            [12, 37],\n\t            [10, 31],\n\t            [-10, 14],\n\t            [5, 34],\n\t            [-6, 54],\n\t            [6, 16],\n\t            [-4, 50],\n\t            [-12, 31]\n\t        ],\n\t        [\n\t            [2836, 5484],\n\t            [4, 29],\n\t            [9, -4],\n\t            [5, 17],\n\t            [-6, 35],\n\t            [3, 9]\n\t        ],\n\t        [\n\t            [2851, 5570],\n\t            [14, -2],\n\t            [21, 41],\n\t            [12, 6],\n\t            [0, 20],\n\t            [5, 50],\n\t            [16, 27],\n\t            [17, 1],\n\t            [3, 13],\n\t            [21, -5],\n\t            [22, 30],\n\t            [11, 13],\n\t            [14, 28],\n\t            [9, -3],\n\t            [8, -16],\n\t            [-6, -20]\n\t        ],\n\t        [\n\t            [3018, 5753],\n\t            [-18, -10],\n\t            [-7, -29],\n\t            [-10, -17],\n\t            [-8, -22],\n\t            [-4, -42],\n\t            [-8, -35],\n\t            [15, -4],\n\t            [3, -27],\n\t            [6, -13],\n\t            [3, -24],\n\t            [-4, -22],\n\t            [1, -12],\n\t            [7, -5],\n\t            [7, -20],\n\t            [36, 5],\n\t            [16, -7],\n\t            [19, -51],\n\t            [11, 6],\n\t            [20, -3],\n\t            [16, 7],\n\t            [10, -10],\n\t            [-5, -32],\n\t            [-6, -20],\n\t            [-2, -42],\n\t            [5, -40],\n\t            [8, -17],\n\t            [1, -13],\n\t            [-14, -30],\n\t            [10, -13],\n\t            [8, -21],\n\t            [8, -58]\n\t        ],\n\t        [\n\t            [3058, 4804],\n\t            [-14, 31],\n\t            [-8, 1],\n\t            [18, 61],\n\t            [-21, 27],\n\t            [-17, -5],\n\t            [-10, 10],\n\t            [-15, -15],\n\t            [-21, 7],\n\t            [-16, 62],\n\t            [-13, 15],\n\t            [-9, 28],\n\t            [-19, 28],\n\t            [-7, -5]\n\t        ],\n\t        [\n\t            [2695, 5543],\n\t            [-15, 14],\n\t            [-6, 12],\n\t            [4, 10],\n\t            [-1, 13],\n\t            [-8, 14],\n\t            [-11, 12],\n\t            [-10, 8],\n\t            [-1, 17],\n\t            [-8, 10],\n\t            [2, -17],\n\t            [-5, -14],\n\t            [-7, 17],\n\t            [-9, 5],\n\t            [-4, 12],\n\t            [1, 18],\n\t            [3, 19],\n\t            [-8, 8],\n\t            [7, 12]\n\t        ],\n\t        [\n\t            [2619, 5713],\n\t            [4, 7],\n\t            [18, -15],\n\t            [7, 7],\n\t            [9, -5],\n\t            [4, -12],\n\t            [8, -4],\n\t            [7, 13]\n\t        ],\n\t        [\n\t            [2676, 5704],\n\t            [7, -32],\n\t            [11, -24],\n\t            [13, -25]\n\t        ],\n\t        [\n\t            [2707, 5623],\n\t            [-11, -6],\n\t            [0, -23],\n\t            [6, -9],\n\t            [-4, -7],\n\t            [1, -11],\n\t            [-2, -12],\n\t            [-2, -12]\n\t        ],\n\t        [\n\t            [2715, 6427],\n\t            [23, -4],\n\t            [22, 0],\n\t            [26, -21],\n\t            [11, -21],\n\t            [26, 6],\n\t            [10, -13],\n\t            [24, -37],\n\t            [17, -27],\n\t            [9, 1],\n\t            [17, -12],\n\t            [-2, -17],\n\t            [20, -2],\n\t            [21, -24],\n\t            [-3, -14],\n\t            [-19, -7],\n\t            [-18, -3],\n\t            [-19, 4],\n\t            [-40, -5],\n\t            [18, 32],\n\t            [-11, 16],\n\t            [-18, 4],\n\t            [-9, 17],\n\t            [-7, 33],\n\t            [-16, -2],\n\t            [-26, 16],\n\t            [-8, 12],\n\t            [-36, 10],\n\t            [-10, 11],\n\t            [11, 15],\n\t            [-28, 3],\n\t            [-20, -31],\n\t            [-11, -1],\n\t            [-4, -14],\n\t            [-14, -7],\n\t            [-12, 6],\n\t            [15, 18],\n\t            [6, 22],\n\t            [13, 13],\n\t            [14, 11],\n\t            [21, 6],\n\t            [7, 6]\n\t        ],\n\t        [\n\t            [5909, 7133],\n\t            [2, 1],\n\t            [4, 14],\n\t            [20, -1],\n\t            [25, 18],\n\t            [-19, -25],\n\t            [2, -11]\n\t        ],\n\t        [\n\t            [5943, 7129],\n\t            [-3, 2],\n\t            [-5, -5],\n\t            [-4, 1],\n\t            [-2, -2],\n\t            [0, 6],\n\t            [-2, 4],\n\t            [-6, 0],\n\t            [-7, -5],\n\t            [-5, 3]\n\t        ],\n\t        [\n\t            [5943, 7129],\n\t            [1, -5],\n\t            [-28, -24],\n\t            [-14, 8],\n\t            [-7, 23],\n\t            [14, 2]\n\t        ],\n\t        [\n\t            [5377, 7945],\n\t            [-16, 25],\n\t            [-14, 15],\n\t            [-3, 25],\n\t            [-5, 17],\n\t            [21, 13],\n\t            [10, 15],\n\t            [20, 11],\n\t            [7, 11],\n\t            [7, -6],\n\t            [13, 6]\n\t        ],\n\t        [\n\t            [5417, 8077],\n\t            [13, -19],\n\t            [21, -5],\n\t            [-2, -17],\n\t            [15, -12],\n\t            [4, 15],\n\t            [19, -6],\n\t            [3, -19],\n\t            [20, -3],\n\t            [13, -29]\n\t        ],\n\t        [\n\t            [5523, 7982],\n\t            [-8, 0],\n\t            [-4, -11],\n\t            [-7, -3],\n\t            [-2, -13],\n\t            [-5, -3],\n\t            [-1, -5],\n\t            [-9, -7],\n\t            [-12, 1],\n\t            [-4, -13]\n\t        ],\n\t        [\n\t            [5275, 8306],\n\t            [1, -23],\n\t            [28, -14],\n\t            [-1, -21],\n\t            [29, 11],\n\t            [15, 16],\n\t            [32, -23],\n\t            [13, -19]\n\t        ],\n\t        [\n\t            [5392, 8233],\n\t            [6, -30],\n\t            [-8, -16],\n\t            [11, -21],\n\t            [6, -31],\n\t            [-2, -21],\n\t            [12, -37]\n\t        ],\n\t        [\n\t            [5207, 7871],\n\t            [3, 42],\n\t            [14, 40],\n\t            [-40, 11],\n\t            [-13, 16]\n\t        ],\n\t        [\n\t            [5171, 7980],\n\t            [2, 26],\n\t            [-6, 13]\n\t        ],\n\t        [\n\t            [5171, 8059],\n\t            [-5, 62],\n\t            [17, 0],\n\t            [7, 22],\n\t            [6, 54],\n\t            [-5, 20]\n\t        ],\n\t        [\n\t            [5191, 8217],\n\t            [6, 13],\n\t            [23, 3],\n\t            [5, -13],\n\t            [19, 29],\n\t            [-6, 22],\n\t            [-2, 34]\n\t        ],\n\t        [\n\t            [5236, 8305],\n\t            [21, -8],\n\t            [18, 9]\n\t        ],\n\t        [\n\t            [6196, 5808],\n\t            [7, -19],\n\t            [-1, -24],\n\t            [-16, -14],\n\t            [12, -16]\n\t        ],\n\t        [\n\t            [6198, 5735],\n\t            [-10, -32]\n\t        ],\n\t        [\n\t            [6188, 5703],\n\t            [-7, 11],\n\t            [-6, -5],\n\t            [-16, 1],\n\t            [0, 18],\n\t            [-2, 17],\n\t            [9, 27],\n\t            [10, 26]\n\t        ],\n\t        [\n\t            [6176, 5798],\n\t            [12, -5],\n\t            [8, 15]\n\t        ],\n\t        [\n\t            [5352, 8343],\n\t            [-17, -48],\n\t            [-29, 33],\n\t            [-4, 25],\n\t            [41, 19],\n\t            [9, -29]\n\t        ],\n\t        [\n\t            [5236, 8305],\n\t            [-11, 32],\n\t            [-1, 61],\n\t            [5, 16],\n\t            [8, 17],\n\t            [24, 4],\n\t            [10, 16],\n\t            [22, 17],\n\t            [-1, -30],\n\t            [-8, -20],\n\t            [4, -16],\n\t            [15, -9],\n\t            [-7, -22],\n\t            [-8, 6],\n\t            [-20, -42],\n\t            [7, -29]\n\t        ],\n\t        [\n\t            [3008, 6222],\n\t            [3, 10],\n\t            [22, 0],\n\t            [16, -15],\n\t            [8, 1],\n\t            [5, -21],\n\t            [15, 1],\n\t            [-1, -17],\n\t            [12, -2],\n\t            [14, -22],\n\t            [-10, -24],\n\t            [-14, 13],\n\t            [-12, -3],\n\t            [-9, 3],\n\t            [-5, -11],\n\t            [-11, -3],\n\t            [-4, 14],\n\t            [-10, -8],\n\t            [-11, -41],\n\t            [-7, 10],\n\t            [-1, 17]\n\t        ],\n\t        [\n\t            [3008, 6124],\n\t            [0, 16],\n\t            [-7, 17],\n\t            [7, 10],\n\t            [2, 23],\n\t            [-2, 32]\n\t        ],\n\t        [\n\t            [5333, 6444],\n\t            [-95, -112],\n\t            [-81, -117],\n\t            [-39, -26]\n\t        ],\n\t        [\n\t            [5118, 6189],\n\t            [-31, -6],\n\t            [0, 38],\n\t            [-13, 10],\n\t            [-17, 16],\n\t            [-7, 28],\n\t            [-94, 129],\n\t            [-93, 129]\n\t        ],\n\t        [\n\t            [4863, 6533],\n\t            [-105, 143]\n\t        ],\n\t        [\n\t            [4758, 6676],\n\t            [1, 11],\n\t            [0, 4]\n\t        ],\n\t        [\n\t            [4759, 6691],\n\t            [0, 70],\n\t            [44, 44],\n\t            [28, 9],\n\t            [23, 16],\n\t            [11, 29],\n\t            [32, 24],\n\t            [1, 44],\n\t            [16, 5],\n\t            [13, 22],\n\t            [36, 9],\n\t            [5, 23],\n\t            [-7, 13],\n\t            [-10, 62],\n\t            [-1, 36],\n\t            [-11, 38]\n\t        ],\n\t        [\n\t            [4939, 7135],\n\t            [27, 32],\n\t            [30, 11],\n\t            [17, 24],\n\t            [27, 18],\n\t            [47, 11],\n\t            [46, 4],\n\t            [14, -8],\n\t            [26, 23],\n\t            [30, 0],\n\t            [11, -13],\n\t            [19, 3]\n\t        ],\n\t        [\n\t            [5233, 7240],\n\t            [-5, -30],\n\t            [4, -56],\n\t            [-6, -49],\n\t            [-18, -33],\n\t            [3, -45],\n\t            [23, -35],\n\t            [0, -14],\n\t            [17, -24],\n\t            [12, -106]\n\t        ],\n\t        [\n\t            [5263, 6848],\n\t            [9, -52],\n\t            [1, -28],\n\t            [-5, -48],\n\t            [2, -27],\n\t            [-3, -32],\n\t            [2, -37],\n\t            [-11, -25],\n\t            [17, -43],\n\t            [1, -25],\n\t            [10, -33],\n\t            [13, 11],\n\t            [22, -28],\n\t            [12, -37]\n\t        ],\n\t        [\n\t            [2769, 4856],\n\t            [15, 45],\n\t            [-6, 25],\n\t            [-11, -27],\n\t            [-16, 26],\n\t            [5, 16],\n\t            [-4, 54],\n\t            [9, 9],\n\t            [5, 37],\n\t            [11, 38],\n\t            [-2, 24],\n\t            [15, 13],\n\t            [19, 23]\n\t        ],\n\t        [\n\t            [2906, 5049],\n\t            [4, -45],\n\t            [-9, -39],\n\t            [-30, -62],\n\t            [-33, -23],\n\t            [-17, -51],\n\t            [-6, -40],\n\t            [-15, -24],\n\t            [-12, 29],\n\t            [-11, 7],\n\t            [-12, -5],\n\t            [-1, 22],\n\t            [8, 14],\n\t            [-3, 24]\n\t        ],\n\t        [\n\t            [5969, 6800],\n\t            [-7, -23],\n\t            [-6, -45],\n\t            [-8, -31],\n\t            [-6, -10],\n\t            [-10, 19],\n\t            [-12, 26],\n\t            [-20, 85],\n\t            [-3, -5],\n\t            [12, -63],\n\t            [17, -59],\n\t            [21, -92],\n\t            [10, -32],\n\t            [9, -34],\n\t            [25, -65],\n\t            [-6, -10],\n\t            [1, -39],\n\t            [33, -53],\n\t            [4, -12]\n\t        ],\n\t        [\n\t            [6023, 6357],\n\t            [-110, 0],\n\t            [-107, 0],\n\t            [-112, 0]\n\t        ],\n\t        [\n\t            [5694, 6357],\n\t            [0, 218],\n\t            [0, 210],\n\t            [-8, 47],\n\t            [7, 37],\n\t            [-5, 25],\n\t            [10, 29]\n\t        ],\n\t        [\n\t            [5698, 6923],\n\t            [37, 0],\n\t            [27, -15],\n\t            [28, -18],\n\t            [13, -9],\n\t            [21, 19],\n\t            [11, 17],\n\t            [25, 5],\n\t            [20, -8],\n\t            [7, -29],\n\t            [7, 19],\n\t            [22, -14],\n\t            [22, -3],\n\t            [13, 15]\n\t        ],\n\t        [\n\t            [5951, 6902],\n\t            [18, -102]\n\t        ],\n\t        [\n\t            [6176, 5798],\n\t            [-10, 20],\n\t            [-11, 34],\n\t            [-12, 19],\n\t            [-8, 21],\n\t            [-24, 23],\n\t            [-19, 1],\n\t            [-7, 12],\n\t            [-16, -14],\n\t            [-17, 27],\n\t            [-8, -44],\n\t            [-33, 13]\n\t        ],\n\t        [\n\t            [6011, 5910],\n\t            [-3, 23],\n\t            [12, 87],\n\t            [3, 39],\n\t            [9, 18],\n\t            [20, 10],\n\t            [14, 34]\n\t        ],\n\t        [\n\t            [6066, 6121],\n\t            [16, -69],\n\t            [8, -54],\n\t            [15, -29],\n\t            [38, -55],\n\t            [16, -34],\n\t            [15, -34],\n\t            [8, -20],\n\t            [14, -18]\n\t        ],\n\t        [\n\t            [4749, 7532],\n\t            [1, 42],\n\t            [-11, 25],\n\t            [39, 43],\n\t            [34, -11],\n\t            [37, 1],\n\t            [30, -10],\n\t            [23, 3],\n\t            [45, -2]\n\t        ],\n\t        [\n\t            [4947, 7623],\n\t            [11, -23],\n\t            [51, -27],\n\t            [10, 13],\n\t            [31, -27],\n\t            [32, 8]\n\t        ],\n\t        [\n\t            [5082, 7567],\n\t            [2, -35],\n\t            [-26, -39],\n\t            [-36, -12],\n\t            [-2, -20],\n\t            [-18, -33],\n\t            [-10, -48],\n\t            [11, -34],\n\t            [-16, -26],\n\t            [-6, -39],\n\t            [-21, -11],\n\t            [-20, -46],\n\t            [-35, -1],\n\t            [-27, 1],\n\t            [-17, -21],\n\t            [-11, -22],\n\t            [-13, 5],\n\t            [-11, 20],\n\t            [-8, 34],\n\t            [-26, 9]\n\t        ],\n\t        [\n\t            [4792, 7249],\n\t            [-2, 20],\n\t            [10, 22],\n\t            [4, 16],\n\t            [-9, 17],\n\t            [7, 39],\n\t            [-11, 36],\n\t            [12, 5],\n\t            [1, 27],\n\t            [5, 9],\n\t            [0, 46],\n\t            [13, 16],\n\t            [-8, 30],\n\t            [-16, 2],\n\t            [-5, -8],\n\t            [-16, 0],\n\t            [-7, 29],\n\t            [-11, -8],\n\t            [-10, -15]\n\t        ],\n\t        [\n\t            [5675, 8472],\n\t            [3, 35],\n\t            [-10, -8],\n\t            [-18, 21],\n\t            [-2, 34],\n\t            [35, 17],\n\t            [35, 8],\n\t            [30, -10],\n\t            [29, 2]\n\t        ],\n\t        [\n\t            [5777, 8571],\n\t            [4, -10],\n\t            [-20, -34],\n\t            [8, -55],\n\t            [-12, -19]\n\t        ],\n\t        [\n\t            [5757, 8453],\n\t            [-22, 0],\n\t            [-24, 22],\n\t            [-13, 7],\n\t            [-23, -10]\n\t        ],\n\t        [\n\t            [6188, 5703],\n\t            [-6, -21],\n\t            [10, -32],\n\t            [10, -29],\n\t            [11, -21],\n\t            [90, -70],\n\t            [24, 0]\n\t        ],\n\t        [\n\t            [6327, 5530],\n\t            [-79, -177],\n\t            [-36, -3],\n\t            [-25, -41],\n\t            [-17, -1],\n\t            [-8, -19]\n\t        ],\n\t        [\n\t            [6162, 5289],\n\t            [-19, 0],\n\t            [-11, 20],\n\t            [-26, -25],\n\t            [-8, -24],\n\t            [-18, 4],\n\t            [-6, 7],\n\t            [-7, -1],\n\t            [-9, 0],\n\t            [-35, 50],\n\t            [-19, 0],\n\t            [-10, 20],\n\t            [0, 33],\n\t            [-14, 10]\n\t        ],\n\t        [\n\t            [5980, 5383],\n\t            [-17, 64],\n\t            [-12, 14],\n\t            [-5, 23],\n\t            [-14, 29],\n\t            [-17, 4],\n\t            [9, 34],\n\t            [15, 2],\n\t            [4, 18]\n\t        ],\n\t        [\n\t            [5943, 5571],\n\t            [0, 53]\n\t        ],\n\t        [\n\t            [5943, 5624],\n\t            [8, 62],\n\t            [13, 16],\n\t            [3, 24],\n\t            [12, 45],\n\t            [17, 30],\n\t            [11, 58],\n\t            [4, 51]\n\t        ],\n\t        [\n\t            [5794, 9138],\n\t            [-4, -42],\n\t            [42, -39],\n\t            [-26, -45],\n\t            [33, -67],\n\t            [-19, -51],\n\t            [25, -43],\n\t            [-11, -39],\n\t            [41, -40],\n\t            [-11, -31],\n\t            [-25, -34],\n\t            [-60, -75]\n\t        ],\n\t        [\n\t            [5779, 8632],\n\t            [-50, -5],\n\t            [-49, -21],\n\t            [-45, -13],\n\t            [-16, 32],\n\t            [-27, 20],\n\t            [6, 58],\n\t            [-14, 53],\n\t            [14, 35],\n\t            [25, 37],\n\t            [63, 64],\n\t            [19, 12],\n\t            [-3, 25],\n\t            [-39, 28]\n\t        ],\n\t        [\n\t            [5663, 8957],\n\t            [-9, 23],\n\t            [-1, 91],\n\t            [-43, 40],\n\t            [-37, 29]\n\t        ],\n\t        [\n\t            [5573, 9140],\n\t            [17, 16],\n\t            [30, -32],\n\t            [37, 3],\n\t            [30, -14],\n\t            [26, 26],\n\t            [14, 44],\n\t            [43, 20],\n\t            [35, -24],\n\t            [-11, -41]\n\t        ],\n\t        [\n\t            [9954, 4033],\n\t            [9, -17],\n\t            [-4, -31],\n\t            [-17, -8],\n\t            [-16, 7],\n\t            [-2, 26],\n\t            [10, 21],\n\t            [13, -8],\n\t            [7, 10]\n\t        ],\n\t        [\n\t            [0, 4079],\n\t            [9981, -14],\n\t            [-17, -13],\n\t            [-4, 23],\n\t            [14, 12],\n\t            [9, 3],\n\t            [-9983, 18]\n\t        ],\n\t        [\n\t            [0, 4108],\n\t            [0, -29]\n\t        ],\n\t        [\n\t            [0, 4108],\n\t            [6, 3],\n\t            [-4, -28],\n\t            [-2, -4]\n\t        ],\n\t        [\n\t            [3300, 1994],\n\t            [33, 36],\n\t            [24, -15],\n\t            [16, 24],\n\t            [22, -27],\n\t            [-8, -21],\n\t            [-37, -17],\n\t            [-13, 20],\n\t            [-23, -26],\n\t            [-14, 26]\n\t        ],\n\t        [\n\t            [5265, 7548],\n\t            [-9, -46],\n\t            [-13, 12],\n\t            [-6, 40],\n\t            [5, 22],\n\t            [18, 22],\n\t            [5, -50]\n\t        ],\n\t        [\n\t            [5157, 7984],\n\t            [6, -6],\n\t            [8, 2]\n\t        ],\n\t        [\n\t            [5190, 7775],\n\t            [-2, -17],\n\t            [9, -22],\n\t            [-10, -18],\n\t            [7, -46],\n\t            [15, -8],\n\t            [-3, -25]\n\t        ],\n\t        [\n\t            [5206, 7639],\n\t            [-25, -34],\n\t            [-55, 16],\n\t            [-40, -19],\n\t            [-4, -35]\n\t        ],\n\t        [\n\t            [4947, 7623],\n\t            [14, 35],\n\t            [5, 118],\n\t            [-28, 62],\n\t            [-21, 30],\n\t            [-42, 23],\n\t            [-3, 43],\n\t            [36, 12],\n\t            [47, -15],\n\t            [-9, 67],\n\t            [26, -25],\n\t            [65, 46],\n\t            [8, 48],\n\t            [24, 12]\n\t        ],\n\t        [\n\t            [3485, 5194],\n\t            [7, 25],\n\t            [3, 27]\n\t        ],\n\t        [\n\t            [3495, 5246],\n\t            [4, 26],\n\t            [-10, 34]\n\t        ],\n\t        [\n\t            [3489, 5306],\n\t            [-3, 41],\n\t            [15, 51]\n\t        ],\n\t        [\n\t            [3501, 5398],\n\t            [9, -7],\n\t            [21, -14],\n\t            [29, -50],\n\t            [5, -24]\n\t        ],\n\t        [\n\t            [5308, 4822],\n\t            [-29, 60],\n\t            [-18, 49],\n\t            [-17, 61],\n\t            [1, 19],\n\t            [6, 19],\n\t            [7, 43],\n\t            [5, 44]\n\t        ],\n\t        [\n\t            [5263, 5117],\n\t            [10, 4],\n\t            [40, -1],\n\t            [0, 71]\n\t        ],\n\t        [\n\t            [4827, 8240],\n\t            [-21, 12],\n\t            [-17, -1],\n\t            [6, 32],\n\t            [-6, 32]\n\t        ],\n\t        [\n\t            [4789, 8315],\n\t            [23, 2],\n\t            [30, -37],\n\t            [-15, -40]\n\t        ],\n\t        [\n\t            [4916, 8521],\n\t            [-30, -63],\n\t            [29, 8],\n\t            [30, -1],\n\t            [-7, -48],\n\t            [-25, -53],\n\t            [29, -4],\n\t            [2, -6],\n\t            [25, -69],\n\t            [19, -10],\n\t            [17, -67],\n\t            [8, -24],\n\t            [33, -11],\n\t            [-3, -38],\n\t            [-14, -17],\n\t            [11, -30],\n\t            [-25, -31],\n\t            [-37, 0],\n\t            [-48, -16],\n\t            [-13, 12],\n\t            [-18, -28],\n\t            [-26, 7],\n\t            [-19, -23],\n\t            [-15, 12],\n\t            [41, 62],\n\t            [25, 13],\n\t            [-1, 0],\n\t            [-43, 9],\n\t            [-8, 24],\n\t            [29, 18],\n\t            [-15, 32],\n\t            [5, 39],\n\t            [42, -6],\n\t            [4, 35],\n\t            [-19, 36],\n\t            [0, 1],\n\t            [-34, 10],\n\t            [-7, 16],\n\t            [10, 27],\n\t            [-9, 16],\n\t            [-15, -28],\n\t            [-1, 57],\n\t            [-14, 30],\n\t            [10, 61],\n\t            [21, 48],\n\t            [23, -4],\n\t            [33, 4]\n\t        ],\n\t        [\n\t            [6154, 7511],\n\t            [4, 26],\n\t            [-7, 40],\n\t            [-16, 22],\n\t            [-16, 6],\n\t            [-10, 19]\n\t        ],\n\t        [\n\t            [6109, 7624],\n\t            [4, 6],\n\t            [23, -10],\n\t            [41, -9],\n\t            [38, -28],\n\t            [5, -11],\n\t            [17, 9],\n\t            [25, -13],\n\t            [9, -24],\n\t            [17, -13]\n\t        ],\n\t        [\n\t            [6210, 7485],\n\t            [-27, 29],\n\t            [-29, -3]\n\t        ],\n\t        [\n\t            [5029, 5408],\n\t            [-44, -35],\n\t            [-15, -20],\n\t            [-25, -17],\n\t            [-25, 17]\n\t        ],\n\t        [\n\t            [5000, 5708],\n\t            [-2, -18],\n\t            [12, -30],\n\t            [0, -43],\n\t            [2, -47],\n\t            [7, -21],\n\t            [-6, -54],\n\t            [2, -29],\n\t            [8, -37],\n\t            [6, -21]\n\t        ],\n\t        [\n\t            [4765, 5512],\n\t            [-8, 1],\n\t            [-5, -24],\n\t            [-8, 1],\n\t            [-6, 12],\n\t            [2, 24],\n\t            [-11, 36],\n\t            [-8, -7],\n\t            [-6, -1]\n\t        ],\n\t        [\n\t            [4715, 5554],\n\t            [-7, -3],\n\t            [0, 21],\n\t            [-4, 16],\n\t            [0, 17],\n\t            [-6, 25],\n\t            [-7, 21],\n\t            [-23, 0],\n\t            [-6, -11],\n\t            [-8, -1],\n\t            [-4, -13],\n\t            [-4, -17],\n\t            [-14, -26]\n\t        ],\n\t        [\n\t            [4632, 5583],\n\t            [-13, 35],\n\t            [-10, 24],\n\t            [-8, 7],\n\t            [-6, 12],\n\t            [-4, 26],\n\t            [-4, 13],\n\t            [-8, 10]\n\t        ],\n\t        [\n\t            [4579, 5710],\n\t            [13, 29],\n\t            [8, -2],\n\t            [7, 10],\n\t            [6, 0],\n\t            [5, 8],\n\t            [-3, 20],\n\t            [3, 6],\n\t            [1, 20]\n\t        ],\n\t        [\n\t            [4619, 5801],\n\t            [13, -1],\n\t            [20, -14],\n\t            [6, 1],\n\t            [3, 7],\n\t            [15, -5],\n\t            [4, 4]\n\t        ],\n\t        [\n\t            [4680, 5793],\n\t            [1, -22],\n\t            [5, 0],\n\t            [7, 8],\n\t            [5, -2],\n\t            [7, -15],\n\t            [12, -5],\n\t            [8, 13],\n\t            [9, 8],\n\t            [6, 8],\n\t            [6, -1],\n\t            [6, -13],\n\t            [3, -17],\n\t            [12, -24],\n\t            [-6, -16],\n\t            [-1, -19],\n\t            [6, 6],\n\t            [3, -7],\n\t            [-1, -17],\n\t            [8, -18]\n\t        ],\n\t        [\n\t            [4532, 5834],\n\t            [3, 27]\n\t        ],\n\t        [\n\t            [4535, 5861],\n\t            [31, 1],\n\t            [6, 14],\n\t            [9, 1],\n\t            [11, -14],\n\t            [8, -1],\n\t            [9, 10],\n\t            [6, -17],\n\t            [-12, -13],\n\t            [-12, 1],\n\t            [-12, 13],\n\t            [-10, -14],\n\t            [-5, -1],\n\t            [-7, -8],\n\t            [-25, 1]\n\t        ],\n\t        [\n\t            [4579, 5710],\n\t            [-15, 24],\n\t            [-11, 4],\n\t            [-7, 17],\n\t            [1, 9],\n\t            [-9, 13],\n\t            [-2, 12]\n\t        ],\n\t        [\n\t            [4536, 5789],\n\t            [15, 10],\n\t            [9, -2],\n\t            [8, 7],\n\t            [51, -3]\n\t        ],\n\t        [\n\t            [5263, 5117],\n\t            [-5, 9],\n\t            [10, 66]\n\t        ],\n\t        [\n\t            [5658, 7167],\n\t            [15, -20],\n\t            [22, 3],\n\t            [20, -4],\n\t            [0, -10],\n\t            [15, 7],\n\t            [-4, -18],\n\t            [-40, -5],\n\t            [1, 10],\n\t            [-34, 12],\n\t            [5, 25]\n\t        ],\n\t        [\n\t            [5723, 7469],\n\t            [-17, 2],\n\t            [-14, 6],\n\t            [-34, -16],\n\t            [19, -33],\n\t            [-14, -10],\n\t            [-15, 0],\n\t            [-15, 31],\n\t            [-5, -13],\n\t            [6, -36],\n\t            [14, -27],\n\t            [-10, -13],\n\t            [15, -27],\n\t            [14, -18],\n\t            [0, -33],\n\t            [-25, 16],\n\t            [8, -30],\n\t            [-18, -7],\n\t            [11, -52],\n\t            [-19, -1],\n\t            [-23, 26],\n\t            [-10, 47],\n\t            [-5, 40],\n\t            [-11, 27],\n\t            [-14, 34],\n\t            [-2, 16]\n\t        ],\n\t        [\n\t            [5583, 7470],\n\t            [18, 6],\n\t            [11, 13],\n\t            [15, -2],\n\t            [5, 11],\n\t            [5, 2]\n\t        ],\n\t        [\n\t            [5725, 7529],\n\t            [13, -16],\n\t            [-8, -37],\n\t            [-7, -7]\n\t        ],\n\t        [\n\t            [3701, 9939],\n\t            [93, 35],\n\t            [97, -2],\n\t            [36, 21],\n\t            [98, 6],\n\t            [222, -7],\n\t            [174, -47],\n\t            [-52, -23],\n\t            [-106, -3],\n\t            [-150, -5],\n\t            [14, -11],\n\t            [99, 7],\n\t            [83, -21],\n\t            [54, 18],\n\t            [23, -21],\n\t            [-30, -34],\n\t            [71, 22],\n\t            [135, 23],\n\t            [83, -12],\n\t            [15, -25],\n\t            [-113, -42],\n\t            [-16, -14],\n\t            [-88, -10],\n\t            [64, -3],\n\t            [-32, -43],\n\t            [-23, -38],\n\t            [1, -66],\n\t            [33, -38],\n\t            [-43, -3],\n\t            [-46, -19],\n\t            [52, -31],\n\t            [6, -50],\n\t            [-30, -6],\n\t            [36, -50],\n\t            [-61, -5],\n\t            [32, -24],\n\t            [-9, -20],\n\t            [-39, -10],\n\t            [-39, 0],\n\t            [35, -40],\n\t            [0, -26],\n\t            [-55, 24],\n\t            [-14, -15],\n\t            [37, -15],\n\t            [37, -36],\n\t            [10, -48],\n\t            [-49, -11],\n\t            [-22, 22],\n\t            [-34, 34],\n\t            [10, -40],\n\t            [-33, -31],\n\t            [73, -2],\n\t            [39, -3],\n\t            [-75, -52],\n\t            [-75, -46],\n\t            [-81, -21],\n\t            [-31, 0],\n\t            [-29, -23],\n\t            [-38, -62],\n\t            [-60, -42],\n\t            [-19, -2],\n\t            [-37, -15],\n\t            [-40, -13],\n\t            [-24, -37],\n\t            [0, -41],\n\t            [-15, -39],\n\t            [-45, -47],\n\t            [11, -47],\n\t            [-12, -48],\n\t            [-14, -58],\n\t            [-39, -4],\n\t            [-41, 49],\n\t            [-56, 0],\n\t            [-27, 32],\n\t            [-18, 58],\n\t            [-49, 73],\n\t            [-14, 39],\n\t            [-3, 53],\n\t            [-39, 54],\n\t            [10, 44],\n\t            [-18, 21],\n\t            [27, 69],\n\t            [42, 22],\n\t            [11, 25],\n\t            [6, 46],\n\t            [-32, -21],\n\t            [-15, -9],\n\t            [-25, -8],\n\t            [-34, 19],\n\t            [-2, 40],\n\t            [11, 31],\n\t            [25, 1],\n\t            [57, -15],\n\t            [-48, 37],\n\t            [-24, 20],\n\t            [-28, -8],\n\t            [-23, 15],\n\t            [31, 55],\n\t            [-17, 22],\n\t            [-22, 41],\n\t            [-34, 62],\n\t            [-35, 23],\n\t            [0, 25],\n\t            [-74, 34],\n\t            [-59, 5],\n\t            [-74, -3],\n\t            [-68, -4],\n\t            [-32, 19],\n\t            [-49, 37],\n\t            [73, 19],\n\t            [56, 3],\n\t            [-119, 15],\n\t            [-62, 24],\n\t            [3, 23],\n\t            [106, 28],\n\t            [101, 29],\n\t            [11, 21],\n\t            [-75, 22],\n\t            [24, 23],\n\t            [97, 41],\n\t            [40, 7],\n\t            [-12, 26],\n\t            [66, 16],\n\t            [86, 9],\n\t            [85, 1],\n\t            [30, -19],\n\t            [74, 33],\n\t            [66, -22],\n\t            [39, -5],\n\t            [58, -19],\n\t            [-66, 32],\n\t            [4, 25]\n\t        ],\n\t        [\n\t            [2497, 5869],\n\t            [-14, 10],\n\t            [-17, 1],\n\t            [-13, 12],\n\t            [-15, 24]\n\t        ],\n\t        [\n\t            [2438, 5916],\n\t            [1, 18],\n\t            [3, 13],\n\t            [-4, 12],\n\t            [13, 48],\n\t            [36, 0],\n\t            [1, 20],\n\t            [-5, 4],\n\t            [-3, 12],\n\t            [-10, 14],\n\t            [-11, 20],\n\t            [13, 0],\n\t            [0, 33],\n\t            [26, 0],\n\t            [26, 0]\n\t        ],\n\t        [\n\t            [2529, 5996],\n\t            [10, -11],\n\t            [2, 9],\n\t            [8, -7]\n\t        ],\n\t        [\n\t            [2549, 5987],\n\t            [-13, -23],\n\t            [-13, -16],\n\t            [-2, -12],\n\t            [2, -11],\n\t            [-5, -15]\n\t        ],\n\t        [\n\t            [2518, 5910],\n\t            [-7, -4],\n\t            [2, -7],\n\t            [-6, -6],\n\t            [-9, -15],\n\t            [-1, -9]\n\t        ],\n\t        [\n\t            [3340, 5552],\n\t            [18, -22],\n\t            [17, -38],\n\t            [1, -31],\n\t            [10, -1],\n\t            [15, -29],\n\t            [11, -21]\n\t        ],\n\t        [\n\t            [3412, 5410],\n\t            [-4, -53],\n\t            [-17, -15],\n\t            [1, -14],\n\t            [-5, -31],\n\t            [13, -42],\n\t            [9, -1],\n\t            [3, -33],\n\t            [17, -51]\n\t        ],\n\t        [\n\t            [3313, 5365],\n\t            [-19, 45],\n\t            [7, 16],\n\t            [0, 27],\n\t            [17, 10],\n\t            [7, 11],\n\t            [-10, 22],\n\t            [3, 21],\n\t            [22, 35]\n\t        ],\n\t        [\n\t            [2574, 5825],\n\t            [-5, 18],\n\t            [-8, 5]\n\t        ],\n\t        [\n\t            [2561, 5848],\n\t            [2, 24],\n\t            [-4, 6],\n\t            [-6, 4],\n\t            [-12, -7],\n\t            [-1, 8],\n\t            [-8, 10],\n\t            [-6, 12],\n\t            [-8, 5]\n\t        ],\n\t        [\n\t            [2549, 5987],\n\t            [3, -3],\n\t            [6, 11],\n\t            [8, 1],\n\t            [3, -5],\n\t            [4, 3],\n\t            [13, -6],\n\t            [13, 2],\n\t            [9, 6],\n\t            [3, 7],\n\t            [9, -3],\n\t            [6, -4],\n\t            [8, 1],\n\t            [5, 5],\n\t            [13, -8],\n\t            [4, -1],\n\t            [9, -11],\n\t            [8, -13],\n\t            [10, -9],\n\t            [7, -17]\n\t        ],\n\t        [\n\t            [2690, 5943],\n\t            [-9, 2],\n\t            [-4, -8],\n\t            [-10, -8],\n\t            [-7, 0],\n\t            [-6, -8],\n\t            [-6, 3],\n\t            [-4, 9],\n\t            [-3, -2],\n\t            [-4, -14],\n\t            [-3, 1],\n\t            [0, -12],\n\t            [-10, -17],\n\t            [-5, -7],\n\t            [-3, -7],\n\t            [-8, 12],\n\t            [-6, -16],\n\t            [-6, 1],\n\t            [-6, -2],\n\t            [0, -29],\n\t            [-4, 0],\n\t            [-3, -14],\n\t            [-9, -2]\n\t        ],\n\t        [\n\t            [5522, 7770],\n\t            [7, -23],\n\t            [9, -17],\n\t            [-11, -22]\n\t        ],\n\t        [\n\t            [5515, 7577],\n\t            [-3, -10]\n\t        ],\n\t        [\n\t            [5512, 7567],\n\t            [-26, 22],\n\t            [-16, 21],\n\t            [-26, 18],\n\t            [-23, 43],\n\t            [6, 5],\n\t            [-13, 25],\n\t            [-1, 19],\n\t            [-17, 10],\n\t            [-9, -26],\n\t            [-8, 20],\n\t            [0, 21],\n\t            [1, 1]\n\t        ],\n\t        [\n\t            [5380, 7746],\n\t            [20, -2],\n\t            [5, 9],\n\t            [9, -9],\n\t            [11, -1],\n\t            [0, 16],\n\t            [10, 6],\n\t            [2, 24],\n\t            [23, 16]\n\t        ],\n\t        [\n\t            [5460, 7805],\n\t            [8, -7],\n\t            [21, -26],\n\t            [23, -11],\n\t            [10, 9]\n\t        ],\n\t        [\n\t            [3008, 6124],\n\t            [-19, 10],\n\t            [-13, -5],\n\t            [-17, 5],\n\t            [-13, -11],\n\t            [-15, 18],\n\t            [3, 19],\n\t            [25, -8],\n\t            [21, -5],\n\t            [10, 13],\n\t            [-12, 26],\n\t            [0, 23],\n\t            [-18, 9],\n\t            [7, 16],\n\t            [17, -3],\n\t            [24, -9]\n\t        ],\n\t        [\n\t            [5471, 7900],\n\t            [14, -15],\n\t            [10, -6],\n\t            [24, 7],\n\t            [2, 12],\n\t            [11, 2],\n\t            [14, 9],\n\t            [3, -4],\n\t            [13, 8],\n\t            [6, 13],\n\t            [9, 4],\n\t            [30, -18],\n\t            [6, 6]\n\t        ],\n\t        [\n\t            [5613, 7918],\n\t            [15, -16],\n\t            [2, -16]\n\t        ],\n\t        [\n\t            [5630, 7886],\n\t            [-17, -12],\n\t            [-13, -40],\n\t            [-17, -40],\n\t            [-22, -11]\n\t        ],\n\t        [\n\t            [5561, 7783],\n\t            [-17, 2],\n\t            [-22, -15]\n\t        ],\n\t        [\n\t            [5460, 7805],\n\t            [-6, 20],\n\t            [-4, 0]\n\t        ],\n\t        [\n\t            [8352, 4453],\n\t            [-11, -2],\n\t            [-37, 42],\n\t            [26, 11],\n\t            [14, -18],\n\t            [10, -17],\n\t            [-2, -16]\n\t        ],\n\t        [\n\t            [8471, 4532],\n\t            [2, -11],\n\t            [1, -18]\n\t        ],\n\t        [\n\t            [8474, 4503],\n\t            [-18, -45],\n\t            [-24, -13],\n\t            [-3, 8],\n\t            [2, 20],\n\t            [12, 36],\n\t            [28, 23]\n\t        ],\n\t        [\n\t            [8274, 4579],\n\t            [10, -16],\n\t            [17, 5],\n\t            [7, -25],\n\t            [-32, -12],\n\t            [-19, -8],\n\t            [-15, 1],\n\t            [10, 34],\n\t            [15, 0],\n\t            [7, 21]\n\t        ],\n\t        [\n\t            [8413, 4579],\n\t            [-4, -32],\n\t            [-42, -17],\n\t            [-37, 7],\n\t            [0, 22],\n\t            [22, 12],\n\t            [18, -18],\n\t            [18, 5],\n\t            [25, 21]\n\t        ],\n\t        [\n\t            [8017, 4657],\n\t            [53, -6],\n\t            [6, 25],\n\t            [51, -29],\n\t            [10, -38],\n\t            [42, -11],\n\t            [34, -35],\n\t            [-31, -23],\n\t            [-31, 24],\n\t            [-25, -1],\n\t            [-29, 4],\n\t            [-26, 11],\n\t            [-32, 22],\n\t            [-21, 6],\n\t            [-11, -7],\n\t            [-51, 24],\n\t            [-5, 25],\n\t            [-25, 5],\n\t            [19, 56],\n\t            [34, -3],\n\t            [22, -23],\n\t            [12, -5],\n\t            [4, -21]\n\t        ],\n\t        [\n\t            [8741, 4690],\n\t            [-14, -40],\n\t            [-3, 45],\n\t            [5, 21],\n\t            [6, 20],\n\t            [7, -17],\n\t            [-1, -29]\n\t        ],\n\t        [\n\t            [8534, 4853],\n\t            [-11, -19],\n\t            [-19, 10],\n\t            [-5, 26],\n\t            [28, 3],\n\t            [7, -20]\n\t        ],\n\t        [\n\t            [8623, 4875],\n\t            [10, -45],\n\t            [-23, 24],\n\t            [-23, 5],\n\t            [-16, -4],\n\t            [-19, 2],\n\t            [6, 33],\n\t            [35, 2],\n\t            [30, -17]\n\t        ],\n\t        [\n\t            [8916, 4904],\n\t            [0, -193],\n\t            [1, -192]\n\t        ],\n\t        [\n\t            [8917, 4519],\n\t            [-25, 48],\n\t            [-28, 12],\n\t            [-7, -17],\n\t            [-35, -1],\n\t            [12, 48],\n\t            [17, 16],\n\t            [-7, 64],\n\t            [-14, 50],\n\t            [-53, 50],\n\t            [-23, 5],\n\t            [-42, 54],\n\t            [-8, -28],\n\t            [-11, -5],\n\t            [-6, 21],\n\t            [0, 26],\n\t            [-21, 29],\n\t            [29, 21],\n\t            [20, -1],\n\t            [-2, 16],\n\t            [-41, 0],\n\t            [-11, 35],\n\t            [-25, 11],\n\t            [-11, 29],\n\t            [37, 14],\n\t            [14, 20],\n\t            [45, -25],\n\t            [4, -22],\n\t            [8, -95],\n\t            [29, -35],\n\t            [23, 62],\n\t            [32, 36],\n\t            [25, 0],\n\t            [23, -21],\n\t            [21, -21],\n\t            [30, -11]\n\t        ],\n\t        [\n\t            [8478, 5141],\n\t            [-22, -58],\n\t            [-21, -12],\n\t            [-27, 12],\n\t            [-46, -3],\n\t            [-24, -8],\n\t            [-4, -45],\n\t            [24, -53],\n\t            [15, 27],\n\t            [52, 20],\n\t            [-2, -27],\n\t            [-12, 9],\n\t            [-12, -35],\n\t            [-25, -23],\n\t            [27, -76],\n\t            [-5, -20],\n\t            [25, -68],\n\t            [-1, -39],\n\t            [-14, -17],\n\t            [-11, 20],\n\t            [13, 49],\n\t            [-27, -23],\n\t            [-7, 16],\n\t            [3, 23],\n\t            [-20, 35],\n\t            [3, 57],\n\t            [-19, -18],\n\t            [2, -69],\n\t            [1, -84],\n\t            [-17, -9],\n\t            [-12, 18],\n\t            [8, 54],\n\t            [-4, 57],\n\t            [-12, 1],\n\t            [-9, 40],\n\t            [12, 39],\n\t            [4, 47],\n\t            [14, 89],\n\t            [5, 24],\n\t            [24, 44],\n\t            [22, -18],\n\t            [35, -8],\n\t            [32, 3],\n\t            [27, 43],\n\t            [5, -14]\n\t        ],\n\t        [\n\t            [8574, 5124],\n\t            [-2, -51],\n\t            [-14, 6],\n\t            [-4, -36],\n\t            [11, -32],\n\t            [-8, -7],\n\t            [-11, 38],\n\t            [-8, 75],\n\t            [6, 47],\n\t            [9, 22],\n\t            [2, -32],\n\t            [16, -5],\n\t            [3, -25]\n\t        ],\n\t        [\n\t            [8045, 5176],\n\t            [5, -39],\n\t            [19, -34],\n\t            [18, 12],\n\t            [18, -4],\n\t            [16, 30],\n\t            [13, 5],\n\t            [26, -17],\n\t            [23, 13],\n\t            [14, 82],\n\t            [11, 21],\n\t            [10, 67],\n\t            [32, 0],\n\t            [24, -10]\n\t        ],\n\t        [\n\t            [8274, 5302],\n\t            [-16, -53],\n\t            [20, -56],\n\t            [-5, -28],\n\t            [32, -54],\n\t            [-33, -7],\n\t            [-10, -40],\n\t            [2, -54],\n\t            [-27, -40],\n\t            [-1, -59],\n\t            [-10, -91],\n\t            [-5, 21],\n\t            [-31, -26],\n\t            [-11, 36],\n\t            [-20, 3],\n\t            [-14, 19],\n\t            [-33, -21],\n\t            [-10, 29],\n\t            [-18, -4],\n\t            [-23, 7],\n\t            [-4, 79],\n\t            [-14, 17],\n\t            [-13, 50],\n\t            [-4, 52],\n\t            [3, 55],\n\t            [16, 39]\n\t        ],\n\t        [\n\t            [7939, 4712],\n\t            [-31, -1],\n\t            [-24, 49],\n\t            [-35, 48],\n\t            [-12, 36],\n\t            [-21, 48],\n\t            [-14, 44],\n\t            [-21, 83],\n\t            [-24, 49],\n\t            [-9, 51],\n\t            [-10, 46],\n\t            [-25, 37],\n\t            [-14, 51],\n\t            [-21, 33],\n\t            [-29, 65],\n\t            [-3, 30],\n\t            [18, -2],\n\t            [43, -12],\n\t            [25, -57],\n\t            [21, -40],\n\t            [16, -25],\n\t            [26, -63],\n\t            [28, -1],\n\t            [23, -41],\n\t            [16, -49],\n\t            [22, -27],\n\t            [-12, -49],\n\t            [16, -20],\n\t            [10, -2],\n\t            [5, -41],\n\t            [10, -33],\n\t            [20, -5],\n\t            [14, -37],\n\t            [-7, -74],\n\t            [-1, -91]\n\t        ],\n\t        [\n\t            [7252, 6841],\n\t            [-17, -27],\n\t            [-11, -55],\n\t            [27, -23],\n\t            [26, -29],\n\t            [36, -33],\n\t            [38, -8],\n\t            [16, -30],\n\t            [22, -5],\n\t            [33, -14],\n\t            [23, 1],\n\t            [4, 23],\n\t            [-4, 38],\n\t            [2, 25]\n\t        ],\n\t        [\n\t            [7703, 6727],\n\t            [2, -22],\n\t            [-10, -11],\n\t            [2, -36],\n\t            [-19, 10],\n\t            [-36, -41],\n\t            [0, -33],\n\t            [-15, -50],\n\t            [-1, -29],\n\t            [-13, -48],\n\t            [-21, 13],\n\t            [-1, -61],\n\t            [-7, -20],\n\t            [3, -25],\n\t            [-14, -14]\n\t        ],\n\t        [\n\t            [7472, 6360],\n\t            [-4, -21],\n\t            [-19, 1],\n\t            [-34, -13],\n\t            [2, -44],\n\t            [-15, -35],\n\t            [-40, -40],\n\t            [-31, -69],\n\t            [-21, -38],\n\t            [-28, -38],\n\t            [0, -27],\n\t            [-13, -15],\n\t            [-26, -21],\n\t            [-12, -3],\n\t            [-9, -45],\n\t            [6, -77],\n\t            [1, -49],\n\t            [-11, -56],\n\t            [0, -101],\n\t            [-15, -2],\n\t            [-12, -46],\n\t            [8, -19],\n\t            [-25, -17],\n\t            [-10, -40],\n\t            [-11, -17],\n\t            [-26, 55],\n\t            [-13, 83],\n\t            [-11, 60],\n\t            [-9, 28],\n\t            [-15, 56],\n\t            [-7, 74],\n\t            [-5, 37],\n\t            [-25, 81],\n\t            [-12, 115],\n\t            [-8, 75],\n\t            [0, 72],\n\t            [-5, 55],\n\t            [-41, -35],\n\t            [-19, 7],\n\t            [-36, 71],\n\t            [13, 22],\n\t            [-8, 23],\n\t            [-33, 50]\n\t        ],\n\t        [\n\t            [6893, 6457],\n\t            [19, 40],\n\t            [61, -1],\n\t            [-6, 51],\n\t            [-15, 30],\n\t            [-4, 46],\n\t            [-18, 26],\n\t            [31, 62],\n\t            [32, -4],\n\t            [29, 61],\n\t            [18, 60],\n\t            [27, 60],\n\t            [-1, 42],\n\t            [24, 34],\n\t            [-23, 29],\n\t            [-9, 40],\n\t            [-10, 52],\n\t            [14, 25],\n\t            [42, -14],\n\t            [31, 9],\n\t            [26, 49]\n\t        ],\n\t        [\n\t            [4827, 8240],\n\t            [5, -42],\n\t            [-21, -53],\n\t            [-49, -35],\n\t            [-40, 9],\n\t            [23, 62],\n\t            [-15, 60],\n\t            [38, 46],\n\t            [21, 28]\n\t        ],\n\t        [\n\t            [6497, 7255],\n\t            [25, 12],\n\t            [19, 33],\n\t            [19, -1],\n\t            [12, 11],\n\t            [20, -6],\n\t            [31, -30],\n\t            [22, -6],\n\t            [31, -53],\n\t            [21, -2],\n\t            [3, -49]\n\t        ],\n\t        [\n\t            [6690, 6820],\n\t            [14, -31],\n\t            [11, -36],\n\t            [27, -26],\n\t            [1, -52],\n\t            [13, -10],\n\t            [2, -27],\n\t            [-40, -30],\n\t            [-10, -69]\n\t        ],\n\t        [\n\t            [6708, 6539],\n\t            [-53, 18],\n\t            [-30, 13],\n\t            [-31, 8],\n\t            [-12, 73],\n\t            [-13, 10],\n\t            [-22, -11],\n\t            [-28, -28],\n\t            [-34, 20],\n\t            [-28, 45],\n\t            [-27, 17],\n\t            [-18, 56],\n\t            [-21, 79],\n\t            [-15, -10],\n\t            [-17, 20],\n\t            [-11, -24]\n\t        ],\n\t        [\n\t            [6348, 6825],\n\t            [-15, 32],\n\t            [0, 31],\n\t            [-9, 0],\n\t            [5, 43],\n\t            [-15, 45],\n\t            [-34, 32],\n\t            [-19, 56],\n\t            [6, 46],\n\t            [14, 21],\n\t            [-2, 34],\n\t            [-18, 18],\n\t            [-18, 70]\n\t        ],\n\t        [\n\t            [6243, 7253],\n\t            [-15, 48],\n\t            [5, 18],\n\t            [-8, 68],\n\t            [19, 17]\n\t        ],\n\t        [\n\t            [6357, 7321],\n\t            [9, -43],\n\t            [26, -13],\n\t            [20, -29],\n\t            [39, -10],\n\t            [44, 15],\n\t            [2, 14]\n\t        ],\n\t        [\n\t            [6348, 6825],\n\t            [-16, 3]\n\t        ],\n\t        [\n\t            [6332, 6828],\n\t            [-19, 5],\n\t            [-20, -56]\n\t        ],\n\t        [\n\t            [6293, 6777],\n\t            [-52, 4],\n\t            [-78, 119],\n\t            [-41, 41],\n\t            [-34, 16]\n\t        ],\n\t        [\n\t            [6088, 6957],\n\t            [-11, 72]\n\t        ],\n\t        [\n\t            [6077, 7029],\n\t            [61, 62],\n\t            [11, 71],\n\t            [-3, 43],\n\t            [16, 15],\n\t            [14, 37]\n\t        ],\n\t        [\n\t            [6176, 7257],\n\t            [12, 9],\n\t            [32, -8],\n\t            [10, -15],\n\t            [13, 10]\n\t        ],\n\t        [\n\t            [4597, 8984],\n\t            [-7, -39],\n\t            [31, -40],\n\t            [-36, -45],\n\t            [-80, -41],\n\t            [-24, -10],\n\t            [-36, 8],\n\t            [-78, 19],\n\t            [28, 26],\n\t            [-61, 29],\n\t            [49, 12],\n\t            [-1, 17],\n\t            [-58, 14],\n\t            [19, 38],\n\t            [42, 9],\n\t            [43, -40],\n\t            [42, 32],\n\t            [35, -17],\n\t            [45, 32],\n\t            [47, -4]\n\t        ],\n\t        [\n\t            [5992, 6990],\n\t            [-5, -19]\n\t        ],\n\t        [\n\t            [5987, 6971],\n\t            [-10, 8],\n\t            [-6, -39],\n\t            [7, -7],\n\t            [-7, -8],\n\t            [-1, -15],\n\t            [13, 8]\n\t        ],\n\t        [\n\t            [5983, 6918],\n\t            [0, -23],\n\t            [-14, -95]\n\t        ],\n\t        [\n\t            [5951, 6902],\n\t            [8, 19],\n\t            [-2, 4],\n\t            [8, 27],\n\t            [5, 45],\n\t            [4, 15],\n\t            [1, 0]\n\t        ],\n\t        [\n\t            [5975, 7012],\n\t            [9, 0],\n\t            [3, 11],\n\t            [7, 0]\n\t        ],\n\t        [\n\t            [5994, 7023],\n\t            [1, -24],\n\t            [-4, -9],\n\t            [1, 0]\n\t        ],\n\t        [\n\t            [5431, 7316],\n\t            [-10, -46],\n\t            [4, -19],\n\t            [-6, -30],\n\t            [-21, 22],\n\t            [-14, 7],\n\t            [-39, 30],\n\t            [4, 30],\n\t            [32, -6],\n\t            [28, 7],\n\t            [22, 5]\n\t        ],\n\t        [\n\t            [5255, 7492],\n\t            [17, -42],\n\t            [-4, -78],\n\t            [-13, 4],\n\t            [-11, -20],\n\t            [-10, 16],\n\t            [-2, 71],\n\t            [-6, 34],\n\t            [15, -3],\n\t            [14, 18]\n\t        ],\n\t        [\n\t            [5383, 7805],\n\t            [-3, -29],\n\t            [7, -25]\n\t        ],\n\t        [\n\t            [5387, 7751],\n\t            [-22, 8],\n\t            [-23, -20],\n\t            [1, -30],\n\t            [-3, -17],\n\t            [9, -30],\n\t            [26, -29],\n\t            [14, -49],\n\t            [31, -48],\n\t            [22, 0],\n\t            [7, -13],\n\t            [-8, -11],\n\t            [25, -22],\n\t            [20, -18],\n\t            [24, -30],\n\t            [3, -11],\n\t            [-5, -22],\n\t            [-16, 28],\n\t            [-24, 10],\n\t            [-12, -39],\n\t            [20, -21],\n\t            [-3, -31],\n\t            [-11, -4],\n\t            [-15, -50],\n\t            [-12, -5],\n\t            [0, 18],\n\t            [6, 32],\n\t            [6, 12],\n\t            [-11, 35],\n\t            [-8, 29],\n\t            [-12, 8],\n\t            [-8, 25],\n\t            [-18, 11],\n\t            [-12, 24],\n\t            [-21, 4],\n\t            [-21, 26],\n\t            [-26, 39],\n\t            [-19, 34],\n\t            [-8, 58],\n\t            [-14, 7],\n\t            [-23, 20],\n\t            [-12, -8],\n\t            [-16, -28],\n\t            [-12, -4]\n\t        ],\n\t        [\n\t            [2845, 6150],\n\t            [19, -5],\n\t            [14, -15],\n\t            [5, -16],\n\t            [-19, -1],\n\t            [-9, -10],\n\t            [-15, 10],\n\t            [-16, 21],\n\t            [3, 14],\n\t            [12, 4],\n\t            [6, -2]\n\t        ],\n\t        [\n\t            [5992, 6990],\n\t            [31, -24],\n\t            [54, 63]\n\t        ],\n\t        [\n\t            [6088, 6957],\n\t            [-5, -8],\n\t            [-56, -30],\n\t            [28, -59],\n\t            [-9, -10],\n\t            [-5, -20],\n\t            [-21, -8],\n\t            [-7, -21],\n\t            [-12, -19],\n\t            [-31, 10]\n\t        ],\n\t        [\n\t            [5970, 6792],\n\t            [-1, 8]\n\t        ],\n\t        [\n\t            [5983, 6918],\n\t            [4, 17],\n\t            [0, 36]\n\t        ],\n\t        [\n\t            [8739, 7075],\n\t            [4, -20],\n\t            [-16, -36],\n\t            [-11, 19],\n\t            [-15, -14],\n\t            [-7, -34],\n\t            [-18, 16],\n\t            [0, 28],\n\t            [15, 36],\n\t            [16, -7],\n\t            [12, 25],\n\t            [20, -13]\n\t        ],\n\t        [\n\t            [8915, 7252],\n\t            [-10, -47],\n\t            [4, -30],\n\t            [-14, -42],\n\t            [-35, -27],\n\t            [-49, -4],\n\t            [-40, -67],\n\t            [-19, 22],\n\t            [-1, 44],\n\t            [-48, -13],\n\t            [-33, -27],\n\t            [-32, -2],\n\t            [28, -43],\n\t            [-19, -101],\n\t            [-18, -24],\n\t            [-13, 23],\n\t            [7, 53],\n\t            [-18, 17],\n\t            [-11, 41],\n\t            [26, 18],\n\t            [15, 37],\n\t            [28, 30],\n\t            [20, 41],\n\t            [55, 17],\n\t            [30, -12],\n\t            [29, 105],\n\t            [19, -28],\n\t            [40, 59],\n\t            [16, 23],\n\t            [18, 72],\n\t            [-5, 67],\n\t            [11, 37],\n\t            [30, 11],\n\t            [15, -82],\n\t            [-1, -48],\n\t            [-25, -59],\n\t            [0, -61]\n\t        ],\n\t        [\n\t            [8997, 7667],\n\t            [19, -12],\n\t            [20, 25],\n\t            [6, -67],\n\t            [-41, -16],\n\t            [-25, -59],\n\t            [-43, 41],\n\t            [-15, -65],\n\t            [-31, -1],\n\t            [-4, 59],\n\t            [14, 46],\n\t            [29, 3],\n\t            [8, 82],\n\t            [9, 46],\n\t            [32, -62],\n\t            [22, -20]\n\t        ],\n\t        [\n\t            [6970, 7554],\n\t            [-15, -10],\n\t            [-37, -42],\n\t            [-12, -42],\n\t            [-11, 0],\n\t            [-7, 28],\n\t            [-36, 2],\n\t            [-5, 48],\n\t            [-14, 0],\n\t            [2, 60],\n\t            [-33, 43],\n\t            [-48, -5],\n\t            [-32, -8],\n\t            [-27, 53],\n\t            [-22, 22],\n\t            [-43, 43],\n\t            [-6, 5],\n\t            [-71, -35],\n\t            [1, -218]\n\t        ],\n\t        [\n\t            [6554, 7498],\n\t            [-14, -3],\n\t            [-20, 46],\n\t            [-18, 17],\n\t            [-32, -12],\n\t            [-12, -20]\n\t        ],\n\t        [\n\t            [6458, 7526],\n\t            [-2, 14],\n\t            [7, 25],\n\t            [-5, 21],\n\t            [-32, 20],\n\t            [-13, 53],\n\t            [-15, 15],\n\t            [-1, 19],\n\t            [27, -6],\n\t            [1, 44],\n\t            [23, 9],\n\t            [25, -9],\n\t            [5, 58],\n\t            [-5, 36],\n\t            [-28, -2],\n\t            [-24, 14],\n\t            [-32, -26],\n\t            [-26, -12]\n\t        ],\n\t        [\n\t            [6363, 7799],\n\t            [-14, 9],\n\t            [3, 31],\n\t            [-18, 39],\n\t            [-20, -2],\n\t            [-24, 40],\n\t            [16, 45],\n\t            [-8, 12],\n\t            [22, 65],\n\t            [29, -34],\n\t            [3, 43],\n\t            [58, 64],\n\t            [43, 2],\n\t            [61, -41],\n\t            [33, -24],\n\t            [30, 25],\n\t            [44, 1],\n\t            [35, -30],\n\t            [8, 17],\n\t            [39, -2],\n\t            [7, 28],\n\t            [-45, 40],\n\t            [27, 29],\n\t            [-5, 16],\n\t            [26, 15],\n\t            [-20, 41],\n\t            [13, 20],\n\t            [104, 21],\n\t            [13, 14],\n\t            [70, 22],\n\t            [25, 24],\n\t            [50, -12],\n\t            [9, -61],\n\t            [29, 14],\n\t            [35, -20],\n\t            [-2, -32],\n\t            [27, 3],\n\t            [69, 56],\n\t            [-10, -19],\n\t            [35, -46],\n\t            [62, -150],\n\t            [15, 31],\n\t            [39, -34],\n\t            [39, 16],\n\t            [16, -11],\n\t            [13, -34],\n\t            [20, -12],\n\t            [11, -25],\n\t            [36, 8],\n\t            [15, -36]\n\t        ],\n\t        [\n\t            [7229, 7559],\n\t            [-17, 9],\n\t            [-14, 21],\n\t            [-42, 6],\n\t            [-46, 2],\n\t            [-10, -6],\n\t            [-39, 24],\n\t            [-16, -12],\n\t            [-4, -35],\n\t            [-46, 21],\n\t            [-18, -9],\n\t            [-7, -26]\n\t        ],\n\t        [\n\t            [6155, 4958],\n\t            [-20, -24],\n\t            [-7, -24],\n\t            [-10, -4],\n\t            [-4, -42],\n\t            [-9, -24],\n\t            [-5, -39],\n\t            [-12, -20]\n\t        ],\n\t        [\n\t            [6088, 4781],\n\t            [-40, 59],\n\t            [-1, 35],\n\t            [-101, 120],\n\t            [-5, 6]\n\t        ],\n\t        [\n\t            [5941, 5001],\n\t            [0, 63],\n\t            [8, 24],\n\t            [14, 39],\n\t            [10, 43],\n\t            [-13, 68],\n\t            [-3, 30],\n\t            [-13, 41]\n\t        ],\n\t        [\n\t            [5944, 5309],\n\t            [17, 35],\n\t            [19, 39]\n\t        ],\n\t        [\n\t            [6162, 5289],\n\t            [-24, -67],\n\t            [0, -215],\n\t            [17, -49]\n\t        ],\n\t        [\n\t            [7046, 7387],\n\t            [-53, -9],\n\t            [-34, 19],\n\t            [-30, -4],\n\t            [3, 34],\n\t            [30, -10],\n\t            [10, 18]\n\t        ],\n\t        [\n\t            [6972, 7435],\n\t            [21, -6],\n\t            [36, 43],\n\t            [-33, 31],\n\t            [-20, -15],\n\t            [-21, 22],\n\t            [24, 39],\n\t            [-9, 5]\n\t        ],\n\t        [\n\t            [7849, 5777],\n\t            [-7, 72],\n\t            [18, 49],\n\t            [36, 11],\n\t            [26, -8]\n\t        ],\n\t        [\n\t            [7922, 5901],\n\t            [23, -23],\n\t            [12, 40],\n\t            [25, -21]\n\t        ],\n\t        [\n\t            [7982, 5897],\n\t            [6, -40],\n\t            [-3, -71],\n\t            [-47, -45],\n\t            [13, -36],\n\t            [-30, -4],\n\t            [-24, -24]\n\t        ],\n\t        [\n\t            [7897, 5677],\n\t            [-23, 9],\n\t            [-11, 30],\n\t            [-14, 61]\n\t        ],\n\t        [\n\t            [8564, 7339],\n\t            [24, -70],\n\t            [7, -38],\n\t            [0, -68],\n\t            [-10, -33],\n\t            [-25, -11],\n\t            [-22, -25],\n\t            [-25, -5],\n\t            [-3, 32],\n\t            [5, 45],\n\t            [-13, 61],\n\t            [21, 10],\n\t            [-19, 51]\n\t        ],\n\t        [\n\t            [8504, 7288],\n\t            [2, 5],\n\t            [12, -2],\n\t            [11, 27],\n\t            [20, 2],\n\t            [11, 4],\n\t            [4, 15]\n\t        ],\n\t        [\n\t            [5557, 7574],\n\t            [5, 13]\n\t        ],\n\t        [\n\t            [5562, 7587],\n\t            [7, 4],\n\t            [4, 20],\n\t            [5, 3],\n\t            [4, -8],\n\t            [5, -4],\n\t            [3, -10],\n\t            [5, -2],\n\t            [5, -11],\n\t            [4, 0],\n\t            [-3, -14],\n\t            [-3, -7],\n\t            [1, -5]\n\t        ],\n\t        [\n\t            [5599, 7553],\n\t            [-6, -2],\n\t            [-17, -9],\n\t            [-1, -12],\n\t            [-4, 0]\n\t        ],\n\t        [\n\t            [6332, 6828],\n\t            [6, -26],\n\t            [-3, -13],\n\t            [9, -45]\n\t        ],\n\t        [\n\t            [6344, 6744],\n\t            [-19, -1],\n\t            [-7, 28],\n\t            [-25, 6]\n\t        ],\n\t        [\n\t            [7922, 5901],\n\t            [9, 26],\n\t            [1, 50],\n\t            [-22, 52],\n\t            [-2, 58],\n\t            [-21, 48],\n\t            [-21, 4],\n\t            [-6, -20],\n\t            [-16, -2],\n\t            [-8, 10],\n\t            [-30, -35],\n\t            [0, 53],\n\t            [7, 62],\n\t            [-19, 3],\n\t            [-2, 36],\n\t            [-12, 18]\n\t        ],\n\t        [\n\t            [7780, 6264],\n\t            [6, 21],\n\t            [24, 39]\n\t        ],\n\t        [\n\t            [7837, 6385],\n\t            [17, -47],\n\t            [12, -54],\n\t            [34, 0],\n\t            [11, -52],\n\t            [-18, -15],\n\t            [-8, -21],\n\t            [34, -36],\n\t            [23, -70],\n\t            [17, -52],\n\t            [21, -41],\n\t            [7, -41],\n\t            [-5, -59]\n\t        ],\n\t        [\n\t            [5975, 7012],\n\t            [10, 49],\n\t            [14, 41],\n\t            [0, 2]\n\t        ],\n\t        [\n\t            [5999, 7104],\n\t            [13, -3],\n\t            [4, -23],\n\t            [-15, -22],\n\t            [-7, -33]\n\t        ],\n\t        [\n\t            [4785, 5315],\n\t            [-7, 0],\n\t            [-29, 28],\n\t            [-25, 45],\n\t            [-24, 32],\n\t            [-18, 38]\n\t        ],\n\t        [\n\t            [4682, 5458],\n\t            [6, 19],\n\t            [2, 17],\n\t            [12, 33],\n\t            [13, 27]\n\t        ],\n\t        [\n\t            [5412, 6408],\n\t            [-20, -22],\n\t            [-15, 33],\n\t            [-44, 25]\n\t        ],\n\t        [\n\t            [5263, 6848],\n\t            [13, 14],\n\t            [3, 25],\n\t            [-3, 24],\n\t            [19, 23],\n\t            [8, 19],\n\t            [14, 17],\n\t            [2, 45]\n\t        ],\n\t        [\n\t            [5319, 7015],\n\t            [32, -20],\n\t            [12, 5],\n\t            [23, -10],\n\t            [37, -26],\n\t            [13, -53],\n\t            [25, -11],\n\t            [39, -25],\n\t            [30, -29],\n\t            [13, 15],\n\t            [13, 27],\n\t            [-6, 45],\n\t            [9, 29],\n\t            [20, 28],\n\t            [19, 8],\n\t            [37, -12],\n\t            [10, -27],\n\t            [10, 0],\n\t            [9, -10],\n\t            [28, -7],\n\t            [6, -19]\n\t        ],\n\t        [\n\t            [5694, 6357],\n\t            [0, -118],\n\t            [-32, 0],\n\t            [0, -25]\n\t        ],\n\t        [\n\t            [5662, 6214],\n\t            [-111, 113],\n\t            [-111, 113],\n\t            [-28, -32]\n\t        ],\n\t        [\n\t            [7271, 5502],\n\t            [-4, -62],\n\t            [-12, -16],\n\t            [-24, -14],\n\t            [-13, 47],\n\t            [-5, 85],\n\t            [13, 96],\n\t            [19, -33],\n\t            [13, -42],\n\t            [13, -61]\n\t        ],\n\t        [\n\t            [5804, 3347],\n\t            [10, -18],\n\t            [-9, -29],\n\t            [-4, -19],\n\t            [-16, -9],\n\t            [-5, -19],\n\t            [-10, -6],\n\t            [-21, 46],\n\t            [15, 37],\n\t            [15, 23],\n\t            [13, 12],\n\t            [12, -18]\n\t        ],\n\t        [\n\t            [5631, 8267],\n\t            [-2, 15],\n\t            [3, 16],\n\t            [-13, 10],\n\t            [-29, 10]\n\t        ],\n\t        [\n\t            [5590, 8318],\n\t            [-6, 50]\n\t        ],\n\t        [\n\t            [5584, 8368],\n\t            [32, 18],\n\t            [47, -4],\n\t            [27, 6],\n\t            [4, -12],\n\t            [15, -4],\n\t            [26, -29]\n\t        ],\n\t        [\n\t            [5652, 8242],\n\t            [-7, 19],\n\t            [-14, 6]\n\t        ],\n\t        [\n\t            [5584, 8368],\n\t            [1, 44],\n\t            [14, 37],\n\t            [26, 20],\n\t            [22, -44],\n\t            [22, 1],\n\t            [6, 46]\n\t        ],\n\t        [\n\t            [5757, 8453],\n\t            [14, -14],\n\t            [2, -28],\n\t            [9, -35]\n\t        ],\n\t        [\n\t            [4759, 6691],\n\t            [-4, 0],\n\t            [0, -31],\n\t            [-17, -2],\n\t            [-9, -14],\n\t            [-13, 0],\n\t            [-10, 8],\n\t            [-23, -6],\n\t            [-9, -46],\n\t            [-9, -5],\n\t            [-13, -74],\n\t            [-38, -64],\n\t            [-9, -81],\n\t            [-12, -27],\n\t            [-3, -21],\n\t            [-63, -5]\n\t        ],\n\t        [\n\t            [4527, 6323],\n\t            [1, 27],\n\t            [11, 17],\n\t            [9, 30],\n\t            [-2, 20],\n\t            [10, 42],\n\t            [15, 38],\n\t            [9, 9],\n\t            [8, 35],\n\t            [0, 31],\n\t            [10, 37],\n\t            [19, 21],\n\t            [18, 60],\n\t            [0, 1],\n\t            [14, 23],\n\t            [26, 6],\n\t            [22, 41],\n\t            [14, 16],\n\t            [23, 49],\n\t            [-7, 73],\n\t            [10, 51],\n\t            [4, 31],\n\t            [18, 40],\n\t            [28, 27],\n\t            [21, 25],\n\t            [18, 61],\n\t            [9, 36],\n\t            [20, 0],\n\t            [17, -25],\n\t            [26, 4],\n\t            [29, -13],\n\t            [12, -1]\n\t        ],\n\t        [\n\t            [5739, 7906],\n\t            [6, 9],\n\t            [19, 6],\n\t            [20, -19],\n\t            [12, -2],\n\t            [12, -16],\n\t            [-2, -20],\n\t            [11, -9],\n\t            [4, -25],\n\t            [9, -15],\n\t            [-2, -9],\n\t            [5, -6],\n\t            [-7, -4],\n\t            [-16, 1],\n\t            [-3, 9],\n\t            [-6, -5],\n\t            [2, -11],\n\t            [-7, -19],\n\t            [-5, -20],\n\t            [-7, -6]\n\t        ],\n\t        [\n\t            [5784, 7745],\n\t            [-5, 27],\n\t            [3, 25],\n\t            [-1, 26],\n\t            [-16, 35],\n\t            [-9, 25],\n\t            [-9, 17],\n\t            [-8, 6]\n\t        ],\n\t        [\n\t            [6376, 4321],\n\t            [7, -25],\n\t            [7, -39],\n\t            [4, -71],\n\t            [7, -28],\n\t            [-2, -28],\n\t            [-5, -18],\n\t            [-10, 35],\n\t            [-5, -18],\n\t            [5, -43],\n\t            [-2, -25],\n\t            [-8, -14],\n\t            [-1, -50],\n\t            [-11, -69],\n\t            [-14, -81],\n\t            [-17, -112],\n\t            [-11, -82],\n\t            [-12, -69],\n\t            [-23, -14],\n\t            [-24, -25],\n\t            [-16, 15],\n\t            [-22, 21],\n\t            [-8, 31],\n\t            [-2, 53],\n\t            [-10, 47],\n\t            [-2, 42],\n\t            [5, 43],\n\t            [13, 10],\n\t            [0, 20],\n\t            [13, 45],\n\t            [2, 37],\n\t            [-6, 28],\n\t            [-5, 38],\n\t            [-2, 54],\n\t            [9, 33],\n\t            [4, 38],\n\t            [14, 2],\n\t            [15, 12],\n\t            [11, 10],\n\t            [12, 1],\n\t            [16, 34],\n\t            [23, 36],\n\t            [8, 30],\n\t            [-4, 25],\n\t            [12, -7],\n\t            [15, 41],\n\t            [1, 36],\n\t            [9, 26],\n\t            [10, -25]\n\t        ],\n\t        [\n\t            [2301, 6586],\n\t            [-10, -52],\n\t            [-5, -43],\n\t            [-2, -79],\n\t            [-3, -29],\n\t            [5, -32],\n\t            [9, -29],\n\t            [5, -45],\n\t            [19, -44],\n\t            [6, -34],\n\t            [11, -29],\n\t            [29, -16],\n\t            [12, -25],\n\t            [24, 17],\n\t            [21, 6],\n\t            [21, 11],\n\t            [18, 10],\n\t            [17, 24],\n\t            [7, 34],\n\t            [2, 50],\n\t            [5, 17],\n\t            [19, 16],\n\t            [29, 13],\n\t            [25, -2],\n\t            [17, 5],\n\t            [6, -12],\n\t            [-1, -29],\n\t            [-15, -35],\n\t            [-6, -36],\n\t            [5, -10],\n\t            [-4, -26],\n\t            [-7, -46],\n\t            [-7, 15],\n\t            [-6, -1]\n\t        ],\n\t        [\n\t            [2438, 5916],\n\t            [-32, 64],\n\t            [-14, 19],\n\t            [-23, 16],\n\t            [-15, -5],\n\t            [-22, -22],\n\t            [-14, -6],\n\t            [-20, 16],\n\t            [-21, 11],\n\t            [-26, 27],\n\t            [-21, 8],\n\t            [-31, 28],\n\t            [-23, 28],\n\t            [-7, 16],\n\t            [-16, 3],\n\t            [-28, 19],\n\t            [-12, 27],\n\t            [-30, 34],\n\t            [-14, 37],\n\t            [-6, 29],\n\t            [9, 5],\n\t            [-3, 17],\n\t            [7, 16],\n\t            [0, 20],\n\t            [-10, 27],\n\t            [-2, 23],\n\t            [-9, 30],\n\t            [-25, 59],\n\t            [-28, 46],\n\t            [-13, 37],\n\t            [-24, 24],\n\t            [-5, 14],\n\t            [4, 37],\n\t            [-14, 13],\n\t            [-17, 29],\n\t            [-7, 41],\n\t            [-14, 5],\n\t            [-17, 31],\n\t            [-13, 29],\n\t            [-1, 19],\n\t            [-15, 44],\n\t            [-10, 45],\n\t            [1, 23],\n\t            [-20, 23],\n\t            [-10, -2],\n\t            [-15, 16],\n\t            [-5, -24],\n\t            [5, -28],\n\t            [2, -45],\n\t            [10, -24],\n\t            [21, -41],\n\t            [4, -14],\n\t            [4, -4],\n\t            [4, -20],\n\t            [5, 1],\n\t            [6, -38],\n\t            [8, -15],\n\t            [6, -21],\n\t            [17, -30],\n\t            [10, -55],\n\t            [8, -26],\n\t            [8, -28],\n\t            [1, -31],\n\t            [13, -2],\n\t            [12, -27],\n\t            [10, -26],\n\t            [-1, -11],\n\t            [-12, -21],\n\t            [-5, 0],\n\t            [-7, 36],\n\t            [-18, 33],\n\t            [-20, 29],\n\t            [-14, 15],\n\t            [1, 43],\n\t            [-5, 32],\n\t            [-13, 19],\n\t            [-19, 26],\n\t            [-4, -8],\n\t            [-7, 16],\n\t            [-17, 14],\n\t            [-16, 34],\n\t            [2, 5],\n\t            [11, -4],\n\t            [11, 22],\n\t            [1, 27],\n\t            [-22, 42],\n\t            [-16, 17],\n\t            [-10, 36],\n\t            [-11, 39],\n\t            [-12, 47],\n\t            [-12, 54]\n\t        ],\n\t        [\n\t            [1746, 6980],\n\t            [32, 4],\n\t            [35, 7],\n\t            [-2, -12],\n\t            [41, -29],\n\t            [64, -41],\n\t            [55, 0],\n\t            [22, 0],\n\t            [0, 24],\n\t            [48, 0],\n\t            [10, -20],\n\t            [15, -19],\n\t            [16, -26],\n\t            [9, -31],\n\t            [7, -32],\n\t            [15, -18],\n\t            [23, -18],\n\t            [17, 47],\n\t            [23, 1],\n\t            [19, -24],\n\t            [14, -40],\n\t            [10, -35],\n\t            [16, -34],\n\t            [6, -41],\n\t            [8, -28],\n\t            [22, -18],\n\t            [20, -13],\n\t            [10, 2]\n\t        ],\n\t        [\n\t            [5599, 7553],\n\t            [9, 4],\n\t            [13, 1]\n\t        ],\n\t        [\n\t            [4661, 5921],\n\t            [10, 11],\n\t            [4, 35],\n\t            [9, 1],\n\t            [20, -16],\n\t            [15, 11],\n\t            [11, -4],\n\t            [4, 13],\n\t            [112, 1],\n\t            [6, 42],\n\t            [-5, 7],\n\t            [-13, 255],\n\t            [-14, 255],\n\t            [43, 1]\n\t        ],\n\t        [\n\t            [5118, 6189],\n\t            [0, -136],\n\t            [-15, -39],\n\t            [-2, -37],\n\t            [-25, -9],\n\t            [-38, -5],\n\t            [-10, -21],\n\t            [-18, -3]\n\t        ],\n\t        [\n\t            [4680, 5793],\n\t            [1, 18],\n\t            [-2, 23],\n\t            [-11, 16],\n\t            [-5, 34],\n\t            [-2, 37]\n\t        ],\n\t        [\n\t            [7737, 5644],\n\t            [-3, 44],\n\t            [9, 45],\n\t            [-10, 35],\n\t            [3, 65],\n\t            [-12, 30],\n\t            [-9, 71],\n\t            [-5, 75],\n\t            [-12, 49],\n\t            [-18, -30],\n\t            [-32, -42],\n\t            [-15, 5],\n\t            [-17, 14],\n\t            [9, 73],\n\t            [-6, 56],\n\t            [-21, 68],\n\t            [3, 21],\n\t            [-16, 7],\n\t            [-20, 49]\n\t        ],\n\t        [\n\t            [7780, 6264],\n\t            [-16, -14],\n\t            [-16, -26],\n\t            [-20, -2],\n\t            [-12, -64],\n\t            [-12, -11],\n\t            [14, -52],\n\t            [17, -43],\n\t            [12, -39],\n\t            [-11, -51],\n\t            [-9, -11],\n\t            [6, -30],\n\t            [19, -47],\n\t            [3, -33],\n\t            [0, -27],\n\t            [11, -54],\n\t            [-16, -55],\n\t            [-13, -61]\n\t        ],\n\t        [\n\t            [5538, 7532],\n\t            [-6, 4],\n\t            [-8, 19],\n\t            [-12, 12]\n\t        ],\n\t        [\n\t            [5533, 7629],\n\t            [8, -10],\n\t            [4, -9],\n\t            [9, -6],\n\t            [10, -12],\n\t            [-2, -5]\n\t        ],\n\t        [\n\t            [7437, 7970],\n\t            [29, 10],\n\t            [53, 51],\n\t            [42, 28],\n\t            [24, -18],\n\t            [29, -1],\n\t            [19, -28],\n\t            [28, -2],\n\t            [40, -15],\n\t            [27, 41],\n\t            [-11, 35],\n\t            [28, 61],\n\t            [31, -24],\n\t            [26, -7],\n\t            [32, -15],\n\t            [6, -44],\n\t            [39, -25],\n\t            [26, 11],\n\t            [36, 7],\n\t            [27, -7],\n\t            [28, -29],\n\t            [16, -30],\n\t            [26, 1],\n\t            [35, -10],\n\t            [26, 15],\n\t            [36, 9],\n\t            [41, 42],\n\t            [17, -6],\n\t            [14, -20],\n\t            [33, 5]\n\t        ],\n\t        [\n\t            [5959, 4377],\n\t            [21, 5],\n\t            [34, -17],\n\t            [7, 8],\n\t            [19, 1],\n\t            [10, 18],\n\t            [17, -1],\n\t            [30, 23],\n\t            [22, 34]\n\t        ],\n\t        [\n\t            [6119, 4448],\n\t            [5, -26],\n\t            [-1, -59],\n\t            [3, -52],\n\t            [1, -92],\n\t            [5, -29],\n\t            [-8, -43],\n\t            [-11, -41],\n\t            [-18, -36],\n\t            [-25, -23],\n\t            [-31, -28],\n\t            [-32, -64],\n\t            [-10, -11],\n\t            [-20, -42],\n\t            [-11, -13],\n\t            [-3, -42],\n\t            [14, -45],\n\t            [5, -35],\n\t            [0, -17],\n\t            [5, 3],\n\t            [-1, -58],\n\t            [-4, -28],\n\t            [6, -10],\n\t            [-4, -25],\n\t            [-11, -21],\n\t            [-23, -20],\n\t            [-34, -32],\n\t            [-12, -21],\n\t            [3, -25],\n\t            [7, -4],\n\t            [-3, -31]\n\t        ],\n\t        [\n\t            [5911, 3478],\n\t            [-21, 0]\n\t        ],\n\t        [\n\t            [5890, 3478],\n\t            [-2, 26],\n\t            [-4, 27]\n\t        ],\n\t        [\n\t            [5884, 3531],\n\t            [-3, 21],\n\t            [5, 66],\n\t            [-7, 42],\n\t            [-13, 83]\n\t        ],\n\t        [\n\t            [5866, 3743],\n\t            [29, 67],\n\t            [7, 43],\n\t            [5, 5],\n\t            [3, 35],\n\t            [-5, 17],\n\t            [1, 44],\n\t            [6, 41],\n\t            [0, 75],\n\t            [-15, 19],\n\t            [-13, 4],\n\t            [-6, 15],\n\t            [-13, 12],\n\t            [-23, -1],\n\t            [-2, 22]\n\t        ],\n\t        [\n\t            [5840, 4141],\n\t            [-2, 42],\n\t            [84, 49]\n\t        ],\n\t        [\n\t            [5922, 4232],\n\t            [16, -28],\n\t            [8, 5],\n\t            [11, -15],\n\t            [1, -23],\n\t            [-6, -28],\n\t            [2, -42],\n\t            [19, -36],\n\t            [8, 41],\n\t            [12, 12],\n\t            [-2, 76],\n\t            [-12, 43],\n\t            [-10, 19],\n\t            [-10, -1],\n\t            [-7, 77],\n\t            [7, 45]\n\t        ],\n\t        [\n\t            [4661, 5921],\n\t            [-18, 41],\n\t            [-17, 43],\n\t            [-18, 16],\n\t            [-13, 17],\n\t            [-16, -1],\n\t            [-13, -12],\n\t            [-14, 5],\n\t            [-10, -19]\n\t        ],\n\t        [\n\t            [4542, 6011],\n\t            [-2, 32],\n\t            [8, 29],\n\t            [3, 55],\n\t            [-3, 59],\n\t            [-3, 29],\n\t            [2, 30],\n\t            [-7, 28],\n\t            [-14, 25]\n\t        ],\n\t        [\n\t            [4526, 6298],\n\t            [6, 20],\n\t            [108, -1],\n\t            [-5, 86],\n\t            [7, 30],\n\t            [26, 5],\n\t            [-1, 152],\n\t            [91, -4],\n\t            [0, 90]\n\t        ],\n\t        [\n\t            [5922, 4232],\n\t            [-15, 15],\n\t            [9, 55],\n\t            [9, 21],\n\t            [-6, 49],\n\t            [6, 48],\n\t            [5, 16],\n\t            [-7, 50],\n\t            [-14, 26]\n\t        ],\n\t        [\n\t            [5909, 4512],\n\t            [28, -11],\n\t            [5, -16],\n\t            [10, -28],\n\t            [7, -80]\n\t        ],\n\t        [\n\t            [7836, 5425],\n\t            [7, -5],\n\t            [16, -36],\n\t            [12, -40],\n\t            [2, -39],\n\t            [-3, -27],\n\t            [2, -21],\n\t            [2, -35],\n\t            [10, -16],\n\t            [11, -52],\n\t            [-1, -20],\n\t            [-19, -4],\n\t            [-27, 44],\n\t            [-32, 47],\n\t            [-4, 30],\n\t            [-16, 39],\n\t            [-4, 49],\n\t            [-10, 32],\n\t            [4, 43],\n\t            [-7, 25]\n\t        ],\n\t        [\n\t            [7779, 5439],\n\t            [5, 11],\n\t            [23, -26],\n\t            [2, -30],\n\t            [18, 7],\n\t            [9, 24]\n\t        ],\n\t        [\n\t            [8045, 5176],\n\t            [21, -20],\n\t            [21, 11],\n\t            [6, 50],\n\t            [12, 11],\n\t            [33, 13],\n\t            [20, 47],\n\t            [14, 37]\n\t        ],\n\t        [\n\t            [8206, 5379],\n\t            [22, 41],\n\t            [14, 47],\n\t            [11, 0],\n\t            [14, -30],\n\t            [1, -26],\n\t            [19, -16],\n\t            [23, -18],\n\t            [-2, -23],\n\t            [-19, -3],\n\t            [5, -29],\n\t            [-20, -20]\n\t        ],\n\t        [\n\t            [5453, 3369],\n\t            [-20, 45],\n\t            [-11, 43],\n\t            [-6, 58],\n\t            [-7, 42],\n\t            [-9, 91],\n\t            [-1, 71],\n\t            [-3, 32],\n\t            [-11, 25],\n\t            [-15, 48],\n\t            [-14, 71],\n\t            [-6, 37],\n\t            [-23, 58],\n\t            [-2, 45]\n\t        ],\n\t        [\n\t            [5644, 4022],\n\t            [23, 14],\n\t            [18, -4],\n\t            [11, -13],\n\t            [0, -5]\n\t        ],\n\t        [\n\t            [5552, 3594],\n\t            [0, -218],\n\t            [-25, -30],\n\t            [-15, -4],\n\t            [-17, 11],\n\t            [-13, 4],\n\t            [-4, 25],\n\t            [-11, 17],\n\t            [-14, -30]\n\t        ],\n\t        [\n\t            [9604, 3812],\n\t            [23, -36],\n\t            [14, -28],\n\t            [-10, -14],\n\t            [-16, 16],\n\t            [-19, 27],\n\t            [-18, 31],\n\t            [-19, 42],\n\t            [-4, 20],\n\t            [12, -1],\n\t            [16, -20],\n\t            [12, -20],\n\t            [9, -17]\n\t        ],\n\t        [\n\t            [5412, 6408],\n\t            [7, -92],\n\t            [10, -15],\n\t            [1, -19],\n\t            [11, -20],\n\t            [-6, -25],\n\t            [-11, -120],\n\t            [-1, -77],\n\t            [-35, -56],\n\t            [-12, -78],\n\t            [11, -22],\n\t            [0, -38],\n\t            [18, -1],\n\t            [-3, -28]\n\t        ],\n\t        [\n\t            [5393, 5795],\n\t            [-5, -1],\n\t            [-19, 64],\n\t            [-6, 3],\n\t            [-22, -33],\n\t            [-21, 17],\n\t            [-15, 3],\n\t            [-8, -8],\n\t            [-17, 2],\n\t            [-16, -25],\n\t            [-14, -2],\n\t            [-34, 31],\n\t            [-13, -15],\n\t            [-14, 1],\n\t            [-10, 23],\n\t            [-28, 22],\n\t            [-30, -7],\n\t            [-7, -13],\n\t            [-4, -34],\n\t            [-8, -24],\n\t            [-2, -53]\n\t        ],\n\t        [\n\t            [5236, 5339],\n\t            [-29, -21],\n\t            [-11, 3],\n\t            [-10, -13],\n\t            [-23, 1],\n\t            [-15, 37],\n\t            [-9, 43],\n\t            [-19, 39],\n\t            [-21, -1],\n\t            [-25, 0]\n\t        ],\n\t        [\n\t            [2619, 5713],\n\t            [-10, 18],\n\t            [-13, 24],\n\t            [-6, 20],\n\t            [-12, 19],\n\t            [-13, 26],\n\t            [3, 9],\n\t            [4, -9],\n\t            [2, 5]\n\t        ],\n\t        [\n\t            [2690, 5943],\n\t            [-2, -5],\n\t            [-2, -13],\n\t            [3, -22],\n\t            [-6, -20],\n\t            [-3, -24],\n\t            [-1, -26],\n\t            [1, -15],\n\t            [1, -27],\n\t            [-4, -6],\n\t            [-3, -25],\n\t            [2, -15],\n\t            [-6, -16],\n\t            [2, -16],\n\t            [4, -9]\n\t        ],\n\t        [\n\t            [5092, 8091],\n\t            [14, 16],\n\t            [24, 87],\n\t            [38, 25],\n\t            [23, -2]\n\t        ],\n\t        [\n\t            [5863, 9167],\n\t            [-47, -24],\n\t            [-22, -5]\n\t        ],\n\t        [\n\t            [5573, 9140],\n\t            [-17, -2],\n\t            [-4, -39],\n\t            [-53, 9],\n\t            [-7, -33],\n\t            [-27, 1],\n\t            [-18, -42],\n\t            [-28, -66],\n\t            [-43, -83],\n\t            [10, -20],\n\t            [-10, -24],\n\t            [-27, 1],\n\t            [-18, -55],\n\t            [2, -79],\n\t            [17, -29],\n\t            [-9, -70],\n\t            [-23, -40],\n\t            [-12, -34]\n\t        ],\n\t        [\n\t            [5306, 8535],\n\t            [-19, 36],\n\t            [-55, -69],\n\t            [-37, -13],\n\t            [-38, 30],\n\t            [-10, 63],\n\t            [-9, 137],\n\t            [26, 38],\n\t            [73, 49],\n\t            [55, 61],\n\t            [51, 82],\n\t            [66, 115],\n\t            [47, 44],\n\t            [76, 74],\n\t            [61, 26],\n\t            [46, -3],\n\t            [42, 49],\n\t            [51, -3],\n\t            [50, 12],\n\t            [87, -43],\n\t            [-36, -16],\n\t            [30, -37]\n\t        ],\n\t        [\n\t            [5686, 9657],\n\t            [-62, -24],\n\t            [-49, 13],\n\t            [19, 16],\n\t            [-16, 19],\n\t            [57, 11],\n\t            [11, -22],\n\t            [40, -13]\n\t        ],\n\t        [\n\t            [5506, 9766],\n\t            [92, -44],\n\t            [-70, -23],\n\t            [-15, -44],\n\t            [-25, -11],\n\t            [-13, -49],\n\t            [-34, -2],\n\t            [-59, 36],\n\t            [25, 21],\n\t            [-42, 17],\n\t            [-54, 50],\n\t            [-21, 46],\n\t            [75, 21],\n\t            [16, -20],\n\t            [39, 0],\n\t            [11, 21],\n\t            [40, 2],\n\t            [35, -21]\n\t        ],\n\t        [\n\t            [5706, 9808],\n\t            [55, -21],\n\t            [-41, -32],\n\t            [-81, -7],\n\t            [-82, 10],\n\t            [-5, 16],\n\t            [-40, 1],\n\t            [-30, 27],\n\t            [86, 17],\n\t            [40, -14],\n\t            [28, 17],\n\t            [70, -14]\n\t        ],\n\t        [\n\t            [9805, 2640],\n\t            [6, -24],\n\t            [20, 24],\n\t            [8, -25],\n\t            [0, -25],\n\t            [-10, -27],\n\t            [-18, -44],\n\t            [-14, -24],\n\t            [10, -28],\n\t            [-22, -1],\n\t            [-23, -22],\n\t            [-8, -39],\n\t            [-16, -60],\n\t            [-21, -26],\n\t            [-14, -17],\n\t            [-26, 1],\n\t            [-18, 20],\n\t            [-30, 4],\n\t            [-5, 22],\n\t            [15, 43],\n\t            [35, 59],\n\t            [18, 11],\n\t            [20, 22],\n\t            [24, 31],\n\t            [16, 31],\n\t            [13, 44],\n\t            [10, 15],\n\t            [5, 33],\n\t            [19, 27],\n\t            [6, -25]\n\t        ],\n\t        [\n\t            [9849, 2922],\n\t            [20, -63],\n\t            [1, 41],\n\t            [13, -16],\n\t            [4, -45],\n\t            [22, -19],\n\t            [19, -5],\n\t            [16, 22],\n\t            [14, -6],\n\t            [-7, -53],\n\t            [-8, -34],\n\t            [-22, 1],\n\t            [-7, -18],\n\t            [3, -25],\n\t            [-4, -11],\n\t            [-11, -32],\n\t            [-14, -41],\n\t            [-21, -23],\n\t            [-5, 15],\n\t            [-12, 9],\n\t            [16, 48],\n\t            [-9, 33],\n\t            [-30, 23],\n\t            [1, 22],\n\t            [20, 20],\n\t            [5, 46],\n\t            [-1, 38],\n\t            [-12, 40],\n\t            [1, 10],\n\t            [-13, 25],\n\t            [-22, 52],\n\t            [-12, 42],\n\t            [11, 4],\n\t            [15, -33],\n\t            [21, -15],\n\t            [8, -52]\n\t        ],\n\t        [\n\t            [6475, 6041],\n\t            [-9, 41],\n\t            [-22, 98]\n\t        ],\n\t        [\n\t            [6444, 6180],\n\t            [83, 59],\n\t            [19, 118],\n\t            [-13, 42]\n\t        ],\n\t        [\n\t            [6566, 6530],\n\t            [12, -40],\n\t            [16, -22],\n\t            [20, -8],\n\t            [17, -10],\n\t            [12, -34],\n\t            [8, -20],\n\t            [10, -7],\n\t            [0, -13],\n\t            [-10, -36],\n\t            [-5, -16],\n\t            [-12, -19],\n\t            [-10, -41],\n\t            [-13, 3],\n\t            [-5, -14],\n\t            [-5, -30],\n\t            [4, -39],\n\t            [-3, -7],\n\t            [-13, 0],\n\t            [-17, -22],\n\t            [-3, -29],\n\t            [-6, -12],\n\t            [-18, 0],\n\t            [-10, -15],\n\t            [0, -24],\n\t            [-14, -16],\n\t            [-15, 5],\n\t            [-19, -19],\n\t            [-12, -4]\n\t        ],\n\t        [\n\t            [6557, 6597],\n\t            [8, 20],\n\t            [3, -5],\n\t            [-2, -25],\n\t            [-4, -10]\n\t        ],\n\t        [\n\t            [6893, 6457],\n\t            [-20, 15],\n\t            [-9, 43],\n\t            [-21, 45],\n\t            [-51, -12],\n\t            [-45, -1],\n\t            [-39, -8]\n\t        ],\n\t        [\n\t            [2836, 5484],\n\t            [-9, 17],\n\t            [-6, 32],\n\t            [7, 16],\n\t            [-7, 4],\n\t            [-5, 20],\n\t            [-14, 16],\n\t            [-12, -4],\n\t            [-6, -20],\n\t            [-11, -15],\n\t            [-6, -2],\n\t            [-3, -13],\n\t            [13, -32],\n\t            [-7, -7],\n\t            [-4, -9],\n\t            [-13, -3],\n\t            [-5, 35],\n\t            [-4, -10],\n\t            [-9, 4],\n\t            [-5, 24],\n\t            [-12, 3],\n\t            [-7, 7],\n\t            [-12, 0],\n\t            [-1, -13],\n\t            [-3, 9]\n\t        ],\n\t        [\n\t            [2707, 5623],\n\t            [10, -22],\n\t            [-1, -12],\n\t            [11, -3],\n\t            [3, 5],\n\t            [8, -14],\n\t            [13, 4],\n\t            [12, 15],\n\t            [17, 12],\n\t            [9, 17],\n\t            [16, -3],\n\t            [-1, -6],\n\t            [15, -2],\n\t            [12, -10],\n\t            [10, -18],\n\t            [10, -16]\n\t        ],\n\t        [\n\t            [3045, 3974],\n\t            [-28, 33],\n\t            [-2, 25],\n\t            [-55, 59],\n\t            [-50, 65],\n\t            [-22, 36],\n\t            [-11, 49],\n\t            [4, 17],\n\t            [-23, 77],\n\t            [-28, 109],\n\t            [-26, 118],\n\t            [-11, 27],\n\t            [-9, 43],\n\t            [-21, 39],\n\t            [-20, 24],\n\t            [9, 26],\n\t            [-14, 57],\n\t            [9, 41],\n\t            [22, 37]\n\t        ],\n\t        [\n\t            [8510, 5555],\n\t            [2, -40],\n\t            [2, -33],\n\t            [-9, -54],\n\t            [-11, 60],\n\t            [-13, -30],\n\t            [9, -43],\n\t            [-8, -28],\n\t            [-32, 35],\n\t            [-8, 42],\n\t            [8, 28],\n\t            [-17, 28],\n\t            [-9, -24],\n\t            [-13, 2],\n\t            [-21, -33],\n\t            [-4, 17],\n\t            [11, 50],\n\t            [17, 17],\n\t            [15, 22],\n\t            [10, -27],\n\t            [21, 17],\n\t            [5, 26],\n\t            [19, 1],\n\t            [-1, 46],\n\t            [22, -28],\n\t            [3, -30],\n\t            [2, -21]\n\t        ],\n\t        [\n\t            [8443, 5665],\n\t            [-10, -20],\n\t            [-9, -37],\n\t            [-8, -17],\n\t            [-17, 40],\n\t            [5, 16],\n\t            [7, 17],\n\t            [3, 36],\n\t            [16, 4],\n\t            [-5, -40],\n\t            [21, 57],\n\t            [-3, -56]\n\t        ],\n\t        [\n\t            [8291, 5608],\n\t            [-37, -56],\n\t            [14, 41],\n\t            [20, 37],\n\t            [16, 41],\n\t            [15, 58],\n\t            [5, -48],\n\t            [-18, -33],\n\t            [-15, -40]\n\t        ],\n\t        [\n\t            [8385, 5760],\n\t            [16, -18],\n\t            [18, 0],\n\t            [0, -25],\n\t            [-13, -25],\n\t            [-18, -18],\n\t            [-1, 28],\n\t            [2, 30],\n\t            [-4, 28]\n\t        ],\n\t        [\n\t            [8485, 5776],\n\t            [8, -66],\n\t            [-21, 16],\n\t            [0, -20],\n\t            [7, -37],\n\t            [-13, -13],\n\t            [-1, 42],\n\t            [-9, 3],\n\t            [-4, 36],\n\t            [16, -5],\n\t            [0, 22],\n\t            [-17, 45],\n\t            [27, -1],\n\t            [7, -22]\n\t        ],\n\t        [\n\t            [8375, 5830],\n\t            [-7, -51],\n\t            [-12, 29],\n\t            [-15, 45],\n\t            [24, -2],\n\t            [10, -21]\n\t        ],\n\t        [\n\t            [8369, 6151],\n\t            [17, -17],\n\t            [9, 15],\n\t            [2, -15],\n\t            [-4, -24],\n\t            [9, -43],\n\t            [-7, -49],\n\t            [-16, -19],\n\t            [-5, -48],\n\t            [7, -47],\n\t            [14, -7],\n\t            [13, 7],\n\t            [34, -32],\n\t            [-2, -32],\n\t            [9, -15],\n\t            [-3, -27],\n\t            [-22, 29],\n\t            [-10, 31],\n\t            [-7, -22],\n\t            [-18, 36],\n\t            [-25, -9],\n\t            [-14, 13],\n\t            [1, 25],\n\t            [9, 15],\n\t            [-8, 13],\n\t            [-4, -21],\n\t            [-14, 34],\n\t            [-4, 26],\n\t            [-1, 56],\n\t            [11, -19],\n\t            [3, 92],\n\t            [9, 54],\n\t            [17, 0]\n\t        ],\n\t        [\n\t            [9329, 4655],\n\t            [-8, -6],\n\t            [-12, 22],\n\t            [-12, 38],\n\t            [-6, 45],\n\t            [4, 6],\n\t            [3, -18],\n\t            [8, -13],\n\t            [14, -38],\n\t            [13, -20],\n\t            [-4, -16]\n\t        ],\n\t        [\n\t            [9221, 4734],\n\t            [-15, -5],\n\t            [-4, -17],\n\t            [-15, -14],\n\t            [-15, -14],\n\t            [-14, 0],\n\t            [-23, 18],\n\t            [-16, 16],\n\t            [2, 18],\n\t            [25, -8],\n\t            [15, 4],\n\t            [5, 29],\n\t            [4, 1],\n\t            [2, -31],\n\t            [16, 4],\n\t            [8, 20],\n\t            [16, 21],\n\t            [-4, 35],\n\t            [17, 1],\n\t            [6, -9],\n\t            [-1, -33],\n\t            [-9, -36]\n\t        ],\n\t        [\n\t            [8916, 4904],\n\t            [48, -41],\n\t            [51, -34],\n\t            [19, -30],\n\t            [16, -30],\n\t            [4, -34],\n\t            [46, -37],\n\t            [7, -31],\n\t            [-25, -7],\n\t            [6, -39],\n\t            [25, -39],\n\t            [18, -62],\n\t            [15, 2],\n\t            [-1, -27],\n\t            [22, -10],\n\t            [-9, -11],\n\t            [30, -25],\n\t            [-3, -17],\n\t            [-18, -4],\n\t            [-7, 16],\n\t            [-24, 6],\n\t            [-28, 9],\n\t            [-22, 38],\n\t            [-16, 32],\n\t            [-14, 52],\n\t            [-36, 26],\n\t            [-24, -17],\n\t            [-17, -20],\n\t            [4, -43],\n\t            [-22, -20],\n\t            [-16, 9],\n\t            [-28, 3]\n\t        ],\n\t        [\n\t            [9253, 4792],\n\t            [-9, -16],\n\t            [-5, 35],\n\t            [-6, 23],\n\t            [-13, 19],\n\t            [-16, 25],\n\t            [-20, 18],\n\t            [8, 14],\n\t            [15, -17],\n\t            [9, -13],\n\t            [12, -14],\n\t            [11, -25],\n\t            [11, -19],\n\t            [3, -30]\n\t        ],\n\t        [\n\t            [5392, 8233],\n\t            [19, 18],\n\t            [43, 27],\n\t            [35, 20],\n\t            [28, -10],\n\t            [2, -14],\n\t            [27, -1]\n\t        ],\n\t        [\n\t            [5546, 8273],\n\t            [34, -7],\n\t            [51, 1]\n\t        ],\n\t        [\n\t            [5653, 8105],\n\t            [14, -52],\n\t            [-3, -17],\n\t            [-14, -6],\n\t            [-25, -50],\n\t            [7, -26],\n\t            [-6, 3]\n\t        ],\n\t        [\n\t            [5626, 7957],\n\t            [-26, 23],\n\t            [-20, -8],\n\t            [-13, 6],\n\t            [-17, -13],\n\t            [-14, 21],\n\t            [-11, -8],\n\t            [-2, 4]\n\t        ],\n\t        [\n\t            [3159, 6151],\n\t            [14, -5],\n\t            [5, -12],\n\t            [-7, -15],\n\t            [-21, 1],\n\t            [-17, -2],\n\t            [-1, 25],\n\t            [4, 9],\n\t            [23, -1]\n\t        ],\n\t        [\n\t            [8628, 7562],\n\t            [4, -10]\n\t        ],\n\t        [\n\t            [8632, 7552],\n\t            [-11, 3],\n\t            [-12, -20],\n\t            [-8, -20],\n\t            [1, -42],\n\t            [-14, -13],\n\t            [-5, -11],\n\t            [-11, -17],\n\t            [-18, -10],\n\t            [-12, -16],\n\t            [-1, -25],\n\t            [-3, -7],\n\t            [11, -9],\n\t            [15, -26]\n\t        ],\n\t        [\n\t            [8504, 7288],\n\t            [-13, 11],\n\t            [-4, -11],\n\t            [-8, -5],\n\t            [-1, 11],\n\t            [-7, 5],\n\t            [-8, 10],\n\t            [8, 26],\n\t            [7, 7],\n\t            [-3, 11],\n\t            [7, 31],\n\t            [-2, 10],\n\t            [-16, 7],\n\t            [-13, 15]\n\t        ],\n\t        [\n\t            [4792, 7249],\n\t            [-11, -15],\n\t            [-14, 8],\n\t            [-15, -6],\n\t            [5, 46],\n\t            [-3, 36],\n\t            [-12, 6],\n\t            [-7, 22],\n\t            [2, 39],\n\t            [11, 21],\n\t            [2, 24],\n\t            [6, 36],\n\t            [-1, 25],\n\t            [-5, 21],\n\t            [-1, 20]\n\t        ],\n\t        [\n\t            [6411, 6520],\n\t            [-2, 43],\n\t            [7, 31],\n\t            [8, 6],\n\t            [8, -18],\n\t            [1, -35],\n\t            [-6, -35]\n\t        ],\n\t        [\n\t            [6427, 6512],\n\t            [-8, -4],\n\t            [-8, 12]\n\t        ],\n\t        [\n\t            [5630, 7886],\n\t            [12, 13],\n\t            [17, -7],\n\t            [18, 0],\n\t            [13, -14],\n\t            [10, 9],\n\t            [20, 5],\n\t            [7, 14],\n\t            [12, 0]\n\t        ],\n\t        [\n\t            [5784, 7745],\n\t            [12, -11],\n\t            [13, 9],\n\t            [13, -10]\n\t        ],\n\t        [\n\t            [5822, 7733],\n\t            [0, -15],\n\t            [-13, -13],\n\t            [-9, 6],\n\t            [-7, -71]\n\t        ],\n\t        [\n\t            [5629, 7671],\n\t            [-5, 10],\n\t            [6, 10],\n\t            [-7, 7],\n\t            [-8, -13],\n\t            [-17, 17],\n\t            [-2, 25],\n\t            [-17, 14],\n\t            [-3, 18],\n\t            [-15, 24]\n\t        ],\n\t        [\n\t            [8989, 8056],\n\t            [28, -105],\n\t            [-41, 19],\n\t            [-17, -85],\n\t            [27, -61],\n\t            [-1, -41],\n\t            [-21, 36],\n\t            [-18, -46],\n\t            [-5, 50],\n\t            [3, 57],\n\t            [-3, 64],\n\t            [6, 45],\n\t            [2, 79],\n\t            [-17, 58],\n\t            [3, 80],\n\t            [25, 28],\n\t            [-11, 27],\n\t            [13, 8],\n\t            [7, -39],\n\t            [10, -57],\n\t            [-1, -58],\n\t            [11, -59]\n\t        ],\n\t        [\n\t            [5546, 8273],\n\t            [6, 26],\n\t            [38, 19]\n\t        ],\n\t        [\n\t            [0, 9132],\n\t            [68, -45],\n\t            [73, -59],\n\t            [-3, -37],\n\t            [19, -15],\n\t            [-6, 43],\n\t            [75, -8],\n\t            [55, -56],\n\t            [-28, -26],\n\t            [-46, -6],\n\t            [0, -57],\n\t            [-11, -13],\n\t            [-26, 2],\n\t            [-22, 21],\n\t            [-36, 17],\n\t            [-7, 26],\n\t            [-28, 9],\n\t            [-31, -7],\n\t            [-16, 20],\n\t            [6, 22],\n\t            [-33, -14],\n\t            [13, -28],\n\t            [-16, -25]\n\t        ],\n\t        [\n\t            [0, 8896],\n\t            [0, 236]\n\t        ],\n\t        [\n\t            [0, 9282],\n\t            [9999, -40],\n\t            [-30, -3],\n\t            [-5, 19],\n\t            [-9964, 24]\n\t        ],\n\t        [\n\t            [0, 9282],\n\t            [4, 3],\n\t            [23, 0],\n\t            [40, -17],\n\t            [-2, -8],\n\t            [-29, -14],\n\t            [-36, -4],\n\t            [0, 40]\n\t        ],\n\t        [\n\t            [8988, 9383],\n\t            [-42, -1],\n\t            [-57, 7],\n\t            [-5, 3],\n\t            [27, 23],\n\t            [34, 6],\n\t            [40, -23],\n\t            [3, -15]\n\t        ],\n\t        [\n\t            [9186, 9493],\n\t            [-32, -23],\n\t            [-44, 5],\n\t            [-52, 23],\n\t            [7, 20],\n\t            [51, -9],\n\t            [70, -16]\n\t        ],\n\t        [\n\t            [9029, 9522],\n\t            [-22, -44],\n\t            [-102, 1],\n\t            [-46, -14],\n\t            [-55, 39],\n\t            [15, 40],\n\t            [37, 11],\n\t            [73, -2],\n\t            [100, -31]\n\t        ],\n\t        [\n\t            [6598, 9235],\n\t            [-17, -5],\n\t            [-91, 8],\n\t            [-7, 26],\n\t            [-50, 16],\n\t            [-4, 32],\n\t            [28, 13],\n\t            [-1, 32],\n\t            [55, 50],\n\t            [-25, 7],\n\t            [66, 52],\n\t            [-7, 27],\n\t            [62, 31],\n\t            [91, 38],\n\t            [93, 11],\n\t            [48, 22],\n\t            [54, 8],\n\t            [19, -23],\n\t            [-19, -19],\n\t            [-98, -29],\n\t            [-85, -28],\n\t            [-86, -57],\n\t            [-42, -57],\n\t            [-43, -57],\n\t            [5, -49],\n\t            [54, -49]\n\t        ],\n\t        [\n\t            [0, 8896],\n\t            [9963, -26],\n\t            [-36, 4],\n\t            [25, -31],\n\t            [17, -49],\n\t            [13, -16],\n\t            [3, -24],\n\t            [-7, -16],\n\t            [-52, 13],\n\t            [-78, -44],\n\t            [-25, -7],\n\t            [-42, -42],\n\t            [-40, -36],\n\t            [-11, -27],\n\t            [-39, 41],\n\t            [-73, -46],\n\t            [-12, 22],\n\t            [-27, -26],\n\t            [-37, 8],\n\t            [-9, -38],\n\t            [-33, -58],\n\t            [1, -24],\n\t            [31, -13],\n\t            [-4, -86],\n\t            [-25, -2],\n\t            [-12, -49],\n\t            [11, -26],\n\t            [-48, -30],\n\t            [-10, -67],\n\t            [-41, -15],\n\t            [-9, -60],\n\t            [-40, -55],\n\t            [-10, 41],\n\t            [-12, 86],\n\t            [-15, 131],\n\t            [13, 82],\n\t            [23, 35],\n\t            [2, 28],\n\t            [43, 13],\n\t            [50, 75],\n\t            [47, 60],\n\t            [50, 48],\n\t            [23, 83],\n\t            [-34, -5],\n\t            [-17, -49],\n\t            [-70, -65],\n\t            [-23, 73],\n\t            [-72, -20],\n\t            [-69, -99],\n\t            [23, -36],\n\t            [-62, -16],\n\t            [-43, -6],\n\t            [2, 43],\n\t            [-43, 9],\n\t            [-35, -29],\n\t            [-85, 10],\n\t            [-91, -18],\n\t            [-90, -115],\n\t            [-106, -139],\n\t            [43, -8],\n\t            [14, -37],\n\t            [27, -13],\n\t            [18, 30],\n\t            [30, -4],\n\t            [40, -65],\n\t            [1, -50],\n\t            [-21, -59],\n\t            [-3, -71],\n\t            [-12, -94],\n\t            [-42, -86],\n\t            [-9, -41],\n\t            [-38, -69],\n\t            [-38, -68],\n\t            [-18, -35],\n\t            [-37, -34],\n\t            [-17, -1],\n\t            [-17, 29],\n\t            [-38, -44],\n\t            [-4, -19]\n\t        ],\n\t        [\n\t            [6363, 7799],\n\t            [-12, -35],\n\t            [-27, -10],\n\t            [-28, -61],\n\t            [25, -56],\n\t            [-2, -40],\n\t            [30, -70]\n\t        ],\n\t        [\n\t            [6109, 7624],\n\t            [-35, 49],\n\t            [-32, 23],\n\t            [-24, 34],\n\t            [20, 10],\n\t            [23, 49],\n\t            [-15, 24],\n\t            [41, 24],\n\t            [-1, 13],\n\t            [-25, -10]\n\t        ],\n\t        [\n\t            [6061, 7840],\n\t            [1, 26],\n\t            [14, 17],\n\t            [27, 4],\n\t            [5, 20],\n\t            [-7, 33],\n\t            [12, 30],\n\t            [-1, 18],\n\t            [-41, 19],\n\t            [-16, -1],\n\t            [-17, 28],\n\t            [-21, -9],\n\t            [-35, 20],\n\t            [0, 12],\n\t            [-10, 26],\n\t            [-22, 3],\n\t            [-2, 18],\n\t            [7, 12],\n\t            [-18, 33],\n\t            [-29, -5],\n\t            [-8, 3],\n\t            [-7, -14],\n\t            [-11, 3]\n\t        ],\n\t        [\n\t            [5777, 8571],\n\t            [31, 33],\n\t            [-29, 28]\n\t        ],\n\t        [\n\t            [5863, 9167],\n\t            [29, 20],\n\t            [46, -35],\n\t            [76, -14],\n\t            [105, -67],\n\t            [21, -28],\n\t            [2, -40],\n\t            [-31, -31],\n\t            [-45, -15],\n\t            [-124, 44],\n\t            [-21, -7],\n\t            [45, -43],\n\t            [2, -28],\n\t            [2, -60],\n\t            [36, -18],\n\t            [22, -15],\n\t            [3, 28],\n\t            [-17, 26],\n\t            [18, 22],\n\t            [67, -37],\n\t            [24, 15],\n\t            [-19, 43],\n\t            [65, 58],\n\t            [25, -4],\n\t            [26, -20],\n\t            [16, 40],\n\t            [-23, 35],\n\t            [14, 36],\n\t            [-21, 36],\n\t            [78, -18],\n\t            [16, -34],\n\t            [-35, -7],\n\t            [0, -33],\n\t            [22, -20],\n\t            [43, 13],\n\t            [7, 38],\n\t            [58, 28],\n\t            [97, 50],\n\t            [20, -3],\n\t            [-27, -35],\n\t            [35, -7],\n\t            [19, 21],\n\t            [52, 1],\n\t            [42, 25],\n\t            [31, -36],\n\t            [32, 39],\n\t            [-29, 35],\n\t            [14, 19],\n\t            [82, -18],\n\t            [39, -18],\n\t            [100, -68],\n\t            [19, 31],\n\t            [-28, 31],\n\t            [-1, 13],\n\t            [-34, 6],\n\t            [10, 28],\n\t            [-15, 46],\n\t            [-1, 19],\n\t            [51, 53],\n\t            [18, 54],\n\t            [21, 11],\n\t            [74, -15],\n\t            [5, -33],\n\t            [-26, -48],\n\t            [17, -19],\n\t            [9, -41],\n\t            [-6, -81],\n\t            [31, -36],\n\t            [-12, -40],\n\t            [-55, -84],\n\t            [32, -8],\n\t            [11, 21],\n\t            [31, 15],\n\t            [7, 29],\n\t            [24, 29],\n\t            [-16, 33],\n\t            [13, 39],\n\t            [-31, 5],\n\t            [-6, 33],\n\t            [22, 59],\n\t            [-36, 48],\n\t            [50, 40],\n\t            [-7, 42],\n\t            [14, 2],\n\t            [15, -33],\n\t            [-11, -57],\n\t            [29, -11],\n\t            [-12, 43],\n\t            [46, 23],\n\t            [58, 3],\n\t            [51, -34],\n\t            [-25, 49],\n\t            [-2, 63],\n\t            [48, 12],\n\t            [67, -2],\n\t            [60, 7],\n\t            [-23, 31],\n\t            [33, 39],\n\t            [31, 2],\n\t            [54, 29],\n\t            [74, 8],\n\t            [9, 16],\n\t            [73, 6],\n\t            [23, -14],\n\t            [62, 32],\n\t            [51, -1],\n\t            [8, 25],\n\t            [26, 25],\n\t            [66, 25],\n\t            [48, -19],\n\t            [-38, -15],\n\t            [63, -9],\n\t            [7, -29],\n\t            [25, 14],\n\t            [82, -1],\n\t            [62, -29],\n\t            [23, -22],\n\t            [-7, -30],\n\t            [-31, -18],\n\t            [-73, -33],\n\t            [-21, -17],\n\t            [35, -8],\n\t            [41, -15],\n\t            [25, 11],\n\t            [14, -38],\n\t            [12, 15],\n\t            [44, 10],\n\t            [90, -10],\n\t            [6, -28],\n\t            [116, -9],\n\t            [2, 46],\n\t            [59, -11],\n\t            [44, 1],\n\t            [45, -32],\n\t            [13, -37],\n\t            [-17, -25],\n\t            [35, -47],\n\t            [44, -24],\n\t            [27, 62],\n\t            [44, -26],\n\t            [48, 16],\n\t            [53, -18],\n\t            [21, 16],\n\t            [45, -8],\n\t            [-20, 55],\n\t            [37, 25],\n\t            [251, -38],\n\t            [24, -35],\n\t            [72, -45],\n\t            [112, 11],\n\t            [56, -10],\n\t            [23, -24],\n\t            [-4, -44],\n\t            [35, -16],\n\t            [37, 12],\n\t            [49, 1],\n\t            [52, -11],\n\t            [53, 6],\n\t            [49, -52],\n\t            [34, 19],\n\t            [-23, 37],\n\t            [13, 27],\n\t            [88, -17],\n\t            [58, 4],\n\t            [80, -29],\n\t            [-9960, -25]\n\t        ],\n\t        [\n\t            [7918, 9684],\n\t            [-157, -23],\n\t            [51, 77],\n\t            [23, 7],\n\t            [21, -4],\n\t            [70, -33],\n\t            [-8, -24]\n\t        ],\n\t        [\n\t            [6420, 9816],\n\t            [-37, -8],\n\t            [-25, -4],\n\t            [-4, -10],\n\t            [-33, -10],\n\t            [-30, 14],\n\t            [16, 19],\n\t            [-62, 2],\n\t            [54, 10],\n\t            [43, 1],\n\t            [5, -16],\n\t            [16, 14],\n\t            [26, 10],\n\t            [42, -13],\n\t            [-11, -9]\n\t        ],\n\t        [\n\t            [7775, 9718],\n\t            [-60, -8],\n\t            [-78, 17],\n\t            [-46, 23],\n\t            [-21, 42],\n\t            [-38, 12],\n\t            [72, 40],\n\t            [60, 14],\n\t            [54, -30],\n\t            [64, -57],\n\t            [-7, -53]\n\t        ],\n\t        [\n\t            [5844, 4990],\n\t            [11, -33],\n\t            [-1, -35],\n\t            [-8, -7]\n\t        ],\n\t        [\n\t            [5821, 4978],\n\t            [7, -6],\n\t            [16, 18]\n\t        ],\n\t        [\n\t            [4526, 6298],\n\t            [1, 25]\n\t        ],\n\t        [\n\t            [6188, 6023],\n\t            [-4, 26],\n\t            [-8, 17],\n\t            [-2, 24],\n\t            [-15, 21],\n\t            [-15, 50],\n\t            [-7, 48],\n\t            [-20, 40],\n\t            [-12, 10],\n\t            [-18, 56],\n\t            [-4, 41],\n\t            [2, 35],\n\t            [-16, 66],\n\t            [-13, 23],\n\t            [-15, 12],\n\t            [-10, 34],\n\t            [2, 13],\n\t            [-8, 31],\n\t            [-8, 13],\n\t            [-11, 44],\n\t            [-17, 48],\n\t            [-14, 40],\n\t            [-14, 0],\n\t            [5, 33],\n\t            [1, 20],\n\t            [3, 24]\n\t        ],\n\t        [\n\t            [6344, 6744],\n\t            [11, -51],\n\t            [14, -13],\n\t            [5, -21],\n\t            [18, -25],\n\t            [2, -24],\n\t            [-3, -20],\n\t            [4, -20],\n\t            [8, -16],\n\t            [4, -20],\n\t            [4, -14]\n\t        ],\n\t        [\n\t            [6427, 6512],\n\t            [5, -22]\n\t        ],\n\t        [\n\t            [6444, 6180],\n\t            [-80, -23],\n\t            [-26, -26],\n\t            [-20, -62],\n\t            [-13, -10],\n\t            [-7, 20],\n\t            [-11, -3],\n\t            [-27, 6],\n\t            [-5, 5],\n\t            [-32, -1],\n\t            [-7, -5],\n\t            [-12, 15],\n\t            [-7, -29],\n\t            [3, -25],\n\t            [-12, -19]\n\t        ],\n\t        [\n\t            [5943, 5617],\n\t            [-4, 1],\n\t            [0, 29],\n\t            [-3, 20],\n\t            [-14, 24],\n\t            [-4, 42],\n\t            [4, 44],\n\t            [-13, 4],\n\t            [-2, -13],\n\t            [-17, -3],\n\t            [7, -17],\n\t            [2, -36],\n\t            [-15, -32],\n\t            [-14, -43],\n\t            [-14, -6],\n\t            [-23, 34],\n\t            [-11, -12],\n\t            [-3, -17],\n\t            [-14, -11],\n\t            [-1, -12],\n\t            [-28, 0],\n\t            [-3, 12],\n\t            [-20, 2],\n\t            [-10, -10],\n\t            [-8, 5],\n\t            [-14, 34],\n\t            [-5, 17],\n\t            [-20, -9],\n\t            [-8, -27],\n\t            [-7, -53],\n\t            [-10, -11],\n\t            [-8, -6]\n\t        ],\n\t        [\n\t            [5663, 5567],\n\t            [-2, 2]\n\t        ],\n\t        [\n\t            [5635, 5716],\n\t            [0, 14],\n\t            [-10, 17],\n\t            [-1, 35],\n\t            [-5, 23],\n\t            [-10, -4],\n\t            [3, 22],\n\t            [7, 25],\n\t            [-3, 24],\n\t            [9, 18],\n\t            [-6, 14],\n\t            [7, 36],\n\t            [13, 44],\n\t            [24, -4],\n\t            [-1, 234]\n\t        ],\n\t        [\n\t            [6023, 6357],\n\t            [9, -58],\n\t            [-6, -10],\n\t            [4, -61],\n\t            [11, -71],\n\t            [10, -14],\n\t            [15, -22]\n\t        ],\n\t        [\n\t            [5943, 5624],\n\t            [0, -7]\n\t        ],\n\t        [\n\t            [5943, 5617],\n\t            [0, -46]\n\t        ],\n\t        [\n\t            [5944, 5309],\n\t            [-17, -28],\n\t            [-20, 1],\n\t            [-22, -14],\n\t            [-18, 13],\n\t            [-11, -16]\n\t        ],\n\t        [\n\t            [5682, 5544],\n\t            [-19, 23]\n\t        ],\n\t        [\n\t            [4535, 5861],\n\t            [-11, 46],\n\t            [-14, 21],\n\t            [12, 11],\n\t            [14, 41],\n\t            [6, 31]\n\t        ],\n\t        [\n\t            [4536, 5789],\n\t            [-4, 45]\n\t        ],\n\t        [\n\t            [9502, 4438],\n\t            [8, -20],\n\t            [-19, 0],\n\t            [-11, 37],\n\t            [17, -15],\n\t            [5, -2]\n\t        ],\n\t        [\n\t            [9467, 4474],\n\t            [-11, -1],\n\t            [-17, 6],\n\t            [-5, 9],\n\t            [1, 23],\n\t            [19, -9],\n\t            [9, -12],\n\t            [4, -16]\n\t        ],\n\t        [\n\t            [9490, 4490],\n\t            [-4, -11],\n\t            [-21, 52],\n\t            [-5, 35],\n\t            [9, 0],\n\t            [10, -47],\n\t            [11, -29]\n\t        ],\n\t        [\n\t            [9440, 4565],\n\t            [1, -12],\n\t            [-22, 25],\n\t            [-15, 21],\n\t            [-10, 20],\n\t            [4, 6],\n\t            [13, -14],\n\t            [23, -27],\n\t            [6, -19]\n\t        ],\n\t        [\n\t            [9375, 4623],\n\t            [-5, -3],\n\t            [-13, 14],\n\t            [-11, 24],\n\t            [1, 10],\n\t            [17, -25],\n\t            [11, -20]\n\t        ],\n\t        [\n\t            [4682, 5458],\n\t            [-8, 5],\n\t            [-20, 24],\n\t            [-14, 31],\n\t            [-5, 22],\n\t            [-3, 43]\n\t        ],\n\t        [\n\t            [2561, 5848],\n\t            [-3, -14],\n\t            [-16, 1],\n\t            [-10, 6],\n\t            [-12, 12],\n\t            [-15, 3],\n\t            [-8, 13]\n\t        ],\n\t        [\n\t            [6198, 5735],\n\t            [9, -11],\n\t            [5, -25],\n\t            [13, -24],\n\t            [14, -1],\n\t            [26, 16],\n\t            [30, 7],\n\t            [25, 18],\n\t            [13, 4],\n\t            [10, 11],\n\t            [16, 2]\n\t        ],\n\t        [\n\t            [6359, 5732],\n\t            [0, -1],\n\t            [0, -25],\n\t            [0, -59],\n\t            [0, -31],\n\t            [-13, -36],\n\t            [-19, -50]\n\t        ],\n\t        [\n\t            [6359, 5732],\n\t            [9, 1],\n\t            [13, 9],\n\t            [14, 6],\n\t            [14, 20],\n\t            [10, 0],\n\t            [1, -16],\n\t            [-3, -35],\n\t            [0, -31],\n\t            [-6, -21],\n\t            [-7, -64],\n\t            [-14, -66],\n\t            [-17, -75],\n\t            [-24, -87],\n\t            [-23, -66],\n\t            [-33, -81],\n\t            [-28, -48],\n\t            [-42, -58],\n\t            [-25, -45],\n\t            [-31, -72],\n\t            [-6, -31],\n\t            [-6, -14]\n\t        ],\n\t        [\n\t            [3412, 5410],\n\t            [34, -11],\n\t            [2, 10],\n\t            [23, 4],\n\t            [30, -15]\n\t        ],\n\t        [\n\t            [3489, 5306],\n\t            [10, -35],\n\t            [-4, -25]\n\t        ],\n\t        [\n\t            [5626, 7957],\n\t            [-8, -15],\n\t            [-5, -24]\n\t        ],\n\t        [\n\t            [5380, 7746],\n\t            [7, 5]\n\t        ],\n\t        [\n\t            [5663, 8957],\n\t            [-47, -17],\n\t            [-27, -41],\n\t            [4, -36],\n\t            [-44, -48],\n\t            [-54, -50],\n\t            [-20, -84],\n\t            [20, -41],\n\t            [26, -33],\n\t            [-25, -67],\n\t            [-29, -14],\n\t            [-11, -99],\n\t            [-15, -55],\n\t            [-34, 6],\n\t            [-16, -47],\n\t            [-32, -3],\n\t            [-9, 56],\n\t            [-23, 67],\n\t            [-21, 84]\n\t        ],\n\t        [\n\t            [5890, 3478],\n\t            [-5, -26],\n\t            [-17, -6],\n\t            [-16, 32],\n\t            [0, 20],\n\t            [7, 22],\n\t            [3, 17],\n\t            [8, 5],\n\t            [14, -11]\n\t        ],\n\t        [\n\t            [5999, 7104],\n\t            [-2, 45],\n\t            [7, 25]\n\t        ],\n\t        [\n\t            [6004, 7174],\n\t            [7, 13],\n\t            [7, 13],\n\t            [2, 33],\n\t            [9, -12],\n\t            [31, 17],\n\t            [14, -12],\n\t            [23, 1],\n\t            [32, 22],\n\t            [15, -1],\n\t            [32, 9]\n\t        ],\n\t        [\n\t            [5051, 5420],\n\t            [-22, -12]\n\t        ],\n\t        [\n\t            [7849, 5777],\n\t            [-25, 28],\n\t            [-24, -2],\n\t            [4, 47],\n\t            [-24, 0],\n\t            [-2, -65],\n\t            [-15, -87],\n\t            [-10, -52],\n\t            [2, -43],\n\t            [18, -2],\n\t            [12, -53],\n\t            [5, -52],\n\t            [15, -33],\n\t            [17, -7],\n\t            [14, -31]\n\t        ],\n\t        [\n\t            [7779, 5439],\n\t            [-11, 23],\n\t            [-4, 29],\n\t            [-15, 34],\n\t            [-14, 28],\n\t            [-4, -35],\n\t            [-5, 33],\n\t            [3, 37],\n\t            [8, 56]\n\t        ],\n\t        [\n\t            [6883, 7252],\n\t            [16, 60],\n\t            [-6, 44],\n\t            [-20, 14],\n\t            [7, 26],\n\t            [23, -3],\n\t            [13, 33],\n\t            [9, 38],\n\t            [37, 13],\n\t            [-6, -27],\n\t            [4, -17],\n\t            [12, 2]\n\t        ],\n\t        [\n\t            [6497, 7255],\n\t            [-5, 42],\n\t            [4, 62],\n\t            [-22, 20],\n\t            [8, 40],\n\t            [-19, 4],\n\t            [6, 49],\n\t            [26, -14],\n\t            [25, 19],\n\t            [-20, 35],\n\t            [-8, 34],\n\t            [-23, -15],\n\t            [-3, -43],\n\t            [-8, 38]\n\t        ],\n\t        [\n\t            [6554, 7498],\n\t            [31, 1],\n\t            [-4, 29],\n\t            [24, 21],\n\t            [23, 34],\n\t            [37, -31],\n\t            [3, -47],\n\t            [11, -12],\n\t            [30, 2],\n\t            [9, -10],\n\t            [14, -61],\n\t            [32, -41],\n\t            [18, -28],\n\t            [29, -29],\n\t            [37, -25],\n\t            [-1, -36]\n\t        ],\n\t        [\n\t            [8471, 4532],\n\t            [3, 14],\n\t            [24, 13],\n\t            [19, 2],\n\t            [9, 8],\n\t            [10, -8],\n\t            [-10, -16],\n\t            [-29, -25],\n\t            [-23, -17]\n\t        ],\n\t        [\n\t            [3286, 5693],\n\t            [16, 8],\n\t            [6, -2],\n\t            [-1, -44],\n\t            [-23, -7],\n\t            [-5, 6],\n\t            [8, 16],\n\t            [-1, 23]\n\t        ],\n\t        [\n\t            [5233, 7240],\n\t            [31, 24],\n\t            [19, -7],\n\t            [-1, -30],\n\t            [24, 22],\n\t            [2, -12],\n\t            [-14, -29],\n\t            [0, -27],\n\t            [9, -15],\n\t            [-3, -51],\n\t            [-19, -29],\n\t            [6, -33],\n\t            [14, -1],\n\t            [7, -28],\n\t            [11, -9]\n\t        ],\n\t        [\n\t            [6004, 7174],\n\t            [-11, 27],\n\t            [11, 22],\n\t            [-17, -5],\n\t            [-23, 13],\n\t            [-19, -34],\n\t            [-43, -6],\n\t            [-22, 31],\n\t            [-30, 2],\n\t            [-6, -24],\n\t            [-20, -7],\n\t            [-26, 31],\n\t            [-31, -1],\n\t            [-16, 59],\n\t            [-21, 33],\n\t            [14, 46],\n\t            [-18, 28],\n\t            [31, 56],\n\t            [43, 3],\n\t            [12, 45],\n\t            [53, -8],\n\t            [33, 38],\n\t            [32, 17],\n\t            [46, 1],\n\t            [49, -42],\n\t            [40, -22],\n\t            [32, 9],\n\t            [24, -6],\n\t            [33, 31]\n\t        ],\n\t        [\n\t            [5777, 7539],\n\t            [3, -23],\n\t            [25, -19],\n\t            [-5, -14],\n\t            [-33, -3],\n\t            [-12, -19],\n\t            [-23, -31],\n\t            [-9, 27],\n\t            [0, 12]\n\t        ],\n\t        [\n\t            [8382, 6499],\n\t            [-17, -95],\n\t            [-12, -49],\n\t            [-14, 50],\n\t            [-4, 44],\n\t            [17, 58],\n\t            [22, 45],\n\t            [13, -18],\n\t            [-5, -35]\n\t        ],\n\t        [\n\t            [6088, 4781],\n\t            [-12, -73],\n\t            [1, -33],\n\t            [18, -22],\n\t            [1, -15],\n\t            [-8, -36],\n\t            [2, -18],\n\t            [-2, -28],\n\t            [10, -37],\n\t            [11, -58],\n\t            [10, -13]\n\t        ],\n\t        [\n\t            [5909, 4512],\n\t            [-15, 18],\n\t            [-18, 10],\n\t            [-11, 10],\n\t            [-12, 15]\n\t        ],\n\t        [\n\t            [5844, 4990],\n\t            [10, 8],\n\t            [31, -1],\n\t            [56, 4]\n\t        ],\n\t        [\n\t            [6061, 7840],\n\t            [-22, -5],\n\t            [-18, -19],\n\t            [-26, -3],\n\t            [-24, -22],\n\t            [1, -37],\n\t            [14, -14],\n\t            [28, 4],\n\t            [-5, -21],\n\t            [-31, -11],\n\t            [-37, -34],\n\t            [-16, 12],\n\t            [6, 28],\n\t            [-30, 17],\n\t            [5, 12],\n\t            [26, 19],\n\t            [-8, 14],\n\t            [-43, 15],\n\t            [-2, 22],\n\t            [-25, -8],\n\t            [-11, -32],\n\t            [-21, -44]\n\t        ],\n\t        [\n\t            [3517, 3063],\n\t            [-12, -38],\n\t            [-31, -32],\n\t            [-21, 11],\n\t            [-15, -6],\n\t            [-26, 25],\n\t            [-18, -1],\n\t            [-17, 32]\n\t        ],\n\t        [\n\t            [679, 6185],\n\t            [-4, -10],\n\t            [-7, 8],\n\t            [1, 17],\n\t            [-4, 21],\n\t            [1, 7],\n\t            [5, 10],\n\t            [-2, 11],\n\t            [1, 6],\n\t            [3, -1],\n\t            [10, -10],\n\t            [5, -5],\n\t            [5, -8],\n\t            [7, -21],\n\t            [-1, -3],\n\t            [-11, -13],\n\t            [-9, -9]\n\t        ],\n\t        [\n\t            [664, 6277],\n\t            [-9, -4],\n\t            [-5, 12],\n\t            [-3, 5],\n\t            [0, 4],\n\t            [3, 5],\n\t            [9, -6],\n\t            [8, -9],\n\t            [-3, -7]\n\t        ],\n\t        [\n\t            [646, 6309],\n\t            [-1, -7],\n\t            [-15, 2],\n\t            [2, 7],\n\t            [14, -2]\n\t        ],\n\t        [\n\t            [621, 6317],\n\t            [-2, -3],\n\t            [-2, 1],\n\t            [-9, 2],\n\t            [-4, 13],\n\t            [-1, 2],\n\t            [7, 8],\n\t            [3, -3],\n\t            [8, -20]\n\t        ],\n\t        [\n\t            [574, 6356],\n\t            [-4, -6],\n\t            [-9, 11],\n\t            [1, 4],\n\t            [5, 6],\n\t            [6, -1],\n\t            [1, -14]\n\t        ],\n\t        [\n\t            [3135, 7724],\n\t            [5, -19],\n\t            [-30, -29],\n\t            [-29, -20],\n\t            [-29, -18],\n\t            [-15, -35],\n\t            [-4, -13],\n\t            [-1, -31],\n\t            [10, -32],\n\t            [11, -1],\n\t            [-3, 21],\n\t            [8, -13],\n\t            [-2, -17],\n\t            [-19, -9],\n\t            [-13, 1],\n\t            [-20, -10],\n\t            [-12, -3],\n\t            [-17, -3],\n\t            [-23, -17],\n\t            [41, 11],\n\t            [8, -11],\n\t            [-39, -18],\n\t            [-17, 0],\n\t            [0, 7],\n\t            [-8, -16],\n\t            [8, -3],\n\t            [-6, -43],\n\t            [-20, -45],\n\t            [-2, 15],\n\t            [-6, 3],\n\t            [-9, 15],\n\t            [5, -32],\n\t            [7, -10],\n\t            [1, -23],\n\t            [-9, -23],\n\t            [-16, -47],\n\t            [-2, 3],\n\t            [8, 40],\n\t            [-14, 22],\n\t            [-3, 49],\n\t            [-5, -25],\n\t            [5, -38],\n\t            [-18, 10],\n\t            [19, -19],\n\t            [1, -57],\n\t            [8, -4],\n\t            [3, -20],\n\t            [4, -59],\n\t            [-17, -44],\n\t            [-29, -18],\n\t            [-18, -34],\n\t            [-14, -4],\n\t            [-14, -22],\n\t            [-4, -20],\n\t            [-31, -38],\n\t            [-16, -28],\n\t            [-13, -35],\n\t            [-4, -42],\n\t            [5, -41],\n\t            [9, -51],\n\t            [13, -41],\n\t            [0, -26],\n\t            [13, -69],\n\t            [-1, -39],\n\t            [-1, -23],\n\t            [-7, -36],\n\t            [-8, -8],\n\t            [-14, 7],\n\t            [-4, 26],\n\t            [-11, 14],\n\t            [-15, 51],\n\t            [-13, 45],\n\t            [-4, 23],\n\t            [6, 39],\n\t            [-8, 33],\n\t            [-22, 49],\n\t            [-10, 9],\n\t            [-28, -27],\n\t            [-5, 3],\n\t            [-14, 28],\n\t            [-17, 14],\n\t            [-32, -7],\n\t            [-24, 7],\n\t            [-21, -5],\n\t            [-12, -9],\n\t            [5, -15],\n\t            [0, -24],\n\t            [5, -12],\n\t            [-5, -8],\n\t            [-10, 9],\n\t            [-11, -11],\n\t            [-20, 2],\n\t            [-20, 31],\n\t            [-25, -8],\n\t            [-20, 14],\n\t            [-17, -4],\n\t            [-24, -14],\n\t            [-25, -44],\n\t            [-27, -25],\n\t            [-16, -28],\n\t            [-6, -27],\n\t            [0, -41],\n\t            [1, -28],\n\t            [5, -20]\n\t        ],\n\t        [\n\t            [1746, 6980],\n\t            [-4, 30],\n\t            [-18, 34],\n\t            [-13, 7],\n\t            [-3, 17],\n\t            [-16, 3],\n\t            [-10, 16],\n\t            [-26, 6],\n\t            [-7, 9],\n\t            [-3, 32],\n\t            [-27, 60],\n\t            [-23, 82],\n\t            [1, 14],\n\t            [-13, 19],\n\t            [-21, 50],\n\t            [-4, 48],\n\t            [-15, 32],\n\t            [6, 49],\n\t            [-1, 51],\n\t            [-8, 45],\n\t            [10, 56],\n\t            [4, 53],\n\t            [3, 54],\n\t            [-5, 79],\n\t            [-9, 51],\n\t            [-8, 27],\n\t            [4, 12],\n\t            [40, -20],\n\t            [15, -56],\n\t            [7, 15],\n\t            [-5, 49],\n\t            [-9, 48]\n\t        ],\n\t        [\n\t            [750, 8432],\n\t            [-28, -23],\n\t            [-14, 15],\n\t            [-4, 28],\n\t            [25, 21],\n\t            [15, 9],\n\t            [18, -4],\n\t            [12, -18],\n\t            [-24, -28]\n\t        ],\n\t        [\n\t            [401, 8597],\n\t            [-18, -9],\n\t            [-18, 11],\n\t            [-17, 16],\n\t            [28, 10],\n\t            [22, -6],\n\t            [3, -22]\n\t        ],\n\t        [\n\t            [230, 8826],\n\t            [17, -12],\n\t            [17, 6],\n\t            [23, -15],\n\t            [27, -8],\n\t            [-2, -7],\n\t            [-21, -12],\n\t            [-21, 13],\n\t            [-11, 11],\n\t            [-24, -4],\n\t            [-7, 5],\n\t            [2, 23]\n\t        ],\n\t        [\n\t            [1374, 8295],\n\t            [-15, 22],\n\t            [-25, 19],\n\t            [-8, 52],\n\t            [-36, 47],\n\t            [-15, 56],\n\t            [-26, 4],\n\t            [-44, 2],\n\t            [-33, 17],\n\t            [-57, 61],\n\t            [-27, 11],\n\t            [-49, 21],\n\t            [-38, -5],\n\t            [-55, 27],\n\t            [-33, 25],\n\t            [-30, -12],\n\t            [5, -41],\n\t            [-15, -4],\n\t            [-32, -12],\n\t            [-25, -20],\n\t            [-30, -13],\n\t            [-4, 35],\n\t            [12, 58],\n\t            [30, 18],\n\t            [-8, 15],\n\t            [-35, -33],\n\t            [-19, -39],\n\t            [-40, -42],\n\t            [20, -29],\n\t            [-26, -42],\n\t            [-30, -25],\n\t            [-28, -18],\n\t            [-7, -26],\n\t            [-43, -31],\n\t            [-9, -28],\n\t            [-32, -25],\n\t            [-20, 5],\n\t            [-25, -17],\n\t            [-29, -20],\n\t            [-23, -20],\n\t            [-47, -16],\n\t            [-5, 9],\n\t            [31, 28],\n\t            [27, 18],\n\t            [29, 33],\n\t            [35, 6],\n\t            [14, 25],\n\t            [38, 35],\n\t            [6, 12],\n\t            [21, 21],\n\t            [5, 44],\n\t            [14, 35],\n\t            [-32, -18],\n\t            [-9, 11],\n\t            [-15, -22],\n\t            [-18, 30],\n\t            [-8, -21],\n\t            [-10, 29],\n\t            [-28, -23],\n\t            [-17, 0],\n\t            [-3, 35],\n\t            [5, 21],\n\t            [-17, 22],\n\t            [-37, -12],\n\t            [-23, 28],\n\t            [-19, 14],\n\t            [0, 34],\n\t            [-22, 25],\n\t            [11, 34],\n\t            [23, 33],\n\t            [10, 30],\n\t            [22, 4],\n\t            [19, -9],\n\t            [23, 28],\n\t            [20, -5],\n\t            [21, 19],\n\t            [-5, 27],\n\t            [-16, 10],\n\t            [21, 23],\n\t            [-17, -1],\n\t            [-30, -13],\n\t            [-8, -13],\n\t            [-22, 13],\n\t            [-39, -6],\n\t            [-41, 14],\n\t            [-12, 24],\n\t            [-35, 34],\n\t            [39, 25],\n\t            [62, 29],\n\t            [23, 0],\n\t            [-4, -30],\n\t            [59, 2],\n\t            [-23, 37],\n\t            [-34, 23],\n\t            [-20, 29],\n\t            [-26, 25],\n\t            [-38, 19],\n\t            [15, 31],\n\t            [49, 2],\n\t            [35, 27],\n\t            [7, 29],\n\t            [28, 28],\n\t            [28, 6],\n\t            [52, 27],\n\t            [26, -4],\n\t            [42, 31],\n\t            [42, -12],\n\t            [21, -27],\n\t            [12, 11],\n\t            [47, -3],\n\t            [-2, -14],\n\t            [43, -10],\n\t            [28, 6],\n\t            [59, -18],\n\t            [53, -6],\n\t            [21, -8],\n\t            [37, 10],\n\t            [42, -18],\n\t            [31, -8]\n\t        ],\n\t        [\n\t            [3018, 5753],\n\t            [-1, -14],\n\t            [-16, -7],\n\t            [9, -26],\n\t            [0, -31],\n\t            [-12, -35],\n\t            [10, -47],\n\t            [12, 4],\n\t            [6, 43],\n\t            [-8, 21],\n\t            [-2, 45],\n\t            [35, 24],\n\t            [-4, 27],\n\t            [10, 19],\n\t            [10, -41],\n\t            [19, -1],\n\t            [18, -33],\n\t            [1, -20],\n\t            [25, 0],\n\t            [30, 6],\n\t            [16, -27],\n\t            [21, -7],\n\t            [16, 18],\n\t            [0, 15],\n\t            [34, 4],\n\t            [34, 1],\n\t            [-24, -18],\n\t            [10, -28],\n\t            [22, -4],\n\t            [21, -29],\n\t            [4, -48],\n\t            [15, 2],\n\t            [11, -14]\n\t        ],\n\t        [\n\t            [8001, 6331],\n\t            [-37, -51],\n\t            [-24, -56],\n\t            [-6, -41],\n\t            [22, -62],\n\t            [25, -77],\n\t            [26, -37],\n\t            [17, -47],\n\t            [12, -109],\n\t            [-3, -104],\n\t            [-24, -39],\n\t            [-31, -38],\n\t            [-23, -49],\n\t            [-35, -55],\n\t            [-10, 37],\n\t            [8, 40],\n\t            [-21, 34]\n\t        ],\n\t        [\n\t            [9661, 4085],\n\t            [-9, -8],\n\t            [-9, 26],\n\t            [1, 16],\n\t            [17, -34]\n\t        ],\n\t        [\n\t            [9641, 4175],\n\t            [4, -47],\n\t            [-7, 7],\n\t            [-6, -3],\n\t            [-4, 16],\n\t            [0, 45],\n\t            [13, -18]\n\t        ],\n\t        [\n\t            [6475, 6041],\n\t            [-21, -16],\n\t            [-5, -26],\n\t            [-1, -20],\n\t            [-27, -25],\n\t            [-45, -28],\n\t            [-24, -41],\n\t            [-13, -3],\n\t            [-8, 3],\n\t            [-16, -25],\n\t            [-18, -11],\n\t            [-23, -3],\n\t            [-7, -3],\n\t            [-6, -16],\n\t            [-8, -4],\n\t            [-4, -15],\n\t            [-14, 1],\n\t            [-9, -8],\n\t            [-19, 3],\n\t            [-7, 35],\n\t            [1, 32],\n\t            [-5, 17],\n\t            [-5, 44],\n\t            [-8, 24],\n\t            [5, 3],\n\t            [-2, 27],\n\t            [3, 12],\n\t            [-1, 25]\n\t        ],\n\t        [\n\t            [5817, 3752],\n\t            [11, 0],\n\t            [14, -10],\n\t            [9, 7],\n\t            [15, -6]\n\t        ],\n\t        [\n\t            [5911, 3478],\n\t            [-7, -43],\n\t            [-3, -49],\n\t            [-7, -27],\n\t            [-19, -30],\n\t            [-5, -8],\n\t            [-12, -30],\n\t            [-8, -31],\n\t            [-16, -42],\n\t            [-31, -61],\n\t            [-20, -36],\n\t            [-21, -26],\n\t            [-29, -23],\n\t            [-14, -3],\n\t            [-3, -17],\n\t            [-17, 9],\n\t            [-14, -11],\n\t            [-30, 11],\n\t            [-17, -7],\n\t            [-12, 3],\n\t            [-28, -23],\n\t            [-24, -10],\n\t            [-17, -22],\n\t            [-13, -1],\n\t            [-11, 21],\n\t            [-10, 1],\n\t            [-12, 26],\n\t            [-1, -8],\n\t            [-4, 16],\n\t            [0, 34],\n\t            [-9, 40],\n\t            [9, 11],\n\t            [0, 45],\n\t            [-19, 55],\n\t            [-14, 50],\n\t            [0, 1],\n\t            [-20, 76]\n\t        ],\n\t        [\n\t            [5840, 4141],\n\t            [-21, -8],\n\t            [-15, -23],\n\t            [-4, -21],\n\t            [-10, -4],\n\t            [-24, -49],\n\t            [-15, -38],\n\t            [-10, -2],\n\t            [-9, 7],\n\t            [-31, 7]\n\t        ]\n\t    ],\n\t    \"transform\": {\n\t        \"scale\": [0.036003600360036005, 0.016927109510951093],\n\t        \"translate\": [-180, -85.609038]\n\t    }\n\t}\n\t;\n\t  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\t\n\t  /**************************************\n\t                Utilities\n\t  ***************************************/\n\t\n\t  //convert lat/lng coords to X / Y coords\n\t  Datamap.prototype.latLngToXY = function(lat, lng) {\n\t     return this.projection([lng, lat]);\n\t  };\n\t\n\t  //add <g> layer to root SVG\n\t  Datamap.prototype.addLayer = function( className, id, first ) {\n\t    var layer;\n\t    if ( first ) {\n\t      layer = this.svg.insert('g', ':first-child')\n\t    }\n\t    else {\n\t      layer = this.svg.append('g')\n\t    }\n\t    return layer.attr('id', id || '')\n\t      .attr('class', className || '');\n\t  };\n\t\n\t  Datamap.prototype.updateChoropleth = function(data) {\n\t    var svg = this.svg;\n\t    for ( var subunit in data ) {\n\t      if ( data.hasOwnProperty(subunit) ) {\n\t        var color;\n\t        var subunitData = data[subunit]\n\t        if ( ! subunit ) {\n\t          continue;\n\t        }\n\t        else if ( typeof subunitData === \"string\" ) {\n\t          color = subunitData;\n\t        }\n\t        else if ( typeof subunitData.color === \"string\" ) {\n\t          color = subunitData.color;\n\t        }\n\t        else {\n\t          color = this.options.fills[ subunitData.fillKey ];\n\t        }\n\t        //if it's an object, overriding the previous data\n\t        if ( subunitData === Object(subunitData) ) {\n\t          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n\t          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n\t        }\n\t        svg\n\t          .selectAll('.' + subunit)\n\t          .transition()\n\t            .style('fill', color);\n\t      }\n\t    }\n\t  };\n\t\n\t  Datamap.prototype.updatePopup = function (element, d, options) {\n\t    var self = this;\n\t    element.on('mousemove', null);\n\t    element.on('mousemove', function() {\n\t      var position = d3.mouse(self.options.element);\n\t      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n\t        .style('top', ( (position[1] + 30)) + \"px\")\n\t        .html(function() {\n\t          var data = JSON.parse(element.attr('data-info'));\n\t          //if ( !data ) return '';\n\t          return options.popupTemplate(d, data);\n\t        })\n\t        .style('left', ( position[0]) + \"px\");\n\t    });\n\t\n\t    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n\t  };\n\t\n\t  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n\t    var self = this;\n\t    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n\t      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n\t        var layer;\n\t        if ( typeof createNewLayer === \"undefined\" ) {\n\t          createNewLayer = false;\n\t        }\n\t\n\t        if ( typeof options === 'function' ) {\n\t          callback = options;\n\t          options = undefined;\n\t        }\n\t\n\t        options = defaults(options || {}, self.options[name + 'Config']);\n\t\n\t        //add a single layer, reuse the old layer\n\t        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n\t          layer = this.options[name + 'Layer'];\n\t          options = options || this.options[name + 'Options'];\n\t        }\n\t        else {\n\t          layer = this.addLayer(name);\n\t          this.options[name + 'Layer'] = layer;\n\t          this.options[name + 'Options'] = options;\n\t        }\n\t        pluginFn.apply(this, [layer, data, options]);\n\t        if ( callback ) {\n\t          callback(layer);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  // expose library\n\t  if ( true ) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) { d3 = __webpack_require__(242); topojson = __webpack_require__(243); return Datamap; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  else {\n\t    window.Datamap = window.Datamaps = Datamap;\n\t  }\n\t\n\t  if ( window.jQuery ) {\n\t    window.jQuery.fn.datamaps = function(options, callback) {\n\t      options = options || {};\n\t      options.element = this[0];\n\t      var datamap = new Datamap(options);\n\t      if ( typeof callback === \"function\" ) {\n\t        callback(datamap, options);\n\t      }\n\t      return this;\n\t    };\n\t  }\n\t})();\n\n\n/***/ }),\n\n/***/ 305:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// bulbs-pollzone-map.js","import {\n  BulbsHTMLElement,\n  registerElement,\n} from 'bulbs-elements/register';\n\nimport * as d3 from 'd3';\nimport Datamap from 'datamaps';\n\nimport './bulbs-pollzone-map.scss';\n\nclass BulbsPollzoneMap extends BulbsHTMLElement {\n  attachedCallback () {\n    let map = this.querySelector('.map');\n    let mapData = JSON.parse(map.getAttribute('data-map-data'));\n\n    this.mapElement = map;\n    this.legendContainer = this.querySelector('.legend');\n    this.statesData = mapData.votes;\n    this.questionsData = mapData.questions;\n\n    this.setFills();\n    this.initMap();\n  }\n\n  setFills () {\n    this.fills = {\n      defaultFill: '#006B3A',\n    };\n\n    // add colors to keyed fills list\n    [\n      '#37273a',\n      '#942026',\n      '#46778a',\n      '#cfa05b',\n      '#375845',\n      '#314577',\n      '#a05a1e',\n      '#654c75',\n      '#738e54',\n      '#686868',\n    ].forEach(function (color, i) {\n      this.fillKey(i + 1, color);\n    }, this);\n  }\n\n  fillKey (i, value) {\n    let key = 'result' + i;\n    if (value) {\n      this.fills[key] = value;\n    }\n    return this.fills[key];\n  }\n\n  initMap () {\n    this.showTooltip = this.showTooltip.bind(this);\n\n    const map = this.map = new Datamap({\n      element: this.mapElement,\n      scope: 'usa',\n      fills: this.fills,\n      data: this.statesData,\n      geographyConfig: {\n        popupTemplate: this.showTooltip,\n      },\n      responsive: true,\n    });\n\n    this.colorLegend();\n\n    // d3 requires namespaced events\n    d3.select(window).on('resize.' + map.options.element.id, function () {\n      map.resize();\n    });\n  }\n\n  colorLegend () {\n    // color legend, assumes legend has been ordered by sequence\n    let legendItems = this.querySelectorAll('.legend-color');\n    for (let i = 0; i < legendItems.length; i++) {\n      legendItems[i].style.backgroundColor = this.fillKey(i + 1);\n    }\n  }\n\n  showTooltip (geo, stateResults) {\n    let { totalVotes, votes } = stateResults;\n    let html = `<div class='hoverinfo'><div class='state-name'>\n        ${geo.properties.name}\n      </div>`;\n\n    if (typeof this.questionsData === 'undefined' || Object.keys(votes).length < 1) {\n      html += 'No votes';\n    }\n    else {\n      html += `<ul class='results'>`;\n\n      // order by winner then print out html\n      html += Object.keys(votes).map(function (key) {\n        return { 'id': key, 'numVotes': votes[key] };\n      })\n      .sort(function (q1, q2) {\n        return q1.numVotes < q2.numVotes;\n      })\n      .map(function (question) {\n        let { numVotes } = question;\n        let percent = Math.round(numVotes / totalVotes * 100);\n\n        return `<li class='result'>\n          <div class='bar' style='background-color: ${this.fillKey(question.id)}; width: ${percent}%;'></div>\n          <div class='percent'>${percent}</div>\n        </li>`;\n      }, this).join('');\n\n      html += `</ul>`;\n    }\n\n    return html + `</div>`;\n  }\n}\n\nregisterElement('bulbs-pollzone-map', BulbsPollzoneMap);\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-pollzone-map/bulbs-pollzone-map.js","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/d3/d3.js\n// module id = 242\n// module chunks = 6 22","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/topojson/build/topojson.js\n// module id = 243\n// module chunks = 6 22","require(\"./d3\");\nmodule.exports = d3;\n(function () { delete this.d3; })(); // unset global\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/index-browserify.js\n// module id = 302\n// module chunks = 21 22","d3 = function() {\n  var d3 = {\n    version: \"3.3.13\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {}\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {}\n  d3_class(d3_Set, {\n    has: function(value) {\n      return d3_map_prefix + value in this;\n    },\n    add: function(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(value) {\n        values.push(value);\n      });\n      return values;\n    },\n    forEach: function(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, value.substring(1));\n        }\n      }\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return name.trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    this.each(function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_selectionPrototype.interrupt = function() {\n    return this.each(d3_selection_interrupt);\n  };\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function touchid() {\n      return d3.event.changedTouches[0].identifier;\n    }\n    function touchposition(parent, id) {\n      return d3.touches(parent).filter(function(p) {\n        return p.identifier === id;\n      })[0];\n    }\n    function dragstart(id, position, move, end) {\n      return function() {\n        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n        if (origin) {\n          offset = origin.apply(target, arguments);\n          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n        } else {\n          offset = [ 0, 0 ];\n        }\n        event_({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n          dragged |= dx | dy;\n          origin_ = p;\n          event_({\n            type: \"drag\",\n            x: p[0] + offset[0],\n            y: p[1] + offset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n          dragRestore(dragged && d3.event.target === eventTarget);\n          event_({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(event_);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(event_);\n            };\n          }).each(\"end.zoom\", function() {\n            zoomended(event_);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(event_);\n          zoomed(event_);\n          zoomended(event_);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(event) {\n      event({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(event) {\n      rescale();\n      event({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(event) {\n      event({\n        type: \"zoomend\"\n      });\n    }\n    function mousedowned() {\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      zoomstarted(event_);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(target), l);\n        zoomed(event_);\n      }\n      function ended() {\n        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === eventTarget);\n        zoomended(event_);\n      }\n    }\n    function touchstarted() {\n      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      started();\n      zoomstarted(event_);\n      function relocate() {\n        var touches = d3.touches(target);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(event_);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(target), p0, l0, p1, l1;\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(event_);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        w.on(touchmove, null).on(touchend, null);\n        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(event_);\n      }\n    }\n    function mousewheeled() {\n      var event_ = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      zoomstarted(event_);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(event_);\n      }, 50);\n      d3_eventPreventDefault();\n      var point = center || d3.mouse(this);\n      if (!translate0) translate0 = location(point);\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(point, translate0);\n      zoomed(event_);\n    }\n    function mousewheelreset() {\n      translate0 = null;\n    }\n    function dblclicked() {\n      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n      zoomstarted(event_);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(event_);\n      zoomended(event_);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  function d3_Color() {}\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n        return text.substring(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill || fill === \"0\" && align === \"=\") {\n      zfill = fill = \"0\";\n      align = \"=\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n\n     case \"b\":\n     case \"o\":\n     case \"x\":\n     case \"X\":\n      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\n     case \"c\":\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n    if (type == \"r\" && !precision) type = \"g\";\n    if (precision != null) {\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n    }\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    var zcomma = zfill && comma;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n      if (!zfill && comma) before = d3_format_group(before);\n      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n      if (zcomma) before = d3_format_group(padding + before);\n      negative += symbol;\n      value = before + after;\n      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_format_group = d3_identity;\n  if (d3_format_grouping) {\n    var d3_format_groupingLength = d3_format_grouping.length;\n    d3_format_group = function(value) {\n      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n      }\n      return t.reverse().join(d3_format_thousandsSeparator);\n    };\n  }\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n          listener.polygonStart();\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          listener.polygonEnd();\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          listener.lineStart();\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n          listener.lineEnd();\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function isLeft(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return projection.rotate([ 0, 0 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n      vertices = []; i < n; ++i) {\n        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n      }\n      for (i = 1; i < n; ++i) {\n        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n      }\n      for (i = 0; i < n; ++i) {\n        if (i === h) continue;\n        y1 = vertices[i][1] - vertices[h][1];\n        x1 = vertices[i][0] - vertices[h][0];\n        points.push({\n          angle: Math.atan2(y1, x1),\n          index: i\n        });\n      }\n      points.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      a = points[0].angle;\n      v = points[0].index;\n      u = 0;\n      for (i = 1; i < plen; ++i) {\n        j = points[i].index;\n        if (a == points[i].angle) {\n          x1 = vertices[v][0] - vertices[h][0];\n          y1 = vertices[v][1] - vertices[h][1];\n          x2 = vertices[j][0] - vertices[h][0];\n          y2 = vertices[j][1] - vertices[h][1];\n          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n            points[i].index = -1;\n            continue;\n          } else {\n            points[u].index = -1;\n          }\n        }\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n      stack.push(h);\n      for (i = 0, j = 0; i < 2; ++j) {\n        if (points[j].index > -1) {\n          stack.push(points[j].index);\n          i++;\n        }\n      }\n      sp = stack.length;\n      for (;j < plen; ++j) {\n        if (points[j].index < 0) continue;\n        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n          --sp;\n        }\n        stack[sp++] = points[j].index;\n      }\n      var poly = [];\n      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n      return poly;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function(t) {\n      return a + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    a = a + \"\", b = b + \"\";\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? (o = q[0].x, function(t) {\n        return o(t) + \"\";\n      }) : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = +x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function recurse(node, depth, nodes) {\n      var childs = children.call(hierarchy, node, depth);\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = c[i] = recurse(childs[i], j, nodes);\n          d.parent = node;\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else {\n        delete node.children;\n        if (value) {\n          node.value = +value.call(hierarchy, node, depth) || 0;\n        }\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, node, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x *= size[0];\n        node.y = node.depth * size[1];\n        delete node._tree;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", innerTickSize);\n            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n            break;\n          }\n\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", -innerTickSize);\n            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n            break;\n          }\n\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", -innerTickSize);\n            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n            break;\n          }\n\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", innerTickSize);\n            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n            break;\n          }\n        }\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1);\n        }\n        tickEnter.call(tickTransform, scale0);\n        tickUpdate.call(tickTransform, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  d3_time.format = d3_time_format;\n  function d3_time_format(template) {\n    var n = template.length;\n    function format(date) {\n      var string = [], i = -1, j = 0, c, p, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) === 37) {\n          string.push(template.substring(j, i));\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0,\n        Z: null\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n        date.setFullYear(d.y, 0, 1);\n        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n      } else date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n      return localZ ? date._ : date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  }\n  function d3_time_parse(date, template, string, j) {\n    var c, p, t, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c === 37) {\n        t = template.charAt(i++);\n        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  };\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3_time_format(d3_time_formatDateTime),\n    d: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    e: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    H: function(d, p) {\n      return d3_time_formatPad(d.getHours(), p, 2);\n    },\n    I: function(d, p) {\n      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n    },\n    j: function(d, p) {\n      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n    },\n    L: function(d, p) {\n      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n    },\n    m: function(d, p) {\n      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n    },\n    M: function(d, p) {\n      return d3_time_formatPad(d.getMinutes(), p, 2);\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d, p) {\n      return d3_time_formatPad(d.getSeconds(), p, 2);\n    },\n    U: function(d, p) {\n      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d, p) {\n      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n    },\n    x: d3_time_format(d3_time_formatDate),\n    X: d3_time_format(d3_time_formatTime),\n    y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n    },\n    Y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n    },\n    Z: d3_time_zone,\n    \"%\": function() {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    j: d3_time_parseDayOfYear,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    U: d3_time_parseWeekNumberSunday,\n    w: d3_time_parseWeekdayNumber,\n    W: d3_time_parseWeekNumberMonday,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear,\n    Z: d3_time_parseZone,\n    \"%\": d3_time_parseLiteralPercent\n  };\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  var d3_time_numberRe = /^\\s*\\d+/;\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  d3_time_format.utc = d3_time_formatUtc;\n  function d3_time_formatUtc(template) {\n    var local = d3_time_format(template);\n    function format(date) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date();\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    format.parse = function(string) {\n      try {\n        d3_date = d3_date_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  }\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3_time_format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3_time_format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3_time_format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3_time_format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3_time_format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  return d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 303\n// module chunks = 21 22","(function() {\n  var svg;\n\n  //save off default references\n  var d3 = window.d3, topojson = window.topojson;\n  \n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        borderWidth: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n    \n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n    \n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        //if fillKey - use that\n        //otherwise check 'fill'\n        //otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n        \n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n    \n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  //plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path); \n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n        layer.append(\"text\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .style(\"font-size\", (options.fontSize || 10) + 'px')\n          .style(\"font-family\", options.fontFamily || \"Verdana\")\n          .style(\"fill\", options.labelColor || \"#000\")\n          .text( d.id );\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[1];;\n        })\n        .attr('r', 0) //for animation purposes\n        .attr('data-info', function(d) {\n          return JSON.stringify(d);\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition().duration(400)\n          .attr('r', function ( datum ) {\n            return val(datum.radius, options.radius, datum);\n          });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n\n  }\n\n  //stolen from underscore.js\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    //set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    //add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    /* Add core plugins to this instance */\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    //append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n          newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    //save off in a closure\n    var self = this;\n    var options = self.options;\n\n    //set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    //if custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // if fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          //allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            //in the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              } \n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        //fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = {\n    \"type\": \"Topology\",\n    \"objects\": {\n        \"world\": {\n            \"type\": \"GeometryCollection\",\n            \"geometries\": [{\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Afghanistan\"\n                },\n                \"id\": \"AFG\",\n                \"arcs\": [\n                    [0, 1, 2, 3, 4, 5]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Angola\"\n                },\n                \"id\": \"AGO\",\n                \"arcs\": [\n                    [\n                        [6, 7, 8, 9]\n                    ],\n                    [\n                        [10, 11, 12]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Albania\"\n                },\n                \"id\": \"ALB\",\n                \"arcs\": [\n                    [13, 14, 15, 16, 17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Arab Emirates\"\n                },\n                \"id\": \"ARE\",\n                \"arcs\": [\n                    [18, 19, 20, 21, 22]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Argentina\"\n                },\n                \"id\": \"ARG\",\n                \"arcs\": [\n                    [\n                        [23, 24]\n                    ],\n                    [\n                        [25, 26, 27, 28, 29, 30]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Armenia\"\n                },\n                \"id\": \"ARM\",\n                \"arcs\": [\n                    [31, 32, 33, 34, 35]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Antarctica\"\n                },\n                \"id\": \"ATA\",\n                \"arcs\": [\n                    [\n                        [36]\n                    ],\n                    [\n                        [37]\n                    ],\n                    [\n                        [38]\n                    ],\n                    [\n                        [39]\n                    ],\n                    [\n                        [40]\n                    ],\n                    [\n                        [41]\n                    ],\n                    [\n                        [42]\n                    ],\n                    [\n                        [43]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Southern and Antarctic Lands\"\n                },\n                \"id\": \"ATF\",\n                \"arcs\": [\n                    [44]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Australia\"\n                },\n                \"id\": \"AUS\",\n                \"arcs\": [\n                    [\n                        [45]\n                    ],\n                    [\n                        [46]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Austria\"\n                },\n                \"id\": \"AUT\",\n                \"arcs\": [\n                    [47, 48, 49, 50, 51, 52, 53]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Azerbaijan\"\n                },\n                \"id\": \"AZE\",\n                \"arcs\": [\n                    [\n                        [54, -35]\n                    ],\n                    [\n                        [55, 56, -33, 57, 58]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burundi\"\n                },\n                \"id\": \"BDI\",\n                \"arcs\": [\n                    [59, 60, 61]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belgium\"\n                },\n                \"id\": \"BEL\",\n                \"arcs\": [\n                    [62, 63, 64, 65, 66]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Benin\"\n                },\n                \"id\": \"BEN\",\n                \"arcs\": [\n                    [67, 68, 69, 70, 71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burkina Faso\"\n                },\n                \"id\": \"BFA\",\n                \"arcs\": [\n                    [72, 73, 74, -70, 75, 76]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bangladesh\"\n                },\n                \"id\": \"BGD\",\n                \"arcs\": [\n                    [77, 78, 79]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bulgaria\"\n                },\n                \"id\": \"BGR\",\n                \"arcs\": [\n                    [80, 81, 82, 83, 84, 85]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"The Bahamas\"\n                },\n                \"id\": \"BHS\",\n                \"arcs\": [\n                    [\n                        [86]\n                    ],\n                    [\n                        [87]\n                    ],\n                    [\n                        [88]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bosnia and Herzegovina\"\n                },\n                \"id\": \"BIH\",\n                \"arcs\": [\n                    [89, 90, 91]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belarus\"\n                },\n                \"id\": \"BLR\",\n                \"arcs\": [\n                    [92, 93, 94, 95, 96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belize\"\n                },\n                \"id\": \"BLZ\",\n                \"arcs\": [\n                    [97, 98, 99]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bolivia\"\n                },\n                \"id\": \"BOL\",\n                \"arcs\": [\n                    [100, 101, 102, 103, -31]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brazil\"\n                },\n                \"id\": \"BRA\",\n                \"arcs\": [\n                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brunei\"\n                },\n                \"id\": \"BRN\",\n                \"arcs\": [\n                    [113, 114]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bhutan\"\n                },\n                \"id\": \"BTN\",\n                \"arcs\": [\n                    [115, 116]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Botswana\"\n                },\n                \"id\": \"BWA\",\n                \"arcs\": [\n                    [117, 118, 119, 120]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Central African Republic\"\n                },\n                \"id\": \"CAF\",\n                \"arcs\": [\n                    [121, 122, 123, 124, 125, 126, 127]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Canada\"\n                },\n                \"id\": \"CAN\",\n                \"arcs\": [\n                    [\n                        [128]\n                    ],\n                    [\n                        [129]\n                    ],\n                    [\n                        [130]\n                    ],\n                    [\n                        [131]\n                    ],\n                    [\n                        [132]\n                    ],\n                    [\n                        [133]\n                    ],\n                    [\n                        [134]\n                    ],\n                    [\n                        [135]\n                    ],\n                    [\n                        [136]\n                    ],\n                    [\n                        [137]\n                    ],\n                    [\n                        [138, 139, 140, 141]\n                    ],\n                    [\n                        [142]\n                    ],\n                    [\n                        [143]\n                    ],\n                    [\n                        [144]\n                    ],\n                    [\n                        [145]\n                    ],\n                    [\n                        [146]\n                    ],\n                    [\n                        [147]\n                    ],\n                    [\n                        [148]\n                    ],\n                    [\n                        [149]\n                    ],\n                    [\n                        [150]\n                    ],\n                    [\n                        [151]\n                    ],\n                    [\n                        [152]\n                    ],\n                    [\n                        [153]\n                    ],\n                    [\n                        [154]\n                    ],\n                    [\n                        [155]\n                    ],\n                    [\n                        [156]\n                    ],\n                    [\n                        [157]\n                    ],\n                    [\n                        [158]\n                    ],\n                    [\n                        [159]\n                    ],\n                    [\n                        [160]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Switzerland\"\n                },\n                \"id\": \"CHE\",\n                \"arcs\": [\n                    [-51, 161, 162, 163]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Chile\"\n                },\n                \"id\": \"CHL\",\n                \"arcs\": [\n                    [\n                        [-24, 164]\n                    ],\n                    [\n                        [-30, 165, 166, -101]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"China\"\n                },\n                \"id\": \"CHN\",\n                \"arcs\": [\n                    [\n                        [167]\n                    ],\n                    [\n                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ivory Coast\"\n                },\n                \"id\": \"CIV\",\n                \"arcs\": [\n                    [184, 185, 186, 187, -73, 188]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cameroon\"\n                },\n                \"id\": \"CMR\",\n                \"arcs\": [\n                    [189, 190, 191, 192, 193, 194, -128, 195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Democratic Republic of the Congo\"\n                },\n                \"id\": \"COD\",\n                \"arcs\": [\n                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of the Congo\"\n                },\n                \"id\": \"COG\",\n                \"arcs\": [\n                    [-12, 203, 204, -196, -127, -202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Colombia\"\n                },\n                \"id\": \"COL\",\n                \"arcs\": [\n                    [205, 206, 207, 208, 209, -107, 210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Costa Rica\"\n                },\n                \"id\": \"CRI\",\n                \"arcs\": [\n                    [211, 212, 213, 214]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cuba\"\n                },\n                \"id\": \"CUB\",\n                \"arcs\": [\n                    [215]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Northern Cyprus\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [216, 217]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cyprus\"\n                },\n                \"id\": \"CYP\",\n                \"arcs\": [\n                    [218, -218]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Czech Republic\"\n                },\n                \"id\": \"CZE\",\n                \"arcs\": [\n                    [-53, 219, 220, 221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Germany\"\n                },\n                \"id\": \"DEU\",\n                \"arcs\": [\n                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Djibouti\"\n                },\n                \"id\": \"DJI\",\n                \"arcs\": [\n                    [229, 230, 231, 232]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Denmark\"\n                },\n                \"id\": \"DNK\",\n                \"arcs\": [\n                    [\n                        [233]\n                    ],\n                    [\n                        [-229, 234]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Dominican Republic\"\n                },\n                \"id\": \"DOM\",\n                \"arcs\": [\n                    [235, 236]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Algeria\"\n                },\n                \"id\": \"DZA\",\n                \"arcs\": [\n                    [237, 238, 239, 240, 241, 242, 243, 244]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ecuador\"\n                },\n                \"id\": \"ECU\",\n                \"arcs\": [\n                    [245, -206, 246]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Egypt\"\n                },\n                \"id\": \"EGY\",\n                \"arcs\": [\n                    [247, 248, 249, 250, 251]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Eritrea\"\n                },\n                \"id\": \"ERI\",\n                \"arcs\": [\n                    [252, 253, 254, -233]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Spain\"\n                },\n                \"id\": \"ESP\",\n                \"arcs\": [\n                    [255, 256, 257, 258]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Estonia\"\n                },\n                \"id\": \"EST\",\n                \"arcs\": [\n                    [259, 260, 261]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ethiopia\"\n                },\n                \"id\": \"ETH\",\n                \"arcs\": [\n                    [-232, 262, 263, 264, 265, 266, 267, -253]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Finland\"\n                },\n                \"id\": \"FIN\",\n                \"arcs\": [\n                    [268, 269, 270, 271]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Fiji\"\n                },\n                \"id\": \"FJI\",\n                \"arcs\": [\n                    [\n                        [272]\n                    ],\n                    [\n                        [273, 274]\n                    ],\n                    [\n                        [275, -275]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Falkland Islands\"\n                },\n                \"id\": \"FLK\",\n                \"arcs\": [\n                    [276]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"France\"\n                },\n                \"id\": \"FRA\",\n                \"arcs\": [\n                    [\n                        [277]\n                    ],\n                    [\n                        [278, -225, -163, 279, 280, -257, 281, -66]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Guiana\"\n                },\n                \"id\": \"GUF\",\n                \"arcs\": [\n                    [282, 283, 284, 285, -111]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gabon\"\n                },\n                \"id\": \"GAB\",\n                \"arcs\": [\n                    [286, 287, -190, -205]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United Kingdom\"\n                },\n                \"id\": \"GBR\",\n                \"arcs\": [\n                    [\n                        [288, 289]\n                    ],\n                    [\n                        [290]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Georgia\"\n                },\n                \"id\": \"GEO\",\n                \"arcs\": [\n                    [291, 292, -58, -32, 293]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ghana\"\n                },\n                \"id\": \"GHA\",\n                \"arcs\": [\n                    [294, -189, -77, 295]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea\"\n                },\n                \"id\": \"GIN\",\n                \"arcs\": [\n                    [296, 297, 298, 299, 300, 301, -187]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gambia\"\n                },\n                \"id\": \"GMB\",\n                \"arcs\": [\n                    [302, 303]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea Bissau\"\n                },\n                \"id\": \"GNB\",\n                \"arcs\": [\n                    [304, 305, -300]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Equatorial Guinea\"\n                },\n                \"id\": \"GNQ\",\n                \"arcs\": [\n                    [306, -191, -288]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Greece\"\n                },\n                \"id\": \"GRC\",\n                \"arcs\": [\n                    [\n                        [307]\n                    ],\n                    [\n                        [308, -15, 309, -84, 310]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Greenland\"\n                },\n                \"id\": \"GRL\",\n                \"arcs\": [\n                    [311]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guatemala\"\n                },\n                \"id\": \"GTM\",\n                \"arcs\": [\n                    [312, 313, -100, 314, 315, 316]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guyana\"\n                },\n                \"id\": \"GUY\",\n                \"arcs\": [\n                    [317, 318, -109, 319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Honduras\"\n                },\n                \"id\": \"HND\",\n                \"arcs\": [\n                    [320, 321, -316, 322, 323]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Croatia\"\n                },\n                \"id\": \"HRV\",\n                \"arcs\": [\n                    [324, -92, 325, 326, 327, 328]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Haiti\"\n                },\n                \"id\": \"HTI\",\n                \"arcs\": [\n                    [-237, 329]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Hungary\"\n                },\n                \"id\": \"HUN\",\n                \"arcs\": [\n                    [-48, 330, 331, 332, 333, -329, 334]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Indonesia\"\n                },\n                \"id\": \"IDN\",\n                \"arcs\": [\n                    [\n                        [335]\n                    ],\n                    [\n                        [336, 337]\n                    ],\n                    [\n                        [338]\n                    ],\n                    [\n                        [339]\n                    ],\n                    [\n                        [340]\n                    ],\n                    [\n                        [341]\n                    ],\n                    [\n                        [342]\n                    ],\n                    [\n                        [343]\n                    ],\n                    [\n                        [344, 345]\n                    ],\n                    [\n                        [346]\n                    ],\n                    [\n                        [347]\n                    ],\n                    [\n                        [348, 349]\n                    ],\n                    [\n                        [350]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"India\"\n                },\n                \"id\": \"IND\",\n                \"arcs\": [\n                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ireland\"\n                },\n                \"id\": \"IRL\",\n                \"arcs\": [\n                    [355, -289]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iran\"\n                },\n                \"id\": \"IRN\",\n                \"arcs\": [\n                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iraq\"\n                },\n                \"id\": \"IRQ\",\n                \"arcs\": [\n                    [362, 363, 364, 365, 366, 367, -360]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iceland\"\n                },\n                \"id\": \"ISL\",\n                \"arcs\": [\n                    [368]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Israel\"\n                },\n                \"id\": \"ISR\",\n                \"arcs\": [\n                    [369, 370, 371, -252, 372, 373, 374]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Italy\"\n                },\n                \"id\": \"ITA\",\n                \"arcs\": [\n                    [\n                        [375]\n                    ],\n                    [\n                        [376]\n                    ],\n                    [\n                        [377, 378, -280, -162, -50]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jamaica\"\n                },\n                \"id\": \"JAM\",\n                \"arcs\": [\n                    [379]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jordan\"\n                },\n                \"id\": \"JOR\",\n                \"arcs\": [\n                    [-370, 380, -366, 381, 382, -372, 383]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Japan\"\n                },\n                \"id\": \"JPN\",\n                \"arcs\": [\n                    [\n                        [384]\n                    ],\n                    [\n                        [385]\n                    ],\n                    [\n                        [386]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kazakhstan\"\n                },\n                \"id\": \"KAZ\",\n                \"arcs\": [\n                    [387, 388, 389, 390, -181, 391]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kenya\"\n                },\n                \"id\": \"KEN\",\n                \"arcs\": [\n                    [392, 393, 394, 395, -265, 396]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kyrgyzstan\"\n                },\n                \"id\": \"KGZ\",\n                \"arcs\": [\n                    [-392, -180, 397, 398]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cambodia\"\n                },\n                \"id\": \"KHM\",\n                \"arcs\": [\n                    [399, 400, 401, 402]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Korea\"\n                },\n                \"id\": \"KOR\",\n                \"arcs\": [\n                    [403, 404]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kosovo\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-18, 405, 406, 407]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kuwait\"\n                },\n                \"id\": \"KWT\",\n                \"arcs\": [\n                    [408, 409, -364]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Laos\"\n                },\n                \"id\": \"LAO\",\n                \"arcs\": [\n                    [410, 411, -172, 412, -401]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lebanon\"\n                },\n                \"id\": \"LBN\",\n                \"arcs\": [\n                    [-374, 413, 414]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Liberia\"\n                },\n                \"id\": \"LBR\",\n                \"arcs\": [\n                    [415, 416, -297, -186]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Libya\"\n                },\n                \"id\": \"LBY\",\n                \"arcs\": [\n                    [417, -245, 418, 419, -250, 420, 421]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sri Lanka\"\n                },\n                \"id\": \"LKA\",\n                \"arcs\": [\n                    [422]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lesotho\"\n                },\n                \"id\": \"LSO\",\n                \"arcs\": [\n                    [423]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lithuania\"\n                },\n                \"id\": \"LTU\",\n                \"arcs\": [\n                    [424, 425, 426, -93, 427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Luxembourg\"\n                },\n                \"id\": \"LUX\",\n                \"arcs\": [\n                    [-226, -279, -65]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Latvia\"\n                },\n                \"id\": \"LVA\",\n                \"arcs\": [\n                    [428, -262, 429, -94, -427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Morocco\"\n                },\n                \"id\": \"MAR\",\n                \"arcs\": [\n                    [-242, 430, 431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Moldova\"\n                },\n                \"id\": \"MDA\",\n                \"arcs\": [\n                    [432, 433]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Madagascar\"\n                },\n                \"id\": \"MDG\",\n                \"arcs\": [\n                    [434]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mexico\"\n                },\n                \"id\": \"MEX\",\n                \"arcs\": [\n                    [435, -98, -314, 436, 437]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Macedonia\"\n                },\n                \"id\": \"MKD\",\n                \"arcs\": [\n                    [-408, 438, -85, -310, -14]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mali\"\n                },\n                \"id\": \"MLI\",\n                \"arcs\": [\n                    [439, -239, 440, -74, -188, -302, 441]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Myanmar\"\n                },\n                \"id\": \"MMR\",\n                \"arcs\": [\n                    [442, -78, -353, -173, -412, 443]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Montenegro\"\n                },\n                \"id\": \"MNE\",\n                \"arcs\": [\n                    [444, -326, -91, 445, -406, -17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mongolia\"\n                },\n                \"id\": \"MNG\",\n                \"arcs\": [\n                    [446, -183]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mozambique\"\n                },\n                \"id\": \"MOZ\",\n                \"arcs\": [\n                    [447, 448, 449, 450, 451, 452, 453, 454]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mauritania\"\n                },\n                \"id\": \"MRT\",\n                \"arcs\": [\n                    [455, 456, 457, -240, -440]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Malawi\"\n                },\n                \"id\": \"MWI\",\n                \"arcs\": [\n                    [-455, 458, 459]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Malaysia\"\n                },\n                \"id\": \"MYS\",\n                \"arcs\": [\n                    [\n                        [460, 461]\n                    ],\n                    [\n                        [-349, 462, -115, 463]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Namibia\"\n                },\n                \"id\": \"NAM\",\n                \"arcs\": [\n                    [464, -8, 465, -119, 466]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"New Caledonia\"\n                },\n                \"id\": \"NCL\",\n                \"arcs\": [\n                    [467]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Niger\"\n                },\n                \"id\": \"NER\",\n                \"arcs\": [\n                    [-75, -441, -238, -418, 468, -194, 469, -71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nigeria\"\n                },\n                \"id\": \"NGA\",\n                \"arcs\": [\n                    [470, -72, -470, -193]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nicaragua\"\n                },\n                \"id\": \"NIC\",\n                \"arcs\": [\n                    [471, -324, 472, -213]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Netherlands\"\n                },\n                \"id\": \"NLD\",\n                \"arcs\": [\n                    [-227, -63, 473]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Norway\"\n                },\n                \"id\": \"NOR\",\n                \"arcs\": [\n                    [\n                        [474, -272, 475, 476]\n                    ],\n                    [\n                        [477]\n                    ],\n                    [\n                        [478]\n                    ],\n                    [\n                        [479]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nepal\"\n                },\n                \"id\": \"NPL\",\n                \"arcs\": [\n                    [-352, -176]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"New Zealand\"\n                },\n                \"id\": \"NZL\",\n                \"arcs\": [\n                    [\n                        [480]\n                    ],\n                    [\n                        [481]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Oman\"\n                },\n                \"id\": \"OMN\",\n                \"arcs\": [\n                    [\n                        [482, 483, -22, 484]\n                    ],\n                    [\n                        [-20, 485]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Pakistan\"\n                },\n                \"id\": \"PAK\",\n                \"arcs\": [\n                    [-178, -355, 486, -358, -5]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Panama\"\n                },\n                \"id\": \"PAN\",\n                \"arcs\": [\n                    [487, -215, 488, -208]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Peru\"\n                },\n                \"id\": \"PER\",\n                \"arcs\": [\n                    [-167, 489, -247, -211, -106, -102]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Philippines\"\n                },\n                \"id\": \"PHL\",\n                \"arcs\": [\n                    [\n                        [490]\n                    ],\n                    [\n                        [491]\n                    ],\n                    [\n                        [492]\n                    ],\n                    [\n                        [493]\n                    ],\n                    [\n                        [494]\n                    ],\n                    [\n                        [495]\n                    ],\n                    [\n                        [496]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Papua New Guinea\"\n                },\n                \"id\": \"PNG\",\n                \"arcs\": [\n                    [\n                        [497]\n                    ],\n                    [\n                        [498]\n                    ],\n                    [\n                        [-345, 499]\n                    ],\n                    [\n                        [500]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Poland\"\n                },\n                \"id\": \"POL\",\n                \"arcs\": [\n                    [-224, 501, 502, -428, -97, 503, 504, -221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Puerto Rico\"\n                },\n                \"id\": \"PRI\",\n                \"arcs\": [\n                    [505]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"North Korea\"\n                },\n                \"id\": \"PRK\",\n                \"arcs\": [\n                    [506, 507, -405, 508, -169]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Portugal\"\n                },\n                \"id\": \"PRT\",\n                \"arcs\": [\n                    [-259, 509]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Paraguay\"\n                },\n                \"id\": \"PRY\",\n                \"arcs\": [\n                    [-104, -105, -26]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Qatar\"\n                },\n                \"id\": \"QAT\",\n                \"arcs\": [\n                    [510, 511]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Romania\"\n                },\n                \"id\": \"ROU\",\n                \"arcs\": [\n                    [512, -434, 513, 514, -81, 515, -333]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Russia\"\n                },\n                \"id\": \"RUS\",\n                \"arcs\": [\n                    [\n                        [516]\n                    ],\n                    [\n                        [-503, 517, -425]\n                    ],\n                    [\n                        [518, 519]\n                    ],\n                    [\n                        [520]\n                    ],\n                    [\n                        [521]\n                    ],\n                    [\n                        [522]\n                    ],\n                    [\n                        [523]\n                    ],\n                    [\n                        [524]\n                    ],\n                    [\n                        [525]\n                    ],\n                    [\n                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n                    ],\n                    [\n                        [532]\n                    ],\n                    [\n                        [533]\n                    ],\n                    [\n                        [534]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Rwanda\"\n                },\n                \"id\": \"RWA\",\n                \"arcs\": [\n                    [535, -61, -198, 536]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Western Sahara\"\n                },\n                \"id\": \"ESH\",\n                \"arcs\": [\n                    [-241, -458, 537, -431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Saudi Arabia\"\n                },\n                \"id\": \"SAU\",\n                \"arcs\": [\n                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sudan\"\n                },\n                \"id\": \"SDN\",\n                \"arcs\": [\n                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Sudan\"\n                },\n                \"id\": \"SSD\",\n                \"arcs\": [\n                    [547, -266, -396, 548, -203, -125, 549, -543]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Senegal\"\n                },\n                \"id\": \"SEN\",\n                \"arcs\": [\n                    [550, -456, -442, -301, -306, 551, -304]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Solomon Islands\"\n                },\n                \"id\": \"SLB\",\n                \"arcs\": [\n                    [\n                        [552]\n                    ],\n                    [\n                        [553]\n                    ],\n                    [\n                        [554]\n                    ],\n                    [\n                        [555]\n                    ],\n                    [\n                        [556]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sierra Leone\"\n                },\n                \"id\": \"SLE\",\n                \"arcs\": [\n                    [557, -298, -417]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"El Salvador\"\n                },\n                \"id\": \"SLV\",\n                \"arcs\": [\n                    [558, -317, -322]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somaliland\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-263, -231, 559, 560]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somalia\"\n                },\n                \"id\": \"SOM\",\n                \"arcs\": [\n                    [-397, -264, -561, 561]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of Serbia\"\n                },\n                \"id\": \"SRB\",\n                \"arcs\": [\n                    [-86, -439, -407, -446, -90, -325, -334, -516]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Suriname\"\n                },\n                \"id\": \"SUR\",\n                \"arcs\": [\n                    [562, -285, 563, -283, -110, -319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovakia\"\n                },\n                \"id\": \"SVK\",\n                \"arcs\": [\n                    [-505, 564, -331, -54, -222]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovenia\"\n                },\n                \"id\": \"SVN\",\n                \"arcs\": [\n                    [-49, -335, -328, 565, -378]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sweden\"\n                },\n                \"id\": \"SWE\",\n                \"arcs\": [\n                    [-476, -271, 566]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Swaziland\"\n                },\n                \"id\": \"SWZ\",\n                \"arcs\": [\n                    [567, -451]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Syria\"\n                },\n                \"id\": \"SYR\",\n                \"arcs\": [\n                    [-381, -375, -415, 568, 569, -367]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Chad\"\n                },\n                \"id\": \"TCD\",\n                \"arcs\": [\n                    [-469, -422, -545, -122, -195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Togo\"\n                },\n                \"id\": \"TGO\",\n                \"arcs\": [\n                    [570, -296, -76, -69]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Thailand\"\n                },\n                \"id\": \"THA\",\n                \"arcs\": [\n                    [571, -462, 572, -444, -411, -400]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tajikistan\"\n                },\n                \"id\": \"TJK\",\n                \"arcs\": [\n                    [-398, -179, -3, 573]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Turkmenistan\"\n                },\n                \"id\": \"TKM\",\n                \"arcs\": [\n                    [-357, 574, -389, 575, -1]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"East Timor\"\n                },\n                \"id\": \"TLS\",\n                \"arcs\": [\n                    [576, -337]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Trinidad and Tobago\"\n                },\n                \"id\": \"TTO\",\n                \"arcs\": [\n                    [577]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tunisia\"\n                },\n                \"id\": \"TUN\",\n                \"arcs\": [\n                    [-244, 578, -419]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Turkey\"\n                },\n                \"id\": \"TUR\",\n                \"arcs\": [\n                    [\n                        [-294, -36, -361, -368, -570, 579]\n                    ],\n                    [\n                        [-311, -83, 580]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Taiwan\"\n                },\n                \"id\": \"TWN\",\n                \"arcs\": [\n                    [581]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Republic of Tanzania\"\n                },\n                \"id\": \"TZA\",\n                \"arcs\": [\n                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uganda\"\n                },\n                \"id\": \"UGA\",\n                \"arcs\": [\n                    [-537, -197, -549, -395, -585]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ukraine\"\n                },\n                \"id\": \"UKR\",\n                \"arcs\": [\n                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uruguay\"\n                },\n                \"id\": \"URY\",\n                \"arcs\": [\n                    [-113, 586, -28]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United States of America\"\n                },\n                \"id\": \"USA\",\n                \"arcs\": [\n                    [\n                        [587]\n                    ],\n                    [\n                        [588]\n                    ],\n                    [\n                        [589]\n                    ],\n                    [\n                        [590]\n                    ],\n                    [\n                        [591]\n                    ],\n                    [\n                        [592, -438, 593, -139]\n                    ],\n                    [\n                        [594]\n                    ],\n                    [\n                        [595]\n                    ],\n                    [\n                        [596]\n                    ],\n                    [\n                        [-141, 597]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uzbekistan\"\n                },\n                \"id\": \"UZB\",\n                \"arcs\": [\n                    [-576, -388, -399, -574, -2]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Venezuela\"\n                },\n                \"id\": \"VEN\",\n                \"arcs\": [\n                    [598, -320, -108, -210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Vietnam\"\n                },\n                \"id\": \"VNM\",\n                \"arcs\": [\n                    [599, -402, -413, -171]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Vanuatu\"\n                },\n                \"id\": \"VUT\",\n                \"arcs\": [\n                    [\n                        [600]\n                    ],\n                    [\n                        [601]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"West Bank\"\n                },\n                \"id\": \"PSE\",\n                \"arcs\": [\n                    [-384, -371]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Yemen\"\n                },\n                \"id\": \"YEM\",\n                \"arcs\": [\n                    [602, -542, -483]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Africa\"\n                },\n                \"id\": \"ZAF\",\n                \"arcs\": [\n                    [-467, -118, 603, -452, -568, -450, 604],\n                    [-424]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zambia\"\n                },\n                \"id\": \"ZMB\",\n                \"arcs\": [\n                    [-459, -454, 605, -120, -466, -7, -200, -584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zimbabwe\"\n                },\n                \"id\": \"ZWE\",\n                \"arcs\": [\n                    [-604, -121, -606, -453]\n                ]\n            }]\n        }\n    },\n    \"arcs\": [\n        [\n            [6700, 7164],\n            [28, -23],\n            [21, 8],\n            [6, 27],\n            [22, 9],\n            [15, 18],\n            [6, 47],\n            [23, 11],\n            [5, 21],\n            [13, -15],\n            [8, -2]\n        ],\n        [\n            [6847, 7265],\n            [16, -1],\n            [20, -12]\n        ],\n        [\n            [6883, 7252],\n            [9, -7],\n            [20, 19],\n            [9, -12],\n            [9, 27],\n            [17, -1],\n            [4, 9],\n            [3, 24],\n            [12, 20],\n            [15, -13],\n            [-3, -18],\n            [9, -3],\n            [-3, -50],\n            [11, -19],\n            [10, 12],\n            [12, 6],\n            [17, 27],\n            [19, -5],\n            [29, 0]\n        ],\n        [\n            [7082, 7268],\n            [5, -17]\n        ],\n        [\n            [7087, 7251],\n            [-16, -6],\n            [-14, -11],\n            [-32, -7],\n            [-30, -13],\n            [-16, -25],\n            [6, -25],\n            [4, -30],\n            [-14, -25],\n            [1, -22],\n            [-8, -22],\n            [-26, 2],\n            [11, -39],\n            [-18, -15],\n            [-12, -35],\n            [2, -36],\n            [-11, -16],\n            [-10, 5],\n            [-22, -8],\n            [-3, -16],\n            [-20, 0],\n            [-16, -34],\n            [-1, -50],\n            [-36, -24],\n            [-19, 5],\n            [-6, -13],\n            [-16, 7],\n            [-28, -8],\n            [-47, 30]\n        ],\n        [\n            [6690, 6820],\n            [25, 53],\n            [-2, 38],\n            [-21, 10],\n            [-2, 38],\n            [-9, 47],\n            [12, 32],\n            [-12, 9],\n            [7, 43],\n            [12, 74]\n        ],\n        [\n            [5664, 4412],\n            [3, -18],\n            [-4, -29],\n            [5, -28],\n            [-4, -22],\n            [3, -20],\n            [-58, 1],\n            [-2, -188],\n            [19, -49],\n            [18, -37]\n        ],\n        [\n            [5644, 4022],\n            [-51, -24],\n            [-67, 9],\n            [-19, 28],\n            [-113, -3],\n            [-4, -4],\n            [-17, 27],\n            [-18, 2],\n            [-16, -10],\n            [-14, -12]\n        ],\n        [\n            [5325, 4035],\n            [-2, 38],\n            [4, 51],\n            [9, 55],\n            [2, 25],\n            [9, 53],\n            [6, 24],\n            [16, 39],\n            [9, 26],\n            [3, 44],\n            [-1, 34],\n            [-9, 21],\n            [-7, 36],\n            [-7, 35],\n            [2, 12],\n            [8, 24],\n            [-8, 57],\n            [-6, 39],\n            [-14, 38],\n            [3, 11]\n        ],\n        [\n            [5342, 4697],\n            [11, 8],\n            [8, -1],\n            [10, 7],\n            [82, -1],\n            [7, -44],\n            [8, -35],\n            [6, -19],\n            [11, -31],\n            [18, 5],\n            [9, 8],\n            [16, -8],\n            [4, 14],\n            [7, 35],\n            [17, 2],\n            [2, 10],\n            [14, 1],\n            [-3, -22],\n            [34, 1],\n            [1, -37],\n            [5, -23],\n            [-4, -36],\n            [2, -36],\n            [9, -22],\n            [-1, -70],\n            [7, 5],\n            [12, -1],\n            [17, 8],\n            [13, -3]\n        ],\n        [\n            [5338, 4715],\n            [-8, 45]\n        ],\n        [\n            [5330, 4760],\n            [12, 25],\n            [8, 10],\n            [10, -20]\n        ],\n        [\n            [5360, 4775],\n            [-10, -12],\n            [-4, -16],\n            [-1, -25],\n            [-7, -7]\n        ],\n        [\n            [5571, 7530],\n            [-3, -20],\n            [4, -25],\n            [11, -15]\n        ],\n        [\n            [5583, 7470],\n            [0, -15],\n            [-9, -9],\n            [-2, -19],\n            [-13, -29]\n        ],\n        [\n            [5559, 7398],\n            [-5, 5],\n            [0, 13],\n            [-15, 19],\n            [-3, 29],\n            [2, 40],\n            [4, 18],\n            [-4, 10]\n        ],\n        [\n            [5538, 7532],\n            [-2, 18],\n            [12, 29],\n            [1, -11],\n            [8, 6]\n        ],\n        [\n            [5557, 7574],\n            [6, -16],\n            [7, -6],\n            [1, -22]\n        ],\n        [\n            [6432, 6490],\n            [5, 3],\n            [1, -16],\n            [22, 9],\n            [23, -2],\n            [17, -1],\n            [19, 39],\n            [20, 38],\n            [18, 37]\n        ],\n        [\n            [6557, 6597],\n            [5, -20]\n        ],\n        [\n            [6562, 6577],\n            [4, -47]\n        ],\n        [\n            [6566, 6530],\n            [-14, 0],\n            [-3, -39],\n            [5, -8],\n            [-12, -12],\n            [0, -24],\n            [-8, -24],\n            [-1, -24]\n        ],\n        [\n            [6533, 6399],\n            [-6, -12],\n            [-83, 29],\n            [-11, 60],\n            [-1, 14]\n        ],\n        [\n            [3140, 1814],\n            [-17, 2],\n            [-30, 0],\n            [0, 132]\n        ],\n        [\n            [3093, 1948],\n            [11, -27],\n            [14, -45],\n            [36, -35],\n            [39, -15],\n            [-13, -30],\n            [-26, -2],\n            [-14, 20]\n        ],\n        [\n            [3258, 3743],\n            [51, -96],\n            [23, -9],\n            [34, -44],\n            [29, -23],\n            [4, -26],\n            [-28, -90],\n            [28, -16],\n            [32, -9],\n            [22, 10],\n            [25, 45],\n            [4, 52]\n        ],\n        [\n            [3482, 3537],\n            [14, 11],\n            [14, -34],\n            [-1, -47],\n            [-23, -33],\n            [-19, -24],\n            [-31, -57],\n            [-37, -81]\n        ],\n        [\n            [3399, 3272],\n            [-7, -47],\n            [-7, -61],\n            [0, -58],\n            [-6, -14],\n            [-2, -38]\n        ],\n        [\n            [3377, 3054],\n            [-2, -31],\n            [35, -50],\n            [-4, -41],\n            [18, -26],\n            [-2, -29],\n            [-26, -75],\n            [-42, -32],\n            [-55, -12],\n            [-31, 6],\n            [6, -36],\n            [-6, -44],\n            [5, -30],\n            [-16, -20],\n            [-29, -8],\n            [-26, 21],\n            [-11, -15],\n            [4, -59],\n            [18, -18],\n            [16, 19],\n            [8, -31],\n            [-26, -18],\n            [-22, -37],\n            [-4, -59],\n            [-7, -32],\n            [-26, 0],\n            [-22, -31],\n            [-8, -44],\n            [28, -43],\n            [26, -12],\n            [-9, -53],\n            [-33, -33],\n            [-18, -70],\n            [-25, -23],\n            [-12, -28],\n            [9, -61],\n            [19, -34],\n            [-12, 3]\n        ],\n        [\n            [3095, 1968],\n            [-26, 9],\n            [-67, 8],\n            [-11, 34],\n            [0, 45],\n            [-18, -4],\n            [-10, 21],\n            [-3, 63],\n            [22, 26],\n            [9, 37],\n            [-4, 30],\n            [15, 51],\n            [10, 78],\n            [-3, 35],\n            [12, 11],\n            [-3, 22],\n            [-13, 12],\n            [10, 25],\n            [-13, 22],\n            [-6, 68],\n            [11, 12],\n            [-5, 72],\n            [7, 61],\n            [7, 52],\n            [17, 22],\n            [-9, 58],\n            [0, 54],\n            [21, 38],\n            [-1, 50],\n            [16, 57],\n            [0, 55],\n            [-7, 11],\n            [-13, 102],\n            [17, 60],\n            [-2, 58],\n            [10, 53],\n            [18, 56],\n            [20, 36],\n            [-9, 24],\n            [6, 19],\n            [-1, 98],\n            [30, 29],\n            [10, 62],\n            [-3, 14]\n        ],\n        [\n            [3136, 3714],\n            [23, 54],\n            [36, -15],\n            [16, -42],\n            [11, 47],\n            [32, -2],\n            [4, -13]\n        ],\n        [\n            [6210, 7485],\n            [39, 9]\n        ],\n        [\n            [6249, 7494],\n            [5, -15],\n            [11, -10],\n            [-6, -15],\n            [15, -21],\n            [-8, -18],\n            [12, -16],\n            [13, -10],\n            [0, -41]\n        ],\n        [\n            [6291, 7348],\n            [-10, -2]\n        ],\n        [\n            [6281, 7346],\n            [-11, 34],\n            [0, 10],\n            [-12, -1],\n            [-9, 16],\n            [-5, -1]\n        ],\n        [\n            [6244, 7404],\n            [-11, 17],\n            [-21, 15],\n            [3, 28],\n            [-5, 21]\n        ],\n        [\n            [3345, 329],\n            [-8, -30],\n            [-8, -27],\n            [-59, 8],\n            [-62, -3],\n            [-34, 20],\n            [0, 2],\n            [-16, 17],\n            [63, -2],\n            [60, -6],\n            [20, 24],\n            [15, 21],\n            [29, -24]\n        ],\n        [\n            [577, 361],\n            [-53, -8],\n            [-36, 21],\n            [-17, 21],\n            [-1, 3],\n            [-18, 16],\n            [17, 22],\n            [52, -9],\n            [28, -18],\n            [21, -21],\n            [7, -27]\n        ],\n        [\n            [3745, 447],\n            [35, -26],\n            [12, -36],\n            [3, -25],\n            [1, -30],\n            [-43, -19],\n            [-45, -15],\n            [-52, -14],\n            [-59, -11],\n            [-65, 3],\n            [-37, 20],\n            [5, 24],\n            [59, 16],\n            [24, 20],\n            [18, 26],\n            [12, 22],\n            [17, 20],\n            [18, 25],\n            [14, 0],\n            [41, 12],\n            [42, -12]\n        ],\n        [\n            [1633, 715],\n            [36, -9],\n            [33, 10],\n            [-16, -20],\n            [-26, -15],\n            [-39, 4],\n            [-27, 21],\n            [6, 20],\n            [33, -11]\n        ],\n        [\n            [1512, 716],\n            [43, -23],\n            [-17, 3],\n            [-36, 5],\n            [-38, 17],\n            [20, 12],\n            [28, -14]\n        ],\n        [\n            [2250, 808],\n            [31, -8],\n            [30, 7],\n            [17, -34],\n            [-22, 5],\n            [-34, -2],\n            [-34, 2],\n            [-38, -4],\n            [-28, 12],\n            [-15, 24],\n            [18, 11],\n            [35, -8],\n            [40, -5]\n        ],\n        [\n            [3098, 866],\n            [4, -27],\n            [-5, -23],\n            [-8, -22],\n            [-33, -8],\n            [-31, -12],\n            [-36, 1],\n            [14, 24],\n            [-33, -9],\n            [-31, -8],\n            [-21, 18],\n            [-2, 24],\n            [30, 23],\n            [20, 7],\n            [32, -2],\n            [8, 30],\n            [1, 22],\n            [0, 47],\n            [16, 28],\n            [25, 9],\n            [15, -22],\n            [6, -22],\n            [12, -26],\n            [10, -26],\n            [7, -26]\n        ],\n        [\n            [3371, 1268],\n            [-11, -13],\n            [-21, 9],\n            [-23, -6],\n            [-19, -14],\n            [-20, -15],\n            [-14, -17],\n            [-4, -23],\n            [2, -22],\n            [13, -20],\n            [-19, -14],\n            [-26, -4],\n            [-15, -20],\n            [-17, -19],\n            [-17, -25],\n            [-4, -22],\n            [9, -24],\n            [15, -19],\n            [23, -14],\n            [21, -18],\n            [12, -23],\n            [6, -22],\n            [8, -24],\n            [13, -19],\n            [8, -22],\n            [4, -55],\n            [8, -22],\n            [2, -23],\n            [9, -23],\n            [-4, -31],\n            [-15, -24],\n            [-17, -20],\n            [-37, -8],\n            [-12, -21],\n            [-17, -20],\n            [-42, -22],\n            [-37, -9],\n            [-35, -13],\n            [-37, -13],\n            [-22, -24],\n            [-45, -2],\n            [-49, 2],\n            [-44, -4],\n            [-47, 0],\n            [9, -24],\n            [42, -10],\n            [31, -16],\n            [18, -21],\n            [-31, -19],\n            [-48, 6],\n            [-40, -15],\n            [-2, -24],\n            [-1, -23],\n            [33, -20],\n            [6, -22],\n            [35, -22],\n            [59, -9],\n            [50, -16],\n            [40, -19],\n            [50, -18],\n            [70, -10],\n            [68, -16],\n            [47, -17],\n            [52, -20],\n            [27, -28],\n            [13, -22],\n            [34, 21],\n            [46, 17],\n            [48, 19],\n            [58, 15],\n            [49, 16],\n            [69, 1],\n            [68, -8],\n            [56, -14],\n            [18, 26],\n            [39, 17],\n            [70, 1],\n            [55, 13],\n            [52, 13],\n            [58, 8],\n            [62, 10],\n            [43, 15],\n            [-20, 21],\n            [-12, 21],\n            [0, 22],\n            [-54, -2],\n            [-57, -10],\n            [-54, 0],\n            [-8, 22],\n            [4, 44],\n            [12, 13],\n            [40, 14],\n            [47, 14],\n            [34, 17],\n            [33, 18],\n            [25, 23],\n            [38, 10],\n            [38, 8],\n            [19, 5],\n            [43, 2],\n            [41, 8],\n            [34, 12],\n            [34, 14],\n            [30, 14],\n            [39, 18],\n            [24, 20],\n            [26, 17],\n            [9, 24],\n            [-30, 13],\n            [10, 25],\n            [18, 18],\n            [29, 12],\n            [31, 14],\n            [28, 18],\n            [22, 23],\n            [13, 28],\n            [21, 16],\n            [33, -3],\n            [13, -20],\n            [34, -2],\n            [1, 22],\n            [14, 23],\n            [30, -6],\n            [7, -22],\n            [33, -3],\n            [36, 10],\n            [35, 7],\n            [31, -3],\n            [12, -25],\n            [31, 20],\n            [28, 10],\n            [31, 9],\n            [31, 8],\n            [29, 14],\n            [31, 9],\n            [24, 13],\n            [17, 20],\n            [20, -15],\n            [29, 8],\n            [20, -27],\n            [16, -21],\n            [32, 11],\n            [12, 24],\n            [28, 16],\n            [37, -4],\n            [11, -22],\n            [22, 22],\n            [30, 7],\n            [33, 3],\n            [29, -2],\n            [31, -7],\n            [30, -3],\n            [13, -20],\n            [18, -17],\n            [31, 10],\n            [32, 3],\n            [32, 0],\n            [31, 1],\n            [28, 8],\n            [29, 7],\n            [25, 16],\n            [26, 11],\n            [28, 5],\n            [21, 17],\n            [15, 32],\n            [16, 20],\n            [29, -10],\n            [11, -21],\n            [24, -13],\n            [29, 4],\n            [19, -21],\n            [21, -15],\n            [28, 14],\n            [10, 26],\n            [25, 10],\n            [29, 20],\n            [27, 8],\n            [33, 11],\n            [22, 13],\n            [22, 14],\n            [22, 13],\n            [26, -7],\n            [25, 21],\n            [18, 16],\n            [26, -1],\n            [23, 14],\n            [6, 21],\n            [23, 16],\n            [23, 11],\n            [28, 10],\n            [25, 4],\n            [25, -3],\n            [26, -6],\n            [22, -16],\n            [3, -26],\n            [24, -19],\n            [17, -17],\n            [33, -7],\n            [19, -16],\n            [23, -16],\n            [26, -3],\n            [23, 11],\n            [24, 24],\n            [26, -12],\n            [27, -7],\n            [26, -7],\n            [27, -5],\n            [28, 0],\n            [23, -61],\n            [-1, -15],\n            [-4, -27],\n            [-26, -15],\n            [-22, -22],\n            [4, -23],\n            [31, 1],\n            [-4, -23],\n            [-14, -22],\n            [-13, -24],\n            [21, -19],\n            [32, -6],\n            [32, 11],\n            [15, 23],\n            [10, 22],\n            [15, 18],\n            [17, 18],\n            [7, 21],\n            [15, 29],\n            [18, 5],\n            [31, 3],\n            [28, 7],\n            [28, 9],\n            [14, 23],\n            [8, 22],\n            [19, 22],\n            [27, 15],\n            [23, 12],\n            [16, 19],\n            [15, 11],\n            [21, 9],\n            [27, -6],\n            [25, 6],\n            [28, 7],\n            [30, -4],\n            [20, 17],\n            [14, 39],\n            [11, -16],\n            [13, -28],\n            [23, -12],\n            [27, -4],\n            [26, 7],\n            [29, -5],\n            [26, -1],\n            [17, 6],\n            [24, -4],\n            [21, -12],\n            [25, 8],\n            [30, 0],\n            [25, 8],\n            [29, -8],\n            [19, 19],\n            [14, 20],\n            [19, 16],\n            [35, 44],\n            [18, -8],\n            [21, -16],\n            [18, -21],\n            [36, -36],\n            [27, -1],\n            [25, 0],\n            [30, 7],\n            [30, 8],\n            [23, 16],\n            [19, 18],\n            [31, 2],\n            [21, 13],\n            [22, -12],\n            [14, -18],\n            [19, -19],\n            [31, 2],\n            [19, -15],\n            [33, -15],\n            [35, -5],\n            [29, 4],\n            [21, 19],\n            [19, 18],\n            [25, 5],\n            [25, -8],\n            [29, -6],\n            [26, 9],\n            [25, 0],\n            [24, -6],\n            [26, -5],\n            [25, 10],\n            [30, 9],\n            [28, 3],\n            [32, 0],\n            [25, 5],\n            [25, 5],\n            [8, 29],\n            [1, 24],\n            [17, -16],\n            [5, -27],\n            [10, -24],\n            [11, -20],\n            [23, -10],\n            [32, 4],\n            [36, 1],\n            [25, 3],\n            [37, 0],\n            [26, 1],\n            [36, -2],\n            [31, -5],\n            [20, -18],\n            [-5, -22],\n            [18, -18],\n            [30, -13],\n            [31, -15],\n            [35, -11],\n            [38, -9],\n            [28, -9],\n            [32, -2],\n            [18, 20],\n            [24, -16],\n            [21, -19],\n            [25, -13],\n            [34, -6],\n            [32, -7],\n            [13, -23],\n            [32, -14],\n            [21, -21],\n            [31, -9],\n            [32, 1],\n            [30, -4],\n            [33, 1],\n            [34, -4],\n            [31, -8],\n            [28, -14],\n            [29, -12],\n            [20, -17],\n            [-3, -23],\n            [-15, -21],\n            [-13, -27],\n            [-9, -21],\n            [-14, -24],\n            [-36, -9],\n            [-16, -21],\n            [-36, -13],\n            [-13, -23],\n            [-19, -22],\n            [-20, -18],\n            [-11, -25],\n            [-7, -22],\n            [-3, -26],\n            [0, -22],\n            [16, -23],\n            [6, -22],\n            [13, -21],\n            [52, -8],\n            [11, -26],\n            [-50, -9],\n            [-43, -13],\n            [-52, -2],\n            [-24, -34],\n            [-5, -27],\n            [-12, -22],\n            [-14, -22],\n            [37, -20],\n            [14, -24],\n            [24, -22],\n            [33, -20],\n            [39, -19],\n            [42, -18],\n            [64, -19],\n            [14, -29],\n            [80, -12],\n            [5, -5],\n            [21, -17],\n            [77, 15],\n            [63, -19],\n            [48, -14],\n            [-9997, -1],\n            [24, 35],\n            [50, -19],\n            [3, 2],\n            [30, 19],\n            [4, 0],\n            [3, -1],\n            [40, -25],\n            [35, 25],\n            [7, 3],\n            [81, 11],\n            [27, -14],\n            [13, -7],\n            [41, -20],\n            [79, -15],\n            [63, -18],\n            [107, -14],\n            [80, 16],\n            [118, -11],\n            [67, -19],\n            [73, 17],\n            [78, 17],\n            [6, 27],\n            [-110, 3],\n            [-89, 14],\n            [-24, 23],\n            [-74, 12],\n            [5, 27],\n            [10, 24],\n            [10, 22],\n            [-5, 25],\n            [-46, 16],\n            [-22, 21],\n            [-43, 18],\n            [68, -3],\n            [64, 9],\n            [40, -20],\n            [50, 18],\n            [45, 22],\n            [23, 19],\n            [-10, 25],\n            [-36, 16],\n            [-41, 17],\n            [-57, 4],\n            [-50, 8],\n            [-54, 6],\n            [-18, 22],\n            [-36, 18],\n            [-21, 21],\n            [-9, 67],\n            [14, -6],\n            [25, -18],\n            [45, 6],\n            [44, 8],\n            [23, -26],\n            [44, 6],\n            [37, 13],\n            [35, 16],\n            [32, 20],\n            [41, 5],\n            [-1, 22],\n            [-9, 22],\n            [8, 21],\n            [36, 11],\n            [16, -20],\n            [42, 12],\n            [32, 15],\n            [40, 1],\n            [38, 6],\n            [37, 13],\n            [30, 13],\n            [34, 13],\n            [22, -4],\n            [19, -4],\n            [41, 8],\n            [37, -10],\n            [38, 1],\n            [37, 8],\n            [37, -6],\n            [41, -6],\n            [39, 3],\n            [40, -2],\n            [42, -1],\n            [38, 3],\n            [28, 17],\n            [34, 9],\n            [35, -13],\n            [33, 11],\n            [30, 21],\n            [18, -19],\n            [9, -21],\n            [18, -19],\n            [29, 17],\n            [33, -22],\n            [38, -7],\n            [32, -16],\n            [39, 3],\n            [36, 11],\n            [41, -3],\n            [38, -8],\n            [38, -10],\n            [15, 25],\n            [-18, 20],\n            [-14, 21],\n            [-36, 5],\n            [-15, 22],\n            [-6, 22],\n            [-10, 43],\n            [21, -8],\n            [36, -3],\n            [36, 3],\n            [33, -9],\n            [28, -17],\n            [12, -21],\n            [38, -4],\n            [36, 9],\n            [38, 11],\n            [34, 7],\n            [28, -14],\n            [37, 5],\n            [24, 45],\n            [23, -27],\n            [32, -10],\n            [34, 6],\n            [23, -23],\n            [37, -3],\n            [33, -7],\n            [34, -12],\n            [21, 22],\n            [11, 20],\n            [28, -23],\n            [38, 6],\n            [28, -13],\n            [19, -19],\n            [37, 5],\n            [29, 13],\n            [29, 15],\n            [33, 8],\n            [39, 7],\n            [36, 8],\n            [27, 13],\n            [16, 19],\n            [7, 25],\n            [-3, 24],\n            [-9, 24],\n            [-10, 23],\n            [-9, 23],\n            [-7, 21],\n            [-1, 23],\n            [2, 23],\n            [13, 22],\n            [11, 24],\n            [5, 23],\n            [-6, 26],\n            [-3, 23],\n            [14, 27],\n            [15, 17],\n            [18, 22],\n            [19, 19],\n            [22, 17],\n            [11, 25],\n            [15, 17],\n            [18, 15],\n            [26, 3],\n            [18, 19],\n            [19, 11],\n            [23, 7],\n            [20, 15],\n            [16, 19],\n            [22, 7],\n            [16, -15],\n            [-10, -20],\n            [-29, -17]\n        ],\n        [\n            [6914, 2185],\n            [18, -19],\n            [26, -7],\n            [1, -11],\n            [-7, -27],\n            [-43, -4],\n            [-1, 31],\n            [4, 25],\n            [2, 12]\n        ],\n        [\n            [9038, 2648],\n            [27, -21],\n            [15, 8],\n            [22, 12],\n            [16, -4],\n            [2, -70],\n            [-9, -21],\n            [-3, -47],\n            [-10, 16],\n            [-19, -41],\n            [-6, 3],\n            [-17, 2],\n            [-17, 50],\n            [-4, 39],\n            [-16, 52],\n            [1, 27],\n            [18, -5]\n        ],\n        [\n            [8987, 4244],\n            [10, -46],\n            [18, 22],\n            [9, -25],\n            [13, -23],\n            [-3, -26],\n            [6, -51],\n            [5, -29],\n            [7, -7],\n            [7, -51],\n            [-3, -30],\n            [9, -40],\n            [31, -31],\n            [19, -28],\n            [19, -26],\n            [-4, -14],\n            [16, -37],\n            [11, -64],\n            [11, 13],\n            [11, -26],\n            [7, 9],\n            [5, -63],\n            [19, -36],\n            [13, -22],\n            [22, -48],\n            [8, -48],\n            [1, -33],\n            [-2, -37],\n            [13, -50],\n            [-2, -52],\n            [-5, -28],\n            [-7, -52],\n            [1, -34],\n            [-6, -43],\n            [-12, -53],\n            [-21, -29],\n            [-10, -46],\n            [-9, -29],\n            [-8, -51],\n            [-11, -30],\n            [-7, -44],\n            [-4, -41],\n            [2, -18],\n            [-16, -21],\n            [-31, -2],\n            [-26, -24],\n            [-13, -23],\n            [-17, -26],\n            [-23, 27],\n            [-17, 10],\n            [5, 31],\n            [-15, -11],\n            [-25, -43],\n            [-24, 16],\n            [-15, 9],\n            [-16, 4],\n            [-27, 17],\n            [-18, 37],\n            [-5, 45],\n            [-7, 30],\n            [-13, 24],\n            [-27, 7],\n            [9, 28],\n            [-7, 44],\n            [-13, -41],\n            [-25, -11],\n            [14, 33],\n            [5, 34],\n            [10, 29],\n            [-2, 44],\n            [-22, -50],\n            [-18, -21],\n            [-10, -47],\n            [-22, 25],\n            [1, 31],\n            [-18, 43],\n            [-14, 22],\n            [5, 14],\n            [-36, 35],\n            [-19, 2],\n            [-27, 29],\n            [-50, -6],\n            [-36, -21],\n            [-31, -20],\n            [-27, 4],\n            [-29, -30],\n            [-24, -14],\n            [-6, -31],\n            [-10, -24],\n            [-23, -1],\n            [-18, -5],\n            [-24, 10],\n            [-20, -6],\n            [-19, -3],\n            [-17, -31],\n            [-8, 2],\n            [-14, -16],\n            [-13, -19],\n            [-21, 2],\n            [-18, 0],\n            [-30, 38],\n            [-15, 11],\n            [1, 34],\n            [14, 8],\n            [4, 14],\n            [-1, 21],\n            [4, 41],\n            [-3, 35],\n            [-15, 60],\n            [-4, 33],\n            [1, 34],\n            [-11, 38],\n            [-1, 18],\n            [-12, 23],\n            [-4, 47],\n            [-16, 46],\n            [-4, 26],\n            [13, -26],\n            [-10, 55],\n            [14, -17],\n            [8, -23],\n            [0, 30],\n            [-14, 47],\n            [-3, 18],\n            [-6, 18],\n            [3, 34],\n            [6, 15],\n            [4, 29],\n            [-3, 35],\n            [11, 42],\n            [2, -45],\n            [12, 41],\n            [22, 20],\n            [14, 25],\n            [21, 22],\n            [13, 4],\n            [7, -7],\n            [22, 22],\n            [17, 6],\n            [4, 13],\n            [8, 6],\n            [15, -2],\n            [29, 18],\n            [15, 26],\n            [7, 31],\n            [17, 30],\n            [1, 24],\n            [1, 32],\n            [19, 50],\n            [12, -51],\n            [12, 12],\n            [-10, 28],\n            [9, 29],\n            [12, -13],\n            [3, 45],\n            [15, 29],\n            [7, 23],\n            [14, 10],\n            [0, 17],\n            [13, -7],\n            [0, 15],\n            [12, 8],\n            [14, 8],\n            [20, -27],\n            [16, -35],\n            [17, 0],\n            [18, -6],\n            [-6, 33],\n            [13, 47],\n            [13, 15],\n            [-5, 15],\n            [12, 34],\n            [17, 21],\n            [14, -7],\n            [24, 11],\n            [-1, 30],\n            [-20, 19],\n            [15, 9],\n            [18, -15],\n            [15, -24],\n            [23, -15],\n            [8, 6],\n            [17, -18],\n            [17, 17],\n            [10, -5],\n            [7, 11],\n            [12, -29],\n            [-7, -32],\n            [-11, -24],\n            [-9, -2],\n            [3, -23],\n            [-8, -30],\n            [-10, -29],\n            [2, -17],\n            [22, -32],\n            [21, -19],\n            [15, -20],\n            [20, -35],\n            [8, 0],\n            [14, -15],\n            [4, -19],\n            [27, -20],\n            [18, 20],\n            [6, 32],\n            [5, 26],\n            [4, 33],\n            [8, 47],\n            [-4, 28],\n            [2, 17],\n            [-3, 34],\n            [4, 45],\n            [5, 12],\n            [-4, 20],\n            [7, 31],\n            [5, 32],\n            [1, 17],\n            [10, 22],\n            [8, -29],\n            [2, -37],\n            [7, -7],\n            [1, -25],\n            [10, -30],\n            [2, -33],\n            [-1, -22]\n        ],\n        [\n            [5471, 7900],\n            [-2, -24],\n            [-16, 0],\n            [6, -13],\n            [-9, -38]\n        ],\n        [\n            [5450, 7825],\n            [-6, -10],\n            [-24, -1],\n            [-14, -13],\n            [-23, 4]\n        ],\n        [\n            [5383, 7805],\n            [-40, 15],\n            [-6, 21],\n            [-27, -10],\n            [-4, -12],\n            [-16, 9]\n        ],\n        [\n            [5290, 7828],\n            [-15, 1],\n            [-12, 11],\n            [4, 15],\n            [-1, 10]\n        ],\n        [\n            [5266, 7865],\n            [8, 3],\n            [14, -16],\n            [4, 16],\n            [25, -3],\n            [20, 11],\n            [13, -2],\n            [9, -12],\n            [2, 10],\n            [-4, 38],\n            [10, 8],\n            [10, 27]\n        ],\n        [\n            [5377, 7945],\n            [21, -19],\n            [15, 24],\n            [10, 5],\n            [22, -18],\n            [13, 3],\n            [13, -12]\n        ],\n        [\n            [5471, 7928],\n            [-3, -7],\n            [3, -21]\n        ],\n        [\n            [6281, 7346],\n            [-19, 8],\n            [-14, 27],\n            [-4, 23]\n        ],\n        [\n            [6349, 7527],\n            [15, -31],\n            [14, -42],\n            [13, -2],\n            [8, -16],\n            [-23, -5],\n            [-5, -46],\n            [-4, -21],\n            [-11, -13],\n            [1, -30]\n        ],\n        [\n            [6357, 7321],\n            [-7, -3],\n            [-17, 31],\n            [10, 30],\n            [-9, 17],\n            [-10, -4],\n            [-33, -44]\n        ],\n        [\n            [6249, 7494],\n            [6, 10],\n            [21, -17],\n            [15, -4],\n            [4, 7],\n            [-14, 32],\n            [7, 9]\n        ],\n        [\n            [6288, 7531],\n            [8, -2],\n            [19, -36],\n            [13, -4],\n            [4, 15],\n            [17, 23]\n        ],\n        [\n            [5814, 4792],\n            [-1, 71],\n            [-7, 27]\n        ],\n        [\n            [5806, 4890],\n            [17, -5],\n            [8, 34],\n            [15, -4]\n        ],\n        [\n            [5846, 4915],\n            [1, -23],\n            [6, -14],\n            [1, -19],\n            [-7, -12],\n            [-11, -31],\n            [-10, -22],\n            [-12, -2]\n        ],\n        [\n            [5092, 8091],\n            [20, -5],\n            [26, 12],\n            [17, -25],\n            [16, -14]\n        ],\n        [\n            [5171, 8059],\n            [-4, -40]\n        ],\n        [\n            [5167, 8019],\n            [-7, -2],\n            [-3, -33]\n        ],\n        [\n            [5157, 7984],\n            [-24, 26],\n            [-14, -4],\n            [-20, 28],\n            [-13, 23],\n            [-13, 1],\n            [-4, 21]\n        ],\n        [\n            [5069, 8079],\n            [23, 12]\n        ],\n        [\n            [5074, 5427],\n            [-23, -7]\n        ],\n        [\n            [5051, 5420],\n            [-7, 41],\n            [2, 136],\n            [-6, 12],\n            [-1, 29],\n            [-10, 21],\n            [-8, 17],\n            [3, 31]\n        ],\n        [\n            [5024, 5707],\n            [10, 7],\n            [6, 26],\n            [13, 5],\n            [6, 18]\n        ],\n        [\n            [5059, 5763],\n            [10, 17],\n            [10, 0],\n            [21, -34]\n        ],\n        [\n            [5100, 5746],\n            [-1, -19],\n            [6, -35],\n            [-6, -24],\n            [3, -16],\n            [-13, -37],\n            [-9, -18],\n            [-5, -37],\n            [1, -38],\n            [-2, -95]\n        ],\n        [\n            [4921, 5627],\n            [-19, 15],\n            [-13, -2],\n            [-10, -15],\n            [-12, 13],\n            [-5, 19],\n            [-13, 13]\n        ],\n        [\n            [4849, 5670],\n            [-1, 34],\n            [7, 26],\n            [-1, 20],\n            [23, 48],\n            [4, 41],\n            [7, 14],\n            [14, -8],\n            [11, 12],\n            [4, 16],\n            [22, 26],\n            [5, 19],\n            [26, 24],\n            [15, 9],\n            [7, -12],\n            [18, 0]\n        ],\n        [\n            [5010, 5939],\n            [-2, -28],\n            [3, -27],\n            [16, -39],\n            [1, -28],\n            [32, -14],\n            [-1, -40]\n        ],\n        [\n            [5024, 5707],\n            [-24, 1]\n        ],\n        [\n            [5000, 5708],\n            [-13, 5],\n            [-9, -9],\n            [-12, 4],\n            [-48, -3],\n            [-1, -33],\n            [4, -45]\n        ],\n        [\n            [7573, 6360],\n            [0, -43],\n            [-10, 9],\n            [2, -47]\n        ],\n        [\n            [7565, 6279],\n            [-8, 30],\n            [-1, 31],\n            [-6, 28],\n            [-11, 34],\n            [-26, 3],\n            [3, -25],\n            [-9, -32],\n            [-12, 12],\n            [-4, -11],\n            [-8, 6],\n            [-11, 5]\n        ],\n        [\n            [7472, 6360],\n            [-4, 49],\n            [-10, 45],\n            [5, 35],\n            [-17, 16],\n            [6, 22],\n            [18, 22],\n            [-20, 31],\n            [9, 40],\n            [22, -26],\n            [14, -3],\n            [2, -41],\n            [26, -8],\n            [26, 1],\n            [16, -10],\n            [-13, -50],\n            [-12, -3],\n            [-9, -34],\n            [16, -31],\n            [4, 38],\n            [8, 0],\n            [14, -93]\n        ],\n        [\n            [5629, 7671],\n            [8, -25],\n            [11, 5],\n            [21, -9],\n            [41, -4],\n            [13, 16],\n            [33, 13],\n            [20, -21],\n            [17, -6]\n        ],\n        [\n            [5793, 7640],\n            [-15, -25],\n            [-10, -42],\n            [9, -34]\n        ],\n        [\n            [5777, 7539],\n            [-24, 8],\n            [-28, -18]\n        ],\n        [\n            [5725, 7529],\n            [0, -30],\n            [-26, -5],\n            [-19, 20],\n            [-22, -16],\n            [-21, 2]\n        ],\n        [\n            [5637, 7500],\n            [-2, 39],\n            [-14, 19]\n        ],\n        [\n            [5621, 7558],\n            [5, 8],\n            [-3, 7],\n            [4, 19],\n            [11, 18],\n            [-14, 26],\n            [-2, 21],\n            [7, 14]\n        ],\n        [\n            [2846, 6461],\n            [-7, -3],\n            [-7, 34],\n            [-10, 17],\n            [6, 38],\n            [8, -3],\n            [10, -49],\n            [0, -34]\n        ],\n        [\n            [2838, 6628],\n            [-30, -10],\n            [-2, 22],\n            [13, 5],\n            [18, -2],\n            [1, -15]\n        ],\n        [\n            [2861, 6628],\n            [-5, -42],\n            [-5, 8],\n            [0, 31],\n            [-12, 23],\n            [0, 7],\n            [22, -27]\n        ],\n        [\n            [5527, 7708],\n            [10, 0],\n            [-7, -26],\n            [14, -23],\n            [-4, -28],\n            [-7, -2]\n        ],\n        [\n            [5533, 7629],\n            [-5, -6],\n            [-9, -13],\n            [-4, -33]\n        ],\n        [\n            [5515, 7577],\n            [-25, 23],\n            [-10, 24],\n            [-11, 13],\n            [-12, 22],\n            [-6, 19],\n            [-14, 27],\n            [6, 25],\n            [10, -14],\n            [6, 12],\n            [13, 2],\n            [24, -10],\n            [19, 1],\n            [12, -13]\n        ],\n        [\n            [5652, 8242],\n            [27, 0],\n            [30, 22],\n            [6, 34],\n            [23, 19],\n            [-3, 26]\n        ],\n        [\n            [5735, 8343],\n            [17, 10],\n            [30, 23]\n        ],\n        [\n            [5782, 8376],\n            [29, -15],\n            [4, -15],\n            [15, 7],\n            [27, -14],\n            [3, -27],\n            [-6, -16],\n            [17, -39],\n            [12, -11],\n            [-2, -11],\n            [19, -10],\n            [8, -16],\n            [-11, -13],\n            [-23, 2],\n            [-5, -5],\n            [7, -20],\n            [6, -37]\n        ],\n        [\n            [5882, 8136],\n            [-23, -4],\n            [-9, -13],\n            [-2, -30],\n            [-11, 6],\n            [-25, -3],\n            [-7, 14],\n            [-11, -10],\n            [-10, 8],\n            [-22, 1],\n            [-31, 15],\n            [-28, 4],\n            [-22, -1],\n            [-15, -16],\n            [-13, -2]\n        ],\n        [\n            [5653, 8105],\n            [-1, 26],\n            [-8, 27],\n            [17, 12],\n            [0, 24],\n            [-8, 22],\n            [-1, 26]\n        ],\n        [\n            [2524, 6110],\n            [-1, 8],\n            [4, 3],\n            [5, -7],\n            [10, 36],\n            [5, 0]\n        ],\n        [\n            [2547, 6150],\n            [0, -8],\n            [5, -1],\n            [0, -16],\n            [-5, -25],\n            [3, -9],\n            [-3, -21],\n            [2, -6],\n            [-4, -30],\n            [-5, -16],\n            [-5, -1],\n            [-6, -21]\n        ],\n        [\n            [2529, 5996],\n            [-8, 0],\n            [2, 67],\n            [1, 47]\n        ],\n        [\n            [3136, 3714],\n            [-20, -8],\n            [-11, 82],\n            [-15, 66],\n            [9, 57],\n            [-15, 25],\n            [-4, 43],\n            [-13, 40]\n        ],\n        [\n            [3067, 4019],\n            [17, 64],\n            [-12, 49],\n            [7, 20],\n            [-5, 22],\n            [10, 30],\n            [1, 50],\n            [1, 41],\n            [6, 20],\n            [-24, 96]\n        ],\n        [\n            [3068, 4411],\n            [21, -5],\n            [14, 1],\n            [6, 18],\n            [25, 24],\n            [14, 22],\n            [37, 10],\n            [-3, -44],\n            [3, -23],\n            [-2, -40],\n            [30, -53],\n            [31, -9],\n            [11, -23],\n            [19, -11],\n            [11, -17],\n            [18, 0],\n            [16, -17],\n            [1, -34],\n            [6, -18],\n            [0, -25],\n            [-8, -1],\n            [11, -69],\n            [53, -2],\n            [-4, -35],\n            [3, -23],\n            [15, -16],\n            [6, -37],\n            [-4, -47],\n            [-8, -26],\n            [3, -33],\n            [-9, -12]\n        ],\n        [\n            [3384, 3866],\n            [-1, 18],\n            [-25, 30],\n            [-26, 1],\n            [-49, -17],\n            [-13, -52],\n            [-1, -32],\n            [-11, -71]\n        ],\n        [\n            [3482, 3537],\n            [6, 34],\n            [3, 35],\n            [1, 32],\n            [-10, 11],\n            [-11, -9],\n            [-10, 2],\n            [-4, 23],\n            [-2, 54],\n            [-5, 18],\n            [-19, 16],\n            [-11, -12],\n            [-30, 11],\n            [2, 81],\n            [-8, 33]\n        ],\n        [\n            [3068, 4411],\n            [-15, -11],\n            [-13, 7],\n            [2, 90],\n            [-23, -35],\n            [-24, 2],\n            [-11, 31],\n            [-18, 4],\n            [5, 25],\n            [-15, 36],\n            [-11, 53],\n            [7, 11],\n            [0, 25],\n            [17, 17],\n            [-3, 32],\n            [7, 20],\n            [2, 28],\n            [32, 40],\n            [22, 11],\n            [4, 9],\n            [25, -2]\n        ],\n        [\n            [3058, 4804],\n            [13, 162],\n            [0, 25],\n            [-4, 34],\n            [-12, 22],\n            [0, 42],\n            [15, 10],\n            [6, -6],\n            [1, 23],\n            [-16, 6],\n            [-1, 37],\n            [54, -2],\n            [10, 21],\n            [7, -19],\n            [6, -35],\n            [5, 8]\n        ],\n        [\n            [3142, 5132],\n            [15, -32],\n            [22, 4],\n            [5, 18],\n            [21, 14],\n            [11, 10],\n            [4, 25],\n            [19, 17],\n            [-1, 12],\n            [-24, 5],\n            [-3, 37],\n            [1, 40],\n            [-13, 15],\n            [5, 6],\n            [21, -8],\n            [22, -15],\n            [8, 14],\n            [20, 9],\n            [31, 23],\n            [10, 22],\n            [-3, 17]\n        ],\n        [\n            [3313, 5365],\n            [14, 2],\n            [7, -13],\n            [-4, -26],\n            [9, -9],\n            [7, -28],\n            [-8, -20],\n            [-4, -51],\n            [7, -30],\n            [2, -27],\n            [17, -28],\n            [14, -3],\n            [3, 12],\n            [8, 3],\n            [13, 10],\n            [9, 16],\n            [15, -5],\n            [7, 2]\n        ],\n        [\n            [3429, 5170],\n            [15, -5],\n            [3, 12],\n            [-5, 12],\n            [3, 17],\n            [11, -5],\n            [13, 6],\n            [16, -13]\n        ],\n        [\n            [3485, 5194],\n            [12, -12],\n            [9, 16],\n            [6, -3],\n            [4, -16],\n            [13, 4],\n            [11, 22],\n            [8, 44],\n            [17, 54]\n        ],\n        [\n            [3565, 5303],\n            [9, 3],\n            [7, -33],\n            [16, -103],\n            [14, -10],\n            [1, -41],\n            [-21, -48],\n            [9, -18],\n            [49, -9],\n            [1, -60],\n            [21, 39],\n            [35, -21],\n            [46, -36],\n            [14, -35],\n            [-5, -32],\n            [33, 18],\n            [54, -32],\n            [41, 3],\n            [41, -49],\n            [36, -66],\n            [21, -17],\n            [24, -3],\n            [10, -18],\n            [9, -76],\n            [5, -35],\n            [-11, -98],\n            [-14, -39],\n            [-39, -82],\n            [-18, -67],\n            [-21, -51],\n            [-7, -1],\n            [-7, -43],\n            [2, -111],\n            [-8, -91],\n            [-3, -39],\n            [-9, -23],\n            [-5, -79],\n            [-28, -77],\n            [-5, -61],\n            [-22, -26],\n            [-7, -35],\n            [-30, 0],\n            [-44, -23],\n            [-19, -26],\n            [-31, -18],\n            [-33, -47],\n            [-23, -58],\n            [-5, -44],\n            [5, -33],\n            [-5, -60],\n            [-6, -28],\n            [-20, -33],\n            [-31, -104],\n            [-24, -47],\n            [-19, -27],\n            [-13, -57],\n            [-18, -33]\n        ],\n        [\n            [3517, 3063],\n            [-8, 33],\n            [13, 28],\n            [-16, 40],\n            [-22, 33],\n            [-29, 38],\n            [-10, -2],\n            [-28, 46],\n            [-18, -7]\n        ],\n        [\n            [8172, 5325],\n            [11, 22],\n            [23, 32]\n        ],\n        [\n            [8206, 5379],\n            [-1, -29],\n            [-2, -37],\n            [-13, 1],\n            [-6, -20],\n            [-12, 31]\n        ],\n        [\n            [7546, 6698],\n            [12, -19],\n            [-2, -36],\n            [-23, -2],\n            [-23, 4],\n            [-18, -9],\n            [-25, 22],\n            [-1, 12]\n        ],\n        [\n            [7466, 6670],\n            [19, 44],\n            [15, 15],\n            [20, -14],\n            [14, -1],\n            [12, -16]\n        ],\n        [\n            [5817, 3752],\n            [-39, -43],\n            [-25, -44],\n            [-10, -40],\n            [-8, -22],\n            [-15, -4],\n            [-5, -29],\n            [-3, -18],\n            [-17, -14],\n            [-23, 3],\n            [-13, 17],\n            [-12, 7],\n            [-14, -14],\n            [-6, -28],\n            [-14, -18],\n            [-13, -26],\n            [-20, -6],\n            [-6, 20],\n            [2, 36],\n            [-16, 56],\n            [-8, 9]\n        ],\n        [\n            [5552, 3594],\n            [0, 173],\n            [27, 2],\n            [1, 210],\n            [21, 2],\n            [43, 21],\n            [10, -24],\n            [18, 23],\n            [9, 0],\n            [15, 13]\n        ],\n        [\n            [5696, 4014],\n            [5, -4]\n        ],\n        [\n            [5701, 4010],\n            [11, -48],\n            [5, -10],\n            [9, -34],\n            [32, -65],\n            [12, -7],\n            [0, -20],\n            [8, -38],\n            [21, -9],\n            [18, -27]\n        ],\n        [\n            [5424, 5496],\n            [23, 4],\n            [5, 16],\n            [5, -2],\n            [7, -13],\n            [34, 23],\n            [12, 23],\n            [15, 20],\n            [-3, 21],\n            [8, 6],\n            [27, -4],\n            [26, 27],\n            [20, 65],\n            [14, 24],\n            [18, 10]\n        ],\n        [\n            [5635, 5716],\n            [3, -26],\n            [16, -36],\n            [0, -25],\n            [-5, -24],\n            [2, -18],\n            [10, -18]\n        ],\n        [\n            [5661, 5569],\n            [21, -25]\n        ],\n        [\n            [5682, 5544],\n            [15, -24],\n            [0, -19],\n            [19, -31],\n            [12, -26],\n            [7, -35],\n            [20, -24],\n            [5, -18]\n        ],\n        [\n            [5760, 5367],\n            [-9, -7],\n            [-18, 2],\n            [-21, 6],\n            [-10, -5],\n            [-5, -14],\n            [-9, -2],\n            [-10, 12],\n            [-31, -29],\n            [-13, 6],\n            [-4, -5],\n            [-8, -35],\n            [-21, 11],\n            [-20, 6],\n            [-18, 22],\n            [-23, 20],\n            [-15, -19],\n            [-10, -30],\n            [-3, -41]\n        ],\n        [\n            [5512, 5265],\n            [-18, 3],\n            [-19, 10],\n            [-16, -32],\n            [-15, -55]\n        ],\n        [\n            [5444, 5191],\n            [-3, 18],\n            [-1, 27],\n            [-13, 19],\n            [-10, 30],\n            [-2, 21],\n            [-13, 31],\n            [2, 18],\n            [-3, 25],\n            [2, 45],\n            [7, 11],\n            [14, 60]\n        ],\n        [\n            [3231, 7808],\n            [20, -8],\n            [26, 1],\n            [-14, -24],\n            [-10, -4],\n            [-35, 25],\n            [-7, 20],\n            [10, 18],\n            [10, -28]\n        ],\n        [\n            [3283, 7958],\n            [-14, -1],\n            [-36, 19],\n            [-26, 28],\n            [10, 5],\n            [37, -15],\n            [28, -25],\n            [1, -11]\n        ],\n        [\n            [1569, 7923],\n            [-14, -8],\n            [-46, 27],\n            [-8, 21],\n            [-25, 21],\n            [-5, 16],\n            [-28, 11],\n            [-11, 32],\n            [2, 14],\n            [30, -13],\n            [17, -9],\n            [26, -6],\n            [9, -21],\n            [14, -28],\n            [28, -24],\n            [11, -33]\n        ],\n        [\n            [3440, 8052],\n            [-18, -52],\n            [18, 20],\n            [19, -12],\n            [-10, -21],\n            [25, -16],\n            [12, 14],\n            [28, -18],\n            [-8, -43],\n            [19, 10],\n            [4, -32],\n            [8, -36],\n            [-11, -52],\n            [-13, -2],\n            [-18, 11],\n            [6, 48],\n            [-8, 8],\n            [-32, -52],\n            [-17, 2],\n            [20, 28],\n            [-27, 14],\n            [-30, -3],\n            [-54, 2],\n            [-4, 17],\n            [17, 21],\n            [-12, 16],\n            [24, 36],\n            [28, 94],\n            [18, 33],\n            [24, 21],\n            [13, -3],\n            [-6, -16],\n            [-15, -37]\n        ],\n        [\n            [1313, 8250],\n            [27, 5],\n            [-8, -67],\n            [24, -48],\n            [-11, 0],\n            [-17, 27],\n            [-10, 27],\n            [-14, 19],\n            [-5, 26],\n            [1, 19],\n            [13, -8]\n        ],\n        [\n            [2798, 8730],\n            [-11, -31],\n            [-12, 5],\n            [-8, 17],\n            [2, 4],\n            [10, 18],\n            [12, -1],\n            [7, -12]\n        ],\n        [\n            [2725, 8762],\n            [-33, -32],\n            [-19, 1],\n            [-6, 16],\n            [20, 27],\n            [38, 0],\n            [0, -12]\n        ],\n        [\n            [2634, 8936],\n            [5, -26],\n            [15, 9],\n            [16, -15],\n            [30, -20],\n            [32, -19],\n            [2, -28],\n            [21, 5],\n            [20, -20],\n            [-25, -18],\n            [-43, 14],\n            [-16, 26],\n            [-27, -31],\n            [-40, -31],\n            [-9, 35],\n            [-38, -6],\n            [24, 30],\n            [4, 46],\n            [9, 54],\n            [20, -5]\n        ],\n        [\n            [2892, 9024],\n            [-31, -3],\n            [-7, 29],\n            [12, 34],\n            [26, 8],\n            [21, -17],\n            [1, -25],\n            [-4, -8],\n            [-18, -18]\n        ],\n        [\n            [2343, 9140],\n            [-17, -21],\n            [-38, 18],\n            [-22, -6],\n            [-38, 26],\n            [24, 19],\n            [19, 25],\n            [30, -16],\n            [17, -11],\n            [8, -11],\n            [17, -23]\n        ],\n        [\n            [3135, 7724],\n            [-18, 33],\n            [0, 81],\n            [-13, 17],\n            [-18, -10],\n            [-10, 16],\n            [-21, -45],\n            [-8, -46],\n            [-10, -27],\n            [-12, -9],\n            [-9, -3],\n            [-3, -15],\n            [-51, 0],\n            [-42, 0],\n            [-12, -11],\n            [-30, -42],\n            [-3, -5],\n            [-9, -23],\n            [-26, 0],\n            [-27, 0],\n            [-12, -10],\n            [4, -11],\n            [2, -18],\n            [0, -6],\n            [-36, -30],\n            [-29, -9],\n            [-32, -31],\n            [-7, 0],\n            [-10, 9],\n            [-3, 8],\n            [1, 6],\n            [6, 21],\n            [13, 33],\n            [8, 35],\n            [-5, 51],\n            [-6, 53],\n            [-29, 28],\n            [3, 11],\n            [-4, 7],\n            [-8, 0],\n            [-5, 9],\n            [-2, 14],\n            [-5, -6],\n            [-7, 2],\n            [1, 6],\n            [-6, 6],\n            [-3, 15],\n            [-21, 19],\n            [-23, 20],\n            [-27, 23],\n            [-26, 21],\n            [-25, -17],\n            [-9, 0],\n            [-34, 15],\n            [-23, -8],\n            [-27, 19],\n            [-28, 9],\n            [-19, 4],\n            [-9, 10],\n            [-5, 32],\n            [-9, 0],\n            [-1, -23],\n            [-57, 0],\n            [-95, 0],\n            [-94, 0],\n            [-84, 0],\n            [-83, 0],\n            [-82, 0],\n            [-85, 0],\n            [-27, 0],\n            [-82, 0],\n            [-79, 0]\n        ],\n        [\n            [1588, 7952],\n            [-4, 0],\n            [-54, 58],\n            [-20, 26],\n            [-50, 24],\n            [-15, 53],\n            [3, 36],\n            [-35, 25],\n            [-5, 48],\n            [-34, 43],\n            [0, 30]\n        ],\n        [\n            [1374, 8295],\n            [15, 29],\n            [0, 37],\n            [-48, 37],\n            [-28, 68],\n            [-17, 42],\n            [-26, 27],\n            [-19, 24],\n            [-14, 31],\n            [-28, -20],\n            [-27, -33],\n            [-25, 39],\n            [-19, 26],\n            [-27, 16],\n            [-28, 2],\n            [0, 337],\n            [1, 219]\n        ],\n        [\n            [1084, 9176],\n            [51, -14],\n            [44, -29],\n            [29, -5],\n            [24, 24],\n            [34, 19],\n            [41, -7],\n            [42, 26],\n            [45, 14],\n            [20, -24],\n            [20, 14],\n            [6, 27],\n            [20, -6],\n            [47, -53],\n            [37, 40],\n            [3, -45],\n            [34, 10],\n            [11, 17],\n            [34, -3],\n            [42, -25],\n            [65, -22],\n            [38, -10],\n            [28, 4],\n            [37, -30],\n            [-39, -29],\n            [50, -13],\n            [75, 7],\n            [24, 11],\n            [29, -36],\n            [31, 30],\n            [-29, 25],\n            [18, 20],\n            [34, 3],\n            [22, 6],\n            [23, -14],\n            [28, -32],\n            [31, 5],\n            [49, -27],\n            [43, 9],\n            [40, -1],\n            [-3, 37],\n            [25, 10],\n            [43, -20],\n            [0, -56],\n            [17, 47],\n            [23, -1],\n            [12, 59],\n            [-30, 36],\n            [-32, 24],\n            [2, 65],\n            [33, 43],\n            [37, -9],\n            [28, -26],\n            [38, -67],\n            [-25, -29],\n            [52, -12],\n            [-1, -60],\n            [38, 46],\n            [33, -38],\n            [-9, -44],\n            [27, -40],\n            [29, 43],\n            [21, 51],\n            [1, 65],\n            [40, -5],\n            [41, -8],\n            [37, -30],\n            [2, -29],\n            [-21, -31],\n            [20, -32],\n            [-4, -29],\n            [-54, -41],\n            [-39, -9],\n            [-29, 18],\n            [-8, -30],\n            [-27, -50],\n            [-8, -26],\n            [-32, -40],\n            [-40, -4],\n            [-22, -25],\n            [-2, -38],\n            [-32, -7],\n            [-34, -48],\n            [-30, -67],\n            [-11, -46],\n            [-1, -69],\n            [40, -10],\n            [13, -55],\n            [13, -45],\n            [39, 12],\n            [51, -26],\n            [28, -22],\n            [20, -28],\n            [35, -17],\n            [29, -24],\n            [46, -4],\n            [30, -6],\n            [-4, -51],\n            [8, -59],\n            [21, -66],\n            [41, -56],\n            [21, 19],\n            [15, 61],\n            [-14, 93],\n            [-20, 31],\n            [45, 28],\n            [31, 41],\n            [16, 41],\n            [-3, 40],\n            [-19, 50],\n            [-33, 44],\n            [32, 62],\n            [-12, 54],\n            [-9, 92],\n            [19, 14],\n            [48, -16],\n            [29, -6],\n            [23, 15],\n            [25, -20],\n            [35, -34],\n            [8, -23],\n            [50, -4],\n            [-1, -50],\n            [9, -74],\n            [25, -10],\n            [21, -35],\n            [40, 33],\n            [26, 65],\n            [19, 28],\n            [21, -53],\n            [36, -75],\n            [31, -71],\n            [-11, -37],\n            [37, -33],\n            [25, -34],\n            [44, -15],\n            [18, -19],\n            [11, -50],\n            [22, -8],\n            [11, -22],\n            [2, -67],\n            [-20, -22],\n            [-20, -21],\n            [-46, -21],\n            [-35, -48],\n            [-47, -10],\n            [-59, 13],\n            [-42, 0],\n            [-29, -4],\n            [-23, -43],\n            [-35, -26],\n            [-40, -78],\n            [-32, -54],\n            [23, 9],\n            [45, 78],\n            [58, 49],\n            [42, 6],\n            [24, -29],\n            [-26, -40],\n            [9, -63],\n            [9, -45],\n            [36, -29],\n            [46, 8],\n            [28, 67],\n            [2, -43],\n            [17, -22],\n            [-34, -38],\n            [-61, -36],\n            [-28, -23],\n            [-31, -43],\n            [-21, 4],\n            [-1, 50],\n            [48, 49],\n            [-44, -2],\n            [-31, -7]\n        ],\n        [\n            [1829, 9377],\n            [-14, -27],\n            [61, 17],\n            [39, -29],\n            [31, 30],\n            [26, -20],\n            [23, -58],\n            [14, 25],\n            [-20, 60],\n            [24, 9],\n            [28, -9],\n            [31, -24],\n            [17, -58],\n            [9, -41],\n            [47, -30],\n            [50, -28],\n            [-3, -26],\n            [-46, -4],\n            [18, -23],\n            [-9, -22],\n            [-51, 9],\n            [-48, 16],\n            [-32, -3],\n            [-52, -20],\n            [-70, -9],\n            [-50, -6],\n            [-15, 28],\n            [-38, 16],\n            [-24, -6],\n            [-35, 47],\n            [19, 6],\n            [43, 10],\n            [39, -3],\n            [36, 11],\n            [-54, 13],\n            [-59, -4],\n            [-39, 1],\n            [-15, 22],\n            [64, 23],\n            [-42, -1],\n            [-49, 16],\n            [23, 44],\n            [20, 24],\n            [74, 36],\n            [29, -12]\n        ],\n        [\n            [2097, 9395],\n            [-24, -39],\n            [-44, 41],\n            [10, 9],\n            [37, 2],\n            [21, -13]\n        ],\n        [\n            [2879, 9376],\n            [3, -16],\n            [-30, 2],\n            [-30, 1],\n            [-30, -8],\n            [-8, 3],\n            [-31, 32],\n            [1, 21],\n            [14, 4],\n            [63, -6],\n            [48, -33]\n        ],\n        [\n            [2595, 9379],\n            [22, -36],\n            [26, 47],\n            [70, 24],\n            [48, -61],\n            [-4, -38],\n            [55, 17],\n            [26, 23],\n            [62, -30],\n            [38, -28],\n            [3, -25],\n            [52, 13],\n            [29, -38],\n            [67, -23],\n            [24, -24],\n            [26, -55],\n            [-51, -28],\n            [66, -38],\n            [44, -13],\n            [40, -55],\n            [44, -3],\n            [-9, -42],\n            [-49, -69],\n            [-34, 26],\n            [-44, 57],\n            [-36, -8],\n            [-3, -34],\n            [29, -34],\n            [38, -27],\n            [11, -16],\n            [18, -58],\n            [-9, -43],\n            [-35, 16],\n            [-70, 47],\n            [39, -51],\n            [29, -35],\n            [5, -21],\n            [-76, 24],\n            [-59, 34],\n            [-34, 29],\n            [10, 17],\n            [-42, 30],\n            [-40, 29],\n            [0, -18],\n            [-80, -9],\n            [-23, 20],\n            [18, 44],\n            [52, 1],\n            [57, 7],\n            [-9, 21],\n            [10, 30],\n            [36, 57],\n            [-8, 27],\n            [-11, 20],\n            [-42, 29],\n            [-57, 20],\n            [18, 15],\n            [-29, 36],\n            [-25, 4],\n            [-22, 20],\n            [-14, -18],\n            [-51, -7],\n            [-101, 13],\n            [-59, 17],\n            [-45, 9],\n            [-23, 21],\n            [29, 27],\n            [-39, 0],\n            [-9, 60],\n            [21, 53],\n            [29, 24],\n            [72, 16],\n            [-21, -39]\n        ],\n        [\n            [2212, 9420],\n            [33, -12],\n            [50, 7],\n            [7, -17],\n            [-26, -28],\n            [42, -26],\n            [-5, -53],\n            [-45, -23],\n            [-27, 5],\n            [-19, 23],\n            [-69, 45],\n            [0, 19],\n            [57, -7],\n            [-31, 38],\n            [33, 29]\n        ],\n        [\n            [2411, 9357],\n            [-30, -45],\n            [-32, 3],\n            [-17, 52],\n            [1, 29],\n            [14, 25],\n            [28, 16],\n            [58, -2],\n            [53, -14],\n            [-42, -53],\n            [-33, -11]\n        ],\n        [\n            [1654, 9275],\n            [-73, -29],\n            [-15, 26],\n            [-64, 31],\n            [12, 25],\n            [19, 43],\n            [24, 39],\n            [-27, 36],\n            [94, 10],\n            [39, -13],\n            [71, -3],\n            [27, -17],\n            [30, -25],\n            [-35, -15],\n            [-68, -41],\n            [-34, -42],\n            [0, -25]\n        ],\n        [\n            [2399, 9487],\n            [-15, -23],\n            [-40, 5],\n            [-34, 15],\n            [15, 27],\n            [40, 16],\n            [24, -21],\n            [10, -19]\n        ],\n        [\n            [2264, 9590],\n            [21, -27],\n            [1, -31],\n            [-13, -44],\n            [-46, -6],\n            [-30, 10],\n            [1, 34],\n            [-45, -4],\n            [-2, 45],\n            [30, -2],\n            [41, 21],\n            [40, -4],\n            [2, 8]\n        ],\n        [\n            [1994, 9559],\n            [11, -21],\n            [25, 10],\n            [29, -2],\n            [5, -29],\n            [-17, -28],\n            [-94, -10],\n            [-70, -25],\n            [-43, -2],\n            [-3, 20],\n            [57, 26],\n            [-125, -7],\n            [-39, 10],\n            [38, 58],\n            [26, 17],\n            [78, -20],\n            [50, -35],\n            [48, -5],\n            [-40, 57],\n            [26, 21],\n            [29, -7],\n            [9, -28]\n        ],\n        [\n            [2370, 9612],\n            [30, -19],\n            [55, 0],\n            [24, -19],\n            [-6, -22],\n            [32, -14],\n            [17, -14],\n            [38, -2],\n            [40, -5],\n            [44, 13],\n            [57, 5],\n            [45, -5],\n            [30, -22],\n            [6, -24],\n            [-17, -16],\n            [-42, -13],\n            [-35, 8],\n            [-80, -10],\n            [-57, -1],\n            [-45, 8],\n            [-74, 19],\n            [-9, 32],\n            [-4, 29],\n            [-27, 26],\n            [-58, 7],\n            [-32, 19],\n            [10, 24],\n            [58, -4]\n        ],\n        [\n            [1772, 9645],\n            [-4, -46],\n            [-21, -20],\n            [-26, -3],\n            [-52, -26],\n            [-44, -9],\n            [-38, 13],\n            [47, 44],\n            [57, 39],\n            [43, -1],\n            [38, 9]\n        ],\n        [\n            [2393, 9637],\n            [-13, -2],\n            [-52, 4],\n            [-7, 17],\n            [56, -1],\n            [19, -11],\n            [-3, -7]\n        ],\n        [\n            [1939, 9648],\n            [-52, -17],\n            [-41, 19],\n            [23, 19],\n            [40, 6],\n            [39, -10],\n            [-9, -17]\n        ],\n        [\n            [1954, 9701],\n            [-34, -11],\n            [-46, 0],\n            [0, 8],\n            [29, 18],\n            [14, -3],\n            [37, -12]\n        ],\n        [\n            [2338, 9669],\n            [-41, -12],\n            [-23, 13],\n            [-12, 23],\n            [-2, 24],\n            [36, -2],\n            [16, -4],\n            [33, -21],\n            [-7, -21]\n        ],\n        [\n            [2220, 9685],\n            [11, -25],\n            [-45, 7],\n            [-46, 19],\n            [-62, 2],\n            [27, 18],\n            [-34, 14],\n            [-2, 22],\n            [55, -8],\n            [75, -21],\n            [21, -28]\n        ],\n        [\n            [2583, 9764],\n            [33, -20],\n            [-38, -17],\n            [-51, -45],\n            [-50, -4],\n            [-57, 8],\n            [-30, 24],\n            [0, 21],\n            [22, 16],\n            [-50, 0],\n            [-31, 19],\n            [-18, 27],\n            [20, 26],\n            [19, 18],\n            [28, 4],\n            [-12, 14],\n            [65, 3],\n            [35, -32],\n            [47, -12],\n            [46, -11],\n            [22, -39]\n        ],\n        [\n            [3097, 9967],\n            [74, -4],\n            [60, -8],\n            [51, -16],\n            [-2, -16],\n            [-67, -25],\n            [-68, -12],\n            [-25, -14],\n            [61, 1],\n            [-66, -36],\n            [-45, -17],\n            [-48, -48],\n            [-57, -10],\n            [-18, -12],\n            [-84, -6],\n            [39, -8],\n            [-20, -10],\n            [23, -29],\n            [-26, -21],\n            [-43, -16],\n            [-13, -24],\n            [-39, -17],\n            [4, -14],\n            [48, 3],\n            [0, -15],\n            [-74, -35],\n            [-73, 16],\n            [-81, -9],\n            [-42, 7],\n            [-52, 3],\n            [-4, 29],\n            [52, 13],\n            [-14, 43],\n            [17, 4],\n            [74, -26],\n            [-38, 38],\n            [-45, 11],\n            [23, 23],\n            [49, 14],\n            [8, 21],\n            [-39, 23],\n            [-12, 31],\n            [76, -3],\n            [22, -6],\n            [43, 21],\n            [-62, 7],\n            [-98, -4],\n            [-49, 20],\n            [-23, 24],\n            [-32, 17],\n            [-6, 21],\n            [41, 11],\n            [32, 2],\n            [55, 9],\n            [41, 22],\n            [34, -3],\n            [30, -16],\n            [21, 32],\n            [37, 9],\n            [50, 7],\n            [85, 2],\n            [14, -6],\n            [81, 10],\n            [60, -4],\n            [60, -4]\n        ],\n        [\n            [5290, 7828],\n            [-3, -24],\n            [-12, -10],\n            [-20, 7],\n            [-6, -24],\n            [-14, -2],\n            [-5, 10],\n            [-15, -20],\n            [-13, -3],\n            [-12, 13]\n        ],\n        [\n            [5190, 7775],\n            [-10, 25],\n            [-13, -9],\n            [0, 27],\n            [21, 33],\n            [-1, 15],\n            [12, -5],\n            [8, 10]\n        ],\n        [\n            [5207, 7871],\n            [24, -1],\n            [5, 13],\n            [30, -18]\n        ],\n        [\n            [3140, 1814],\n            [-10, -24],\n            [-23, -18],\n            [-14, 2],\n            [-16, 5],\n            [-21, 18],\n            [-29, 8],\n            [-35, 33],\n            [-28, 32],\n            [-38, 66],\n            [23, -12],\n            [39, -40],\n            [36, -21],\n            [15, 27],\n            [9, 41],\n            [25, 24],\n            [20, -7]\n        ],\n        [\n            [3095, 1968],\n            [-25, 0],\n            [-13, -14],\n            [-25, -22],\n            [-5, -55],\n            [-11, -1],\n            [-32, 19],\n            [-32, 41],\n            [-34, 34],\n            [-9, 37],\n            [8, 35],\n            [-14, 39],\n            [-4, 101],\n            [12, 57],\n            [30, 45],\n            [-43, 18],\n            [27, 52],\n            [9, 98],\n            [31, -21],\n            [15, 123],\n            [-19, 15],\n            [-9, -73],\n            [-17, 8],\n            [9, 84],\n            [9, 110],\n            [13, 40],\n            [-8, 58],\n            [-2, 66],\n            [11, 2],\n            [17, 96],\n            [20, 94],\n            [11, 88],\n            [-6, 89],\n            [8, 49],\n            [-3, 72],\n            [16, 73],\n            [5, 114],\n            [9, 123],\n            [9, 132],\n            [-2, 96],\n            [-6, 84]\n        ],\n        [\n            [3045, 3974],\n            [14, 15],\n            [8, 30]\n        ],\n        [\n            [8064, 6161],\n            [-24, -28],\n            [-23, 18],\n            [0, 51],\n            [13, 26],\n            [31, 17],\n            [16, -1],\n            [6, -23],\n            [-12, -26],\n            [-7, -34]\n        ],\n        [\n            [8628, 7562],\n            [-18, 35],\n            [-11, -33],\n            [-43, -26],\n            [4, -31],\n            [-24, 2],\n            [-13, 19],\n            [-19, -42],\n            [-30, -32],\n            [-23, -38]\n        ],\n        [\n            [8451, 7416],\n            [-39, -17],\n            [-20, -27],\n            [-30, -17],\n            [15, 28],\n            [-6, 23],\n            [22, 40],\n            [-15, 30],\n            [-24, -20],\n            [-32, -41],\n            [-17, -39],\n            [-27, -2],\n            [-14, -28],\n            [15, -40],\n            [22, -10],\n            [1, -26],\n            [22, -17],\n            [31, 42],\n            [25, -23],\n            [18, -2],\n            [4, -31],\n            [-39, -16],\n            [-13, -32],\n            [-27, -30],\n            [-14, -41],\n            [30, -33],\n            [11, -58],\n            [17, -54],\n            [18, -45],\n            [0, -44],\n            [-17, -16],\n            [6, -32],\n            [17, -18],\n            [-5, -48],\n            [-7, -47],\n            [-15, -5],\n            [-21, -64],\n            [-22, -78],\n            [-26, -70],\n            [-38, -55],\n            [-39, -50],\n            [-31, -6],\n            [-17, -27],\n            [-10, 20],\n            [-15, -30],\n            [-39, -29],\n            [-29, -9],\n            [-10, -63],\n            [-15, -3],\n            [-8, 43],\n            [7, 22],\n            [-37, 19],\n            [-13, -9]\n        ],\n        [\n            [8001, 6331],\n            [-28, 15],\n            [-14, 24],\n            [5, 34],\n            [-26, 11],\n            [-13, 22],\n            [-24, -31],\n            [-27, -7],\n            [-22, 0],\n            [-15, -14]\n        ],\n        [\n            [7837, 6385],\n            [-14, -9],\n            [4, -68],\n            [-15, 2],\n            [-2, 14]\n        ],\n        [\n            [7810, 6324],\n            [-1, 24],\n            [-20, -17],\n            [-12, 11],\n            [-21, 22],\n            [8, 49],\n            [-18, 12],\n            [-6, 54],\n            [-30, -10],\n            [4, 70],\n            [26, 50],\n            [1, 48],\n            [-1, 46],\n            [-12, 14],\n            [-9, 35],\n            [-16, -5]\n        ],\n        [\n            [7703, 6727],\n            [-30, 9],\n            [9, 25],\n            [-13, 36],\n            [-20, -24],\n            [-23, 14],\n            [-32, -37],\n            [-25, -44],\n            [-23, -8]\n        ],\n        [\n            [7466, 6670],\n            [-2, 47],\n            [-17, -13]\n        ],\n        [\n            [7447, 6704],\n            [-32, 6],\n            [-32, 14],\n            [-22, 26],\n            [-22, 11],\n            [-9, 29],\n            [-16, 8],\n            [-28, 39],\n            [-22, 18],\n            [-12, -14]\n        ],\n        [\n            [7252, 6841],\n            [-38, 41],\n            [-28, 37],\n            [-7, 65],\n            [20, -7],\n            [1, 30],\n            [-12, 30],\n            [3, 48],\n            [-30, 69]\n        ],\n        [\n            [7161, 7154],\n            [-45, 24],\n            [-8, 46],\n            [-21, 27]\n        ],\n        [\n            [7082, 7268],\n            [-4, 34],\n            [1, 23],\n            [-17, 13],\n            [-9, -6],\n            [-7, 55]\n        ],\n        [\n            [7046, 7387],\n            [8, 13],\n            [-4, 14],\n            [26, 28],\n            [20, 12],\n            [29, -8],\n            [11, 38],\n            [35, 7],\n            [10, 23],\n            [44, 32],\n            [4, 13]\n        ],\n        [\n            [7229, 7559],\n            [-2, 34],\n            [19, 15],\n            [-25, 103],\n            [55, 24],\n            [14, 13],\n            [20, 106],\n            [55, -20],\n            [15, 27],\n            [2, 59],\n            [23, 6],\n            [21, 39]\n        ],\n        [\n            [7426, 7965],\n            [11, 5]\n        ],\n        [\n            [7437, 7970],\n            [7, -41],\n            [23, -32],\n            [40, -22],\n            [19, -47],\n            [-10, -70],\n            [10, -25],\n            [33, -10],\n            [37, -8],\n            [33, -37],\n            [18, -7],\n            [12, -54],\n            [17, -35],\n            [30, 1],\n            [58, -13],\n            [36, 8],\n            [28, -9],\n            [41, -36],\n            [34, 0],\n            [12, -18],\n            [32, 32],\n            [45, 20],\n            [42, 2],\n            [32, 21],\n            [20, 32],\n            [20, 20],\n            [-5, 19],\n            [-9, 23],\n            [15, 38],\n            [15, -5],\n            [29, -12],\n            [28, 31],\n            [42, 23],\n            [20, 39],\n            [20, 17],\n            [40, 8],\n            [22, -7],\n            [3, 21],\n            [-25, 41],\n            [-22, 19],\n            [-22, -22],\n            [-27, 10],\n            [-16, -8],\n            [-7, 24],\n            [20, 59],\n            [13, 45]\n        ],\n        [\n            [8240, 8005],\n            [34, -23],\n            [39, 38],\n            [-1, 26],\n            [26, 62],\n            [15, 19],\n            [0, 33],\n            [-16, 14],\n            [23, 29],\n            [35, 11],\n            [37, 2],\n            [41, -18],\n            [25, -22],\n            [17, -59],\n            [10, -26],\n            [10, -36],\n            [10, -58],\n            [49, -19],\n            [32, -42],\n            [12, -55],\n            [42, 0],\n            [24, 23],\n            [46, 17],\n            [-15, -53],\n            [-11, -21],\n            [-9, -65],\n            [-19, -58],\n            [-33, 11],\n            [-24, -21],\n            [7, -51],\n            [-4, -69],\n            [-14, -2],\n            [0, -30]\n        ],\n        [\n            [4920, 5353],\n            [-12, -1],\n            [-20, 12],\n            [-18, -1],\n            [-33, -10],\n            [-19, -18],\n            [-27, -21],\n            [-6, 1]\n        ],\n        [\n            [4785, 5315],\n            [2, 49],\n            [3, 7],\n            [-1, 24],\n            [-12, 24],\n            [-8, 4],\n            [-8, 17],\n            [6, 26],\n            [-3, 28],\n            [1, 18]\n        ],\n        [\n            [4765, 5512],\n            [5, 0],\n            [1, 25],\n            [-2, 12],\n            [3, 8],\n            [10, 7],\n            [-7, 47],\n            [-6, 25],\n            [2, 20],\n            [5, 4]\n        ],\n        [\n            [4776, 5660],\n            [4, 6],\n            [8, -9],\n            [21, -1],\n            [5, 18],\n            [5, -1],\n            [8, 6],\n            [4, -25],\n            [7, 7],\n            [11, 9]\n        ],\n        [\n            [4921, 5627],\n            [7, -84],\n            [-11, -50],\n            [-8, -66],\n            [12, -51],\n            [-1, -23]\n        ],\n        [\n            [5363, 5191],\n            [-4, 4],\n            [-16, -8],\n            [-17, 8],\n            [-13, -4]\n        ],\n        [\n            [5313, 5191],\n            [-45, 1]\n        ],\n        [\n            [5268, 5192],\n            [4, 47],\n            [-11, 39],\n            [-13, 10],\n            [-6, 27],\n            [-7, 8],\n            [1, 16]\n        ],\n        [\n            [5236, 5339],\n            [7, 42],\n            [13, 57],\n            [8, 1],\n            [17, 34],\n            [10, 1],\n            [16, -24],\n            [19, 20],\n            [2, 25],\n            [7, 23],\n            [4, 30],\n            [15, 25],\n            [5, 41],\n            [6, 13],\n            [4, 31],\n            [7, 37],\n            [24, 46],\n            [1, 20],\n            [3, 10],\n            [-11, 24]\n        ],\n        [\n            [5393, 5795],\n            [1, 19],\n            [8, 3]\n        ],\n        [\n            [5402, 5817],\n            [11, -38],\n            [2, -39],\n            [-1, -39],\n            [15, -54],\n            [-15, 1],\n            [-8, -4],\n            [-13, 6],\n            [-6, -28],\n            [16, -35],\n            [13, -10],\n            [3, -24],\n            [9, -41],\n            [-4, -16]\n        ],\n        [\n            [5444, 5191],\n            [-2, -31],\n            [-22, 14],\n            [-22, 15],\n            [-35, 2]\n        ],\n        [\n            [5856, 5265],\n            [-2, -69],\n            [11, -8],\n            [-9, -21],\n            [-10, -16],\n            [-11, -31],\n            [-6, -27],\n            [-1, -48],\n            [-7, -22],\n            [0, -45]\n        ],\n        [\n            [5821, 4978],\n            [-8, -16],\n            [-1, -35],\n            [-4, -5],\n            [-2, -32]\n        ],\n        [\n            [5814, 4792],\n            [5, -55],\n            [-2, -30],\n            [5, -35],\n            [16, -33],\n            [15, -74]\n        ],\n        [\n            [5853, 4565],\n            [-11, 6],\n            [-37, -10],\n            [-7, -7],\n            [-8, -38],\n            [6, -26],\n            [-5, -70],\n            [-3, -59],\n            [7, -11],\n            [19, -23],\n            [8, 11],\n            [2, -64],\n            [-21, 1],\n            [-11, 32],\n            [-10, 25],\n            [-22, 9],\n            [-6, 31],\n            [-17, -19],\n            [-22, 8],\n            [-10, 27],\n            [-17, 6],\n            [-13, -2],\n            [-2, 19],\n            [-9, 1]\n        ],\n        [\n            [5342, 4697],\n            [-4, 18]\n        ],\n        [\n            [5360, 4775],\n            [8, -6],\n            [9, 23],\n            [15, -1],\n            [2, -17],\n            [11, -10],\n            [16, 37],\n            [16, 29],\n            [7, 19],\n            [-1, 48],\n            [12, 58],\n            [13, 30],\n            [18, 29],\n            [3, 18],\n            [1, 22],\n            [5, 21],\n            [-2, 33],\n            [4, 52],\n            [5, 37],\n            [8, 32],\n            [2, 36]\n        ],\n        [\n            [5760, 5367],\n            [17, -49],\n            [12, -7],\n            [8, 10],\n            [12, -4],\n            [16, 12],\n            [6, -25],\n            [25, -39]\n        ],\n        [\n            [5330, 4760],\n            [-22, 62]\n        ],\n        [\n            [5308, 4822],\n            [21, 33],\n            [-11, 39],\n            [10, 15],\n            [19, 7],\n            [2, 26],\n            [15, -28],\n            [24, -2],\n            [9, 27],\n            [3, 40],\n            [-3, 46],\n            [-13, 35],\n            [12, 68],\n            [-7, 12],\n            [-21, -5],\n            [-7, 31],\n            [2, 25]\n        ],\n        [\n            [2906, 5049],\n            [-12, 14],\n            [-14, 19],\n            [-7, -9],\n            [-24, 8],\n            [-7, 25],\n            [-5, -1],\n            [-28, 34]\n        ],\n        [\n            [2809, 5139],\n            [-3, 18],\n            [10, 5],\n            [-1, 29],\n            [6, 22],\n            [14, 4],\n            [12, 37],\n            [10, 31],\n            [-10, 14],\n            [5, 34],\n            [-6, 54],\n            [6, 16],\n            [-4, 50],\n            [-12, 31]\n        ],\n        [\n            [2836, 5484],\n            [4, 29],\n            [9, -4],\n            [5, 17],\n            [-6, 35],\n            [3, 9]\n        ],\n        [\n            [2851, 5570],\n            [14, -2],\n            [21, 41],\n            [12, 6],\n            [0, 20],\n            [5, 50],\n            [16, 27],\n            [17, 1],\n            [3, 13],\n            [21, -5],\n            [22, 30],\n            [11, 13],\n            [14, 28],\n            [9, -3],\n            [8, -16],\n            [-6, -20]\n        ],\n        [\n            [3018, 5753],\n            [-18, -10],\n            [-7, -29],\n            [-10, -17],\n            [-8, -22],\n            [-4, -42],\n            [-8, -35],\n            [15, -4],\n            [3, -27],\n            [6, -13],\n            [3, -24],\n            [-4, -22],\n            [1, -12],\n            [7, -5],\n            [7, -20],\n            [36, 5],\n            [16, -7],\n            [19, -51],\n            [11, 6],\n            [20, -3],\n            [16, 7],\n            [10, -10],\n            [-5, -32],\n            [-6, -20],\n            [-2, -42],\n            [5, -40],\n            [8, -17],\n            [1, -13],\n            [-14, -30],\n            [10, -13],\n            [8, -21],\n            [8, -58]\n        ],\n        [\n            [3058, 4804],\n            [-14, 31],\n            [-8, 1],\n            [18, 61],\n            [-21, 27],\n            [-17, -5],\n            [-10, 10],\n            [-15, -15],\n            [-21, 7],\n            [-16, 62],\n            [-13, 15],\n            [-9, 28],\n            [-19, 28],\n            [-7, -5]\n        ],\n        [\n            [2695, 5543],\n            [-15, 14],\n            [-6, 12],\n            [4, 10],\n            [-1, 13],\n            [-8, 14],\n            [-11, 12],\n            [-10, 8],\n            [-1, 17],\n            [-8, 10],\n            [2, -17],\n            [-5, -14],\n            [-7, 17],\n            [-9, 5],\n            [-4, 12],\n            [1, 18],\n            [3, 19],\n            [-8, 8],\n            [7, 12]\n        ],\n        [\n            [2619, 5713],\n            [4, 7],\n            [18, -15],\n            [7, 7],\n            [9, -5],\n            [4, -12],\n            [8, -4],\n            [7, 13]\n        ],\n        [\n            [2676, 5704],\n            [7, -32],\n            [11, -24],\n            [13, -25]\n        ],\n        [\n            [2707, 5623],\n            [-11, -6],\n            [0, -23],\n            [6, -9],\n            [-4, -7],\n            [1, -11],\n            [-2, -12],\n            [-2, -12]\n        ],\n        [\n            [2715, 6427],\n            [23, -4],\n            [22, 0],\n            [26, -21],\n            [11, -21],\n            [26, 6],\n            [10, -13],\n            [24, -37],\n            [17, -27],\n            [9, 1],\n            [17, -12],\n            [-2, -17],\n            [20, -2],\n            [21, -24],\n            [-3, -14],\n            [-19, -7],\n            [-18, -3],\n            [-19, 4],\n            [-40, -5],\n            [18, 32],\n            [-11, 16],\n            [-18, 4],\n            [-9, 17],\n            [-7, 33],\n            [-16, -2],\n            [-26, 16],\n            [-8, 12],\n            [-36, 10],\n            [-10, 11],\n            [11, 15],\n            [-28, 3],\n            [-20, -31],\n            [-11, -1],\n            [-4, -14],\n            [-14, -7],\n            [-12, 6],\n            [15, 18],\n            [6, 22],\n            [13, 13],\n            [14, 11],\n            [21, 6],\n            [7, 6]\n        ],\n        [\n            [5909, 7133],\n            [2, 1],\n            [4, 14],\n            [20, -1],\n            [25, 18],\n            [-19, -25],\n            [2, -11]\n        ],\n        [\n            [5943, 7129],\n            [-3, 2],\n            [-5, -5],\n            [-4, 1],\n            [-2, -2],\n            [0, 6],\n            [-2, 4],\n            [-6, 0],\n            [-7, -5],\n            [-5, 3]\n        ],\n        [\n            [5943, 7129],\n            [1, -5],\n            [-28, -24],\n            [-14, 8],\n            [-7, 23],\n            [14, 2]\n        ],\n        [\n            [5377, 7945],\n            [-16, 25],\n            [-14, 15],\n            [-3, 25],\n            [-5, 17],\n            [21, 13],\n            [10, 15],\n            [20, 11],\n            [7, 11],\n            [7, -6],\n            [13, 6]\n        ],\n        [\n            [5417, 8077],\n            [13, -19],\n            [21, -5],\n            [-2, -17],\n            [15, -12],\n            [4, 15],\n            [19, -6],\n            [3, -19],\n            [20, -3],\n            [13, -29]\n        ],\n        [\n            [5523, 7982],\n            [-8, 0],\n            [-4, -11],\n            [-7, -3],\n            [-2, -13],\n            [-5, -3],\n            [-1, -5],\n            [-9, -7],\n            [-12, 1],\n            [-4, -13]\n        ],\n        [\n            [5275, 8306],\n            [1, -23],\n            [28, -14],\n            [-1, -21],\n            [29, 11],\n            [15, 16],\n            [32, -23],\n            [13, -19]\n        ],\n        [\n            [5392, 8233],\n            [6, -30],\n            [-8, -16],\n            [11, -21],\n            [6, -31],\n            [-2, -21],\n            [12, -37]\n        ],\n        [\n            [5207, 7871],\n            [3, 42],\n            [14, 40],\n            [-40, 11],\n            [-13, 16]\n        ],\n        [\n            [5171, 7980],\n            [2, 26],\n            [-6, 13]\n        ],\n        [\n            [5171, 8059],\n            [-5, 62],\n            [17, 0],\n            [7, 22],\n            [6, 54],\n            [-5, 20]\n        ],\n        [\n            [5191, 8217],\n            [6, 13],\n            [23, 3],\n            [5, -13],\n            [19, 29],\n            [-6, 22],\n            [-2, 34]\n        ],\n        [\n            [5236, 8305],\n            [21, -8],\n            [18, 9]\n        ],\n        [\n            [6196, 5808],\n            [7, -19],\n            [-1, -24],\n            [-16, -14],\n            [12, -16]\n        ],\n        [\n            [6198, 5735],\n            [-10, -32]\n        ],\n        [\n            [6188, 5703],\n            [-7, 11],\n            [-6, -5],\n            [-16, 1],\n            [0, 18],\n            [-2, 17],\n            [9, 27],\n            [10, 26]\n        ],\n        [\n            [6176, 5798],\n            [12, -5],\n            [8, 15]\n        ],\n        [\n            [5352, 8343],\n            [-17, -48],\n            [-29, 33],\n            [-4, 25],\n            [41, 19],\n            [9, -29]\n        ],\n        [\n            [5236, 8305],\n            [-11, 32],\n            [-1, 61],\n            [5, 16],\n            [8, 17],\n            [24, 4],\n            [10, 16],\n            [22, 17],\n            [-1, -30],\n            [-8, -20],\n            [4, -16],\n            [15, -9],\n            [-7, -22],\n            [-8, 6],\n            [-20, -42],\n            [7, -29]\n        ],\n        [\n            [3008, 6222],\n            [3, 10],\n            [22, 0],\n            [16, -15],\n            [8, 1],\n            [5, -21],\n            [15, 1],\n            [-1, -17],\n            [12, -2],\n            [14, -22],\n            [-10, -24],\n            [-14, 13],\n            [-12, -3],\n            [-9, 3],\n            [-5, -11],\n            [-11, -3],\n            [-4, 14],\n            [-10, -8],\n            [-11, -41],\n            [-7, 10],\n            [-1, 17]\n        ],\n        [\n            [3008, 6124],\n            [0, 16],\n            [-7, 17],\n            [7, 10],\n            [2, 23],\n            [-2, 32]\n        ],\n        [\n            [5333, 6444],\n            [-95, -112],\n            [-81, -117],\n            [-39, -26]\n        ],\n        [\n            [5118, 6189],\n            [-31, -6],\n            [0, 38],\n            [-13, 10],\n            [-17, 16],\n            [-7, 28],\n            [-94, 129],\n            [-93, 129]\n        ],\n        [\n            [4863, 6533],\n            [-105, 143]\n        ],\n        [\n            [4758, 6676],\n            [1, 11],\n            [0, 4]\n        ],\n        [\n            [4759, 6691],\n            [0, 70],\n            [44, 44],\n            [28, 9],\n            [23, 16],\n            [11, 29],\n            [32, 24],\n            [1, 44],\n            [16, 5],\n            [13, 22],\n            [36, 9],\n            [5, 23],\n            [-7, 13],\n            [-10, 62],\n            [-1, 36],\n            [-11, 38]\n        ],\n        [\n            [4939, 7135],\n            [27, 32],\n            [30, 11],\n            [17, 24],\n            [27, 18],\n            [47, 11],\n            [46, 4],\n            [14, -8],\n            [26, 23],\n            [30, 0],\n            [11, -13],\n            [19, 3]\n        ],\n        [\n            [5233, 7240],\n            [-5, -30],\n            [4, -56],\n            [-6, -49],\n            [-18, -33],\n            [3, -45],\n            [23, -35],\n            [0, -14],\n            [17, -24],\n            [12, -106]\n        ],\n        [\n            [5263, 6848],\n            [9, -52],\n            [1, -28],\n            [-5, -48],\n            [2, -27],\n            [-3, -32],\n            [2, -37],\n            [-11, -25],\n            [17, -43],\n            [1, -25],\n            [10, -33],\n            [13, 11],\n            [22, -28],\n            [12, -37]\n        ],\n        [\n            [2769, 4856],\n            [15, 45],\n            [-6, 25],\n            [-11, -27],\n            [-16, 26],\n            [5, 16],\n            [-4, 54],\n            [9, 9],\n            [5, 37],\n            [11, 38],\n            [-2, 24],\n            [15, 13],\n            [19, 23]\n        ],\n        [\n            [2906, 5049],\n            [4, -45],\n            [-9, -39],\n            [-30, -62],\n            [-33, -23],\n            [-17, -51],\n            [-6, -40],\n            [-15, -24],\n            [-12, 29],\n            [-11, 7],\n            [-12, -5],\n            [-1, 22],\n            [8, 14],\n            [-3, 24]\n        ],\n        [\n            [5969, 6800],\n            [-7, -23],\n            [-6, -45],\n            [-8, -31],\n            [-6, -10],\n            [-10, 19],\n            [-12, 26],\n            [-20, 85],\n            [-3, -5],\n            [12, -63],\n            [17, -59],\n            [21, -92],\n            [10, -32],\n            [9, -34],\n            [25, -65],\n            [-6, -10],\n            [1, -39],\n            [33, -53],\n            [4, -12]\n        ],\n        [\n            [6023, 6357],\n            [-110, 0],\n            [-107, 0],\n            [-112, 0]\n        ],\n        [\n            [5694, 6357],\n            [0, 218],\n            [0, 210],\n            [-8, 47],\n            [7, 37],\n            [-5, 25],\n            [10, 29]\n        ],\n        [\n            [5698, 6923],\n            [37, 0],\n            [27, -15],\n            [28, -18],\n            [13, -9],\n            [21, 19],\n            [11, 17],\n            [25, 5],\n            [20, -8],\n            [7, -29],\n            [7, 19],\n            [22, -14],\n            [22, -3],\n            [13, 15]\n        ],\n        [\n            [5951, 6902],\n            [18, -102]\n        ],\n        [\n            [6176, 5798],\n            [-10, 20],\n            [-11, 34],\n            [-12, 19],\n            [-8, 21],\n            [-24, 23],\n            [-19, 1],\n            [-7, 12],\n            [-16, -14],\n            [-17, 27],\n            [-8, -44],\n            [-33, 13]\n        ],\n        [\n            [6011, 5910],\n            [-3, 23],\n            [12, 87],\n            [3, 39],\n            [9, 18],\n            [20, 10],\n            [14, 34]\n        ],\n        [\n            [6066, 6121],\n            [16, -69],\n            [8, -54],\n            [15, -29],\n            [38, -55],\n            [16, -34],\n            [15, -34],\n            [8, -20],\n            [14, -18]\n        ],\n        [\n            [4749, 7532],\n            [1, 42],\n            [-11, 25],\n            [39, 43],\n            [34, -11],\n            [37, 1],\n            [30, -10],\n            [23, 3],\n            [45, -2]\n        ],\n        [\n            [4947, 7623],\n            [11, -23],\n            [51, -27],\n            [10, 13],\n            [31, -27],\n            [32, 8]\n        ],\n        [\n            [5082, 7567],\n            [2, -35],\n            [-26, -39],\n            [-36, -12],\n            [-2, -20],\n            [-18, -33],\n            [-10, -48],\n            [11, -34],\n            [-16, -26],\n            [-6, -39],\n            [-21, -11],\n            [-20, -46],\n            [-35, -1],\n            [-27, 1],\n            [-17, -21],\n            [-11, -22],\n            [-13, 5],\n            [-11, 20],\n            [-8, 34],\n            [-26, 9]\n        ],\n        [\n            [4792, 7249],\n            [-2, 20],\n            [10, 22],\n            [4, 16],\n            [-9, 17],\n            [7, 39],\n            [-11, 36],\n            [12, 5],\n            [1, 27],\n            [5, 9],\n            [0, 46],\n            [13, 16],\n            [-8, 30],\n            [-16, 2],\n            [-5, -8],\n            [-16, 0],\n            [-7, 29],\n            [-11, -8],\n            [-10, -15]\n        ],\n        [\n            [5675, 8472],\n            [3, 35],\n            [-10, -8],\n            [-18, 21],\n            [-2, 34],\n            [35, 17],\n            [35, 8],\n            [30, -10],\n            [29, 2]\n        ],\n        [\n            [5777, 8571],\n            [4, -10],\n            [-20, -34],\n            [8, -55],\n            [-12, -19]\n        ],\n        [\n            [5757, 8453],\n            [-22, 0],\n            [-24, 22],\n            [-13, 7],\n            [-23, -10]\n        ],\n        [\n            [6188, 5703],\n            [-6, -21],\n            [10, -32],\n            [10, -29],\n            [11, -21],\n            [90, -70],\n            [24, 0]\n        ],\n        [\n            [6327, 5530],\n            [-79, -177],\n            [-36, -3],\n            [-25, -41],\n            [-17, -1],\n            [-8, -19]\n        ],\n        [\n            [6162, 5289],\n            [-19, 0],\n            [-11, 20],\n            [-26, -25],\n            [-8, -24],\n            [-18, 4],\n            [-6, 7],\n            [-7, -1],\n            [-9, 0],\n            [-35, 50],\n            [-19, 0],\n            [-10, 20],\n            [0, 33],\n            [-14, 10]\n        ],\n        [\n            [5980, 5383],\n            [-17, 64],\n            [-12, 14],\n            [-5, 23],\n            [-14, 29],\n            [-17, 4],\n            [9, 34],\n            [15, 2],\n            [4, 18]\n        ],\n        [\n            [5943, 5571],\n            [0, 53]\n        ],\n        [\n            [5943, 5624],\n            [8, 62],\n            [13, 16],\n            [3, 24],\n            [12, 45],\n            [17, 30],\n            [11, 58],\n            [4, 51]\n        ],\n        [\n            [5794, 9138],\n            [-4, -42],\n            [42, -39],\n            [-26, -45],\n            [33, -67],\n            [-19, -51],\n            [25, -43],\n            [-11, -39],\n            [41, -40],\n            [-11, -31],\n            [-25, -34],\n            [-60, -75]\n        ],\n        [\n            [5779, 8632],\n            [-50, -5],\n            [-49, -21],\n            [-45, -13],\n            [-16, 32],\n            [-27, 20],\n            [6, 58],\n            [-14, 53],\n            [14, 35],\n            [25, 37],\n            [63, 64],\n            [19, 12],\n            [-3, 25],\n            [-39, 28]\n        ],\n        [\n            [5663, 8957],\n            [-9, 23],\n            [-1, 91],\n            [-43, 40],\n            [-37, 29]\n        ],\n        [\n            [5573, 9140],\n            [17, 16],\n            [30, -32],\n            [37, 3],\n            [30, -14],\n            [26, 26],\n            [14, 44],\n            [43, 20],\n            [35, -24],\n            [-11, -41]\n        ],\n        [\n            [9954, 4033],\n            [9, -17],\n            [-4, -31],\n            [-17, -8],\n            [-16, 7],\n            [-2, 26],\n            [10, 21],\n            [13, -8],\n            [7, 10]\n        ],\n        [\n            [0, 4079],\n            [9981, -14],\n            [-17, -13],\n            [-4, 23],\n            [14, 12],\n            [9, 3],\n            [-9983, 18]\n        ],\n        [\n            [0, 4108],\n            [0, -29]\n        ],\n        [\n            [0, 4108],\n            [6, 3],\n            [-4, -28],\n            [-2, -4]\n        ],\n        [\n            [3300, 1994],\n            [33, 36],\n            [24, -15],\n            [16, 24],\n            [22, -27],\n            [-8, -21],\n            [-37, -17],\n            [-13, 20],\n            [-23, -26],\n            [-14, 26]\n        ],\n        [\n            [5265, 7548],\n            [-9, -46],\n            [-13, 12],\n            [-6, 40],\n            [5, 22],\n            [18, 22],\n            [5, -50]\n        ],\n        [\n            [5157, 7984],\n            [6, -6],\n            [8, 2]\n        ],\n        [\n            [5190, 7775],\n            [-2, -17],\n            [9, -22],\n            [-10, -18],\n            [7, -46],\n            [15, -8],\n            [-3, -25]\n        ],\n        [\n            [5206, 7639],\n            [-25, -34],\n            [-55, 16],\n            [-40, -19],\n            [-4, -35]\n        ],\n        [\n            [4947, 7623],\n            [14, 35],\n            [5, 118],\n            [-28, 62],\n            [-21, 30],\n            [-42, 23],\n            [-3, 43],\n            [36, 12],\n            [47, -15],\n            [-9, 67],\n            [26, -25],\n            [65, 46],\n            [8, 48],\n            [24, 12]\n        ],\n        [\n            [3485, 5194],\n            [7, 25],\n            [3, 27]\n        ],\n        [\n            [3495, 5246],\n            [4, 26],\n            [-10, 34]\n        ],\n        [\n            [3489, 5306],\n            [-3, 41],\n            [15, 51]\n        ],\n        [\n            [3501, 5398],\n            [9, -7],\n            [21, -14],\n            [29, -50],\n            [5, -24]\n        ],\n        [\n            [5308, 4822],\n            [-29, 60],\n            [-18, 49],\n            [-17, 61],\n            [1, 19],\n            [6, 19],\n            [7, 43],\n            [5, 44]\n        ],\n        [\n            [5263, 5117],\n            [10, 4],\n            [40, -1],\n            [0, 71]\n        ],\n        [\n            [4827, 8240],\n            [-21, 12],\n            [-17, -1],\n            [6, 32],\n            [-6, 32]\n        ],\n        [\n            [4789, 8315],\n            [23, 2],\n            [30, -37],\n            [-15, -40]\n        ],\n        [\n            [4916, 8521],\n            [-30, -63],\n            [29, 8],\n            [30, -1],\n            [-7, -48],\n            [-25, -53],\n            [29, -4],\n            [2, -6],\n            [25, -69],\n            [19, -10],\n            [17, -67],\n            [8, -24],\n            [33, -11],\n            [-3, -38],\n            [-14, -17],\n            [11, -30],\n            [-25, -31],\n            [-37, 0],\n            [-48, -16],\n            [-13, 12],\n            [-18, -28],\n            [-26, 7],\n            [-19, -23],\n            [-15, 12],\n            [41, 62],\n            [25, 13],\n            [-1, 0],\n            [-43, 9],\n            [-8, 24],\n            [29, 18],\n            [-15, 32],\n            [5, 39],\n            [42, -6],\n            [4, 35],\n            [-19, 36],\n            [0, 1],\n            [-34, 10],\n            [-7, 16],\n            [10, 27],\n            [-9, 16],\n            [-15, -28],\n            [-1, 57],\n            [-14, 30],\n            [10, 61],\n            [21, 48],\n            [23, -4],\n            [33, 4]\n        ],\n        [\n            [6154, 7511],\n            [4, 26],\n            [-7, 40],\n            [-16, 22],\n            [-16, 6],\n            [-10, 19]\n        ],\n        [\n            [6109, 7624],\n            [4, 6],\n            [23, -10],\n            [41, -9],\n            [38, -28],\n            [5, -11],\n            [17, 9],\n            [25, -13],\n            [9, -24],\n            [17, -13]\n        ],\n        [\n            [6210, 7485],\n            [-27, 29],\n            [-29, -3]\n        ],\n        [\n            [5029, 5408],\n            [-44, -35],\n            [-15, -20],\n            [-25, -17],\n            [-25, 17]\n        ],\n        [\n            [5000, 5708],\n            [-2, -18],\n            [12, -30],\n            [0, -43],\n            [2, -47],\n            [7, -21],\n            [-6, -54],\n            [2, -29],\n            [8, -37],\n            [6, -21]\n        ],\n        [\n            [4765, 5512],\n            [-8, 1],\n            [-5, -24],\n            [-8, 1],\n            [-6, 12],\n            [2, 24],\n            [-11, 36],\n            [-8, -7],\n            [-6, -1]\n        ],\n        [\n            [4715, 5554],\n            [-7, -3],\n            [0, 21],\n            [-4, 16],\n            [0, 17],\n            [-6, 25],\n            [-7, 21],\n            [-23, 0],\n            [-6, -11],\n            [-8, -1],\n            [-4, -13],\n            [-4, -17],\n            [-14, -26]\n        ],\n        [\n            [4632, 5583],\n            [-13, 35],\n            [-10, 24],\n            [-8, 7],\n            [-6, 12],\n            [-4, 26],\n            [-4, 13],\n            [-8, 10]\n        ],\n        [\n            [4579, 5710],\n            [13, 29],\n            [8, -2],\n            [7, 10],\n            [6, 0],\n            [5, 8],\n            [-3, 20],\n            [3, 6],\n            [1, 20]\n        ],\n        [\n            [4619, 5801],\n            [13, -1],\n            [20, -14],\n            [6, 1],\n            [3, 7],\n            [15, -5],\n            [4, 4]\n        ],\n        [\n            [4680, 5793],\n            [1, -22],\n            [5, 0],\n            [7, 8],\n            [5, -2],\n            [7, -15],\n            [12, -5],\n            [8, 13],\n            [9, 8],\n            [6, 8],\n            [6, -1],\n            [6, -13],\n            [3, -17],\n            [12, -24],\n            [-6, -16],\n            [-1, -19],\n            [6, 6],\n            [3, -7],\n            [-1, -17],\n            [8, -18]\n        ],\n        [\n            [4532, 5834],\n            [3, 27]\n        ],\n        [\n            [4535, 5861],\n            [31, 1],\n            [6, 14],\n            [9, 1],\n            [11, -14],\n            [8, -1],\n            [9, 10],\n            [6, -17],\n            [-12, -13],\n            [-12, 1],\n            [-12, 13],\n            [-10, -14],\n            [-5, -1],\n            [-7, -8],\n            [-25, 1]\n        ],\n        [\n            [4579, 5710],\n            [-15, 24],\n            [-11, 4],\n            [-7, 17],\n            [1, 9],\n            [-9, 13],\n            [-2, 12]\n        ],\n        [\n            [4536, 5789],\n            [15, 10],\n            [9, -2],\n            [8, 7],\n            [51, -3]\n        ],\n        [\n            [5263, 5117],\n            [-5, 9],\n            [10, 66]\n        ],\n        [\n            [5658, 7167],\n            [15, -20],\n            [22, 3],\n            [20, -4],\n            [0, -10],\n            [15, 7],\n            [-4, -18],\n            [-40, -5],\n            [1, 10],\n            [-34, 12],\n            [5, 25]\n        ],\n        [\n            [5723, 7469],\n            [-17, 2],\n            [-14, 6],\n            [-34, -16],\n            [19, -33],\n            [-14, -10],\n            [-15, 0],\n            [-15, 31],\n            [-5, -13],\n            [6, -36],\n            [14, -27],\n            [-10, -13],\n            [15, -27],\n            [14, -18],\n            [0, -33],\n            [-25, 16],\n            [8, -30],\n            [-18, -7],\n            [11, -52],\n            [-19, -1],\n            [-23, 26],\n            [-10, 47],\n            [-5, 40],\n            [-11, 27],\n            [-14, 34],\n            [-2, 16]\n        ],\n        [\n            [5583, 7470],\n            [18, 6],\n            [11, 13],\n            [15, -2],\n            [5, 11],\n            [5, 2]\n        ],\n        [\n            [5725, 7529],\n            [13, -16],\n            [-8, -37],\n            [-7, -7]\n        ],\n        [\n            [3701, 9939],\n            [93, 35],\n            [97, -2],\n            [36, 21],\n            [98, 6],\n            [222, -7],\n            [174, -47],\n            [-52, -23],\n            [-106, -3],\n            [-150, -5],\n            [14, -11],\n            [99, 7],\n            [83, -21],\n            [54, 18],\n            [23, -21],\n            [-30, -34],\n            [71, 22],\n            [135, 23],\n            [83, -12],\n            [15, -25],\n            [-113, -42],\n            [-16, -14],\n            [-88, -10],\n            [64, -3],\n            [-32, -43],\n            [-23, -38],\n            [1, -66],\n            [33, -38],\n            [-43, -3],\n            [-46, -19],\n            [52, -31],\n            [6, -50],\n            [-30, -6],\n            [36, -50],\n            [-61, -5],\n            [32, -24],\n            [-9, -20],\n            [-39, -10],\n            [-39, 0],\n            [35, -40],\n            [0, -26],\n            [-55, 24],\n            [-14, -15],\n            [37, -15],\n            [37, -36],\n            [10, -48],\n            [-49, -11],\n            [-22, 22],\n            [-34, 34],\n            [10, -40],\n            [-33, -31],\n            [73, -2],\n            [39, -3],\n            [-75, -52],\n            [-75, -46],\n            [-81, -21],\n            [-31, 0],\n            [-29, -23],\n            [-38, -62],\n            [-60, -42],\n            [-19, -2],\n            [-37, -15],\n            [-40, -13],\n            [-24, -37],\n            [0, -41],\n            [-15, -39],\n            [-45, -47],\n            [11, -47],\n            [-12, -48],\n            [-14, -58],\n            [-39, -4],\n            [-41, 49],\n            [-56, 0],\n            [-27, 32],\n            [-18, 58],\n            [-49, 73],\n            [-14, 39],\n            [-3, 53],\n            [-39, 54],\n            [10, 44],\n            [-18, 21],\n            [27, 69],\n            [42, 22],\n            [11, 25],\n            [6, 46],\n            [-32, -21],\n            [-15, -9],\n            [-25, -8],\n            [-34, 19],\n            [-2, 40],\n            [11, 31],\n            [25, 1],\n            [57, -15],\n            [-48, 37],\n            [-24, 20],\n            [-28, -8],\n            [-23, 15],\n            [31, 55],\n            [-17, 22],\n            [-22, 41],\n            [-34, 62],\n            [-35, 23],\n            [0, 25],\n            [-74, 34],\n            [-59, 5],\n            [-74, -3],\n            [-68, -4],\n            [-32, 19],\n            [-49, 37],\n            [73, 19],\n            [56, 3],\n            [-119, 15],\n            [-62, 24],\n            [3, 23],\n            [106, 28],\n            [101, 29],\n            [11, 21],\n            [-75, 22],\n            [24, 23],\n            [97, 41],\n            [40, 7],\n            [-12, 26],\n            [66, 16],\n            [86, 9],\n            [85, 1],\n            [30, -19],\n            [74, 33],\n            [66, -22],\n            [39, -5],\n            [58, -19],\n            [-66, 32],\n            [4, 25]\n        ],\n        [\n            [2497, 5869],\n            [-14, 10],\n            [-17, 1],\n            [-13, 12],\n            [-15, 24]\n        ],\n        [\n            [2438, 5916],\n            [1, 18],\n            [3, 13],\n            [-4, 12],\n            [13, 48],\n            [36, 0],\n            [1, 20],\n            [-5, 4],\n            [-3, 12],\n            [-10, 14],\n            [-11, 20],\n            [13, 0],\n            [0, 33],\n            [26, 0],\n            [26, 0]\n        ],\n        [\n            [2529, 5996],\n            [10, -11],\n            [2, 9],\n            [8, -7]\n        ],\n        [\n            [2549, 5987],\n            [-13, -23],\n            [-13, -16],\n            [-2, -12],\n            [2, -11],\n            [-5, -15]\n        ],\n        [\n            [2518, 5910],\n            [-7, -4],\n            [2, -7],\n            [-6, -6],\n            [-9, -15],\n            [-1, -9]\n        ],\n        [\n            [3340, 5552],\n            [18, -22],\n            [17, -38],\n            [1, -31],\n            [10, -1],\n            [15, -29],\n            [11, -21]\n        ],\n        [\n            [3412, 5410],\n            [-4, -53],\n            [-17, -15],\n            [1, -14],\n            [-5, -31],\n            [13, -42],\n            [9, -1],\n            [3, -33],\n            [17, -51]\n        ],\n        [\n            [3313, 5365],\n            [-19, 45],\n            [7, 16],\n            [0, 27],\n            [17, 10],\n            [7, 11],\n            [-10, 22],\n            [3, 21],\n            [22, 35]\n        ],\n        [\n            [2574, 5825],\n            [-5, 18],\n            [-8, 5]\n        ],\n        [\n            [2561, 5848],\n            [2, 24],\n            [-4, 6],\n            [-6, 4],\n            [-12, -7],\n            [-1, 8],\n            [-8, 10],\n            [-6, 12],\n            [-8, 5]\n        ],\n        [\n            [2549, 5987],\n            [3, -3],\n            [6, 11],\n            [8, 1],\n            [3, -5],\n            [4, 3],\n            [13, -6],\n            [13, 2],\n            [9, 6],\n            [3, 7],\n            [9, -3],\n            [6, -4],\n            [8, 1],\n            [5, 5],\n            [13, -8],\n            [4, -1],\n            [9, -11],\n            [8, -13],\n            [10, -9],\n            [7, -17]\n        ],\n        [\n            [2690, 5943],\n            [-9, 2],\n            [-4, -8],\n            [-10, -8],\n            [-7, 0],\n            [-6, -8],\n            [-6, 3],\n            [-4, 9],\n            [-3, -2],\n            [-4, -14],\n            [-3, 1],\n            [0, -12],\n            [-10, -17],\n            [-5, -7],\n            [-3, -7],\n            [-8, 12],\n            [-6, -16],\n            [-6, 1],\n            [-6, -2],\n            [0, -29],\n            [-4, 0],\n            [-3, -14],\n            [-9, -2]\n        ],\n        [\n            [5522, 7770],\n            [7, -23],\n            [9, -17],\n            [-11, -22]\n        ],\n        [\n            [5515, 7577],\n            [-3, -10]\n        ],\n        [\n            [5512, 7567],\n            [-26, 22],\n            [-16, 21],\n            [-26, 18],\n            [-23, 43],\n            [6, 5],\n            [-13, 25],\n            [-1, 19],\n            [-17, 10],\n            [-9, -26],\n            [-8, 20],\n            [0, 21],\n            [1, 1]\n        ],\n        [\n            [5380, 7746],\n            [20, -2],\n            [5, 9],\n            [9, -9],\n            [11, -1],\n            [0, 16],\n            [10, 6],\n            [2, 24],\n            [23, 16]\n        ],\n        [\n            [5460, 7805],\n            [8, -7],\n            [21, -26],\n            [23, -11],\n            [10, 9]\n        ],\n        [\n            [3008, 6124],\n            [-19, 10],\n            [-13, -5],\n            [-17, 5],\n            [-13, -11],\n            [-15, 18],\n            [3, 19],\n            [25, -8],\n            [21, -5],\n            [10, 13],\n            [-12, 26],\n            [0, 23],\n            [-18, 9],\n            [7, 16],\n            [17, -3],\n            [24, -9]\n        ],\n        [\n            [5471, 7900],\n            [14, -15],\n            [10, -6],\n            [24, 7],\n            [2, 12],\n            [11, 2],\n            [14, 9],\n            [3, -4],\n            [13, 8],\n            [6, 13],\n            [9, 4],\n            [30, -18],\n            [6, 6]\n        ],\n        [\n            [5613, 7918],\n            [15, -16],\n            [2, -16]\n        ],\n        [\n            [5630, 7886],\n            [-17, -12],\n            [-13, -40],\n            [-17, -40],\n            [-22, -11]\n        ],\n        [\n            [5561, 7783],\n            [-17, 2],\n            [-22, -15]\n        ],\n        [\n            [5460, 7805],\n            [-6, 20],\n            [-4, 0]\n        ],\n        [\n            [8352, 4453],\n            [-11, -2],\n            [-37, 42],\n            [26, 11],\n            [14, -18],\n            [10, -17],\n            [-2, -16]\n        ],\n        [\n            [8471, 4532],\n            [2, -11],\n            [1, -18]\n        ],\n        [\n            [8474, 4503],\n            [-18, -45],\n            [-24, -13],\n            [-3, 8],\n            [2, 20],\n            [12, 36],\n            [28, 23]\n        ],\n        [\n            [8274, 4579],\n            [10, -16],\n            [17, 5],\n            [7, -25],\n            [-32, -12],\n            [-19, -8],\n            [-15, 1],\n            [10, 34],\n            [15, 0],\n            [7, 21]\n        ],\n        [\n            [8413, 4579],\n            [-4, -32],\n            [-42, -17],\n            [-37, 7],\n            [0, 22],\n            [22, 12],\n            [18, -18],\n            [18, 5],\n            [25, 21]\n        ],\n        [\n            [8017, 4657],\n            [53, -6],\n            [6, 25],\n            [51, -29],\n            [10, -38],\n            [42, -11],\n            [34, -35],\n            [-31, -23],\n            [-31, 24],\n            [-25, -1],\n            [-29, 4],\n            [-26, 11],\n            [-32, 22],\n            [-21, 6],\n            [-11, -7],\n            [-51, 24],\n            [-5, 25],\n            [-25, 5],\n            [19, 56],\n            [34, -3],\n            [22, -23],\n            [12, -5],\n            [4, -21]\n        ],\n        [\n            [8741, 4690],\n            [-14, -40],\n            [-3, 45],\n            [5, 21],\n            [6, 20],\n            [7, -17],\n            [-1, -29]\n        ],\n        [\n            [8534, 4853],\n            [-11, -19],\n            [-19, 10],\n            [-5, 26],\n            [28, 3],\n            [7, -20]\n        ],\n        [\n            [8623, 4875],\n            [10, -45],\n            [-23, 24],\n            [-23, 5],\n            [-16, -4],\n            [-19, 2],\n            [6, 33],\n            [35, 2],\n            [30, -17]\n        ],\n        [\n            [8916, 4904],\n            [0, -193],\n            [1, -192]\n        ],\n        [\n            [8917, 4519],\n            [-25, 48],\n            [-28, 12],\n            [-7, -17],\n            [-35, -1],\n            [12, 48],\n            [17, 16],\n            [-7, 64],\n            [-14, 50],\n            [-53, 50],\n            [-23, 5],\n            [-42, 54],\n            [-8, -28],\n            [-11, -5],\n            [-6, 21],\n            [0, 26],\n            [-21, 29],\n            [29, 21],\n            [20, -1],\n            [-2, 16],\n            [-41, 0],\n            [-11, 35],\n            [-25, 11],\n            [-11, 29],\n            [37, 14],\n            [14, 20],\n            [45, -25],\n            [4, -22],\n            [8, -95],\n            [29, -35],\n            [23, 62],\n            [32, 36],\n            [25, 0],\n            [23, -21],\n            [21, -21],\n            [30, -11]\n        ],\n        [\n            [8478, 5141],\n            [-22, -58],\n            [-21, -12],\n            [-27, 12],\n            [-46, -3],\n            [-24, -8],\n            [-4, -45],\n            [24, -53],\n            [15, 27],\n            [52, 20],\n            [-2, -27],\n            [-12, 9],\n            [-12, -35],\n            [-25, -23],\n            [27, -76],\n            [-5, -20],\n            [25, -68],\n            [-1, -39],\n            [-14, -17],\n            [-11, 20],\n            [13, 49],\n            [-27, -23],\n            [-7, 16],\n            [3, 23],\n            [-20, 35],\n            [3, 57],\n            [-19, -18],\n            [2, -69],\n            [1, -84],\n            [-17, -9],\n            [-12, 18],\n            [8, 54],\n            [-4, 57],\n            [-12, 1],\n            [-9, 40],\n            [12, 39],\n            [4, 47],\n            [14, 89],\n            [5, 24],\n            [24, 44],\n            [22, -18],\n            [35, -8],\n            [32, 3],\n            [27, 43],\n            [5, -14]\n        ],\n        [\n            [8574, 5124],\n            [-2, -51],\n            [-14, 6],\n            [-4, -36],\n            [11, -32],\n            [-8, -7],\n            [-11, 38],\n            [-8, 75],\n            [6, 47],\n            [9, 22],\n            [2, -32],\n            [16, -5],\n            [3, -25]\n        ],\n        [\n            [8045, 5176],\n            [5, -39],\n            [19, -34],\n            [18, 12],\n            [18, -4],\n            [16, 30],\n            [13, 5],\n            [26, -17],\n            [23, 13],\n            [14, 82],\n            [11, 21],\n            [10, 67],\n            [32, 0],\n            [24, -10]\n        ],\n        [\n            [8274, 5302],\n            [-16, -53],\n            [20, -56],\n            [-5, -28],\n            [32, -54],\n            [-33, -7],\n            [-10, -40],\n            [2, -54],\n            [-27, -40],\n            [-1, -59],\n            [-10, -91],\n            [-5, 21],\n            [-31, -26],\n            [-11, 36],\n            [-20, 3],\n            [-14, 19],\n            [-33, -21],\n            [-10, 29],\n            [-18, -4],\n            [-23, 7],\n            [-4, 79],\n            [-14, 17],\n            [-13, 50],\n            [-4, 52],\n            [3, 55],\n            [16, 39]\n        ],\n        [\n            [7939, 4712],\n            [-31, -1],\n            [-24, 49],\n            [-35, 48],\n            [-12, 36],\n            [-21, 48],\n            [-14, 44],\n            [-21, 83],\n            [-24, 49],\n            [-9, 51],\n            [-10, 46],\n            [-25, 37],\n            [-14, 51],\n            [-21, 33],\n            [-29, 65],\n            [-3, 30],\n            [18, -2],\n            [43, -12],\n            [25, -57],\n            [21, -40],\n            [16, -25],\n            [26, -63],\n            [28, -1],\n            [23, -41],\n            [16, -49],\n            [22, -27],\n            [-12, -49],\n            [16, -20],\n            [10, -2],\n            [5, -41],\n            [10, -33],\n            [20, -5],\n            [14, -37],\n            [-7, -74],\n            [-1, -91]\n        ],\n        [\n            [7252, 6841],\n            [-17, -27],\n            [-11, -55],\n            [27, -23],\n            [26, -29],\n            [36, -33],\n            [38, -8],\n            [16, -30],\n            [22, -5],\n            [33, -14],\n            [23, 1],\n            [4, 23],\n            [-4, 38],\n            [2, 25]\n        ],\n        [\n            [7703, 6727],\n            [2, -22],\n            [-10, -11],\n            [2, -36],\n            [-19, 10],\n            [-36, -41],\n            [0, -33],\n            [-15, -50],\n            [-1, -29],\n            [-13, -48],\n            [-21, 13],\n            [-1, -61],\n            [-7, -20],\n            [3, -25],\n            [-14, -14]\n        ],\n        [\n            [7472, 6360],\n            [-4, -21],\n            [-19, 1],\n            [-34, -13],\n            [2, -44],\n            [-15, -35],\n            [-40, -40],\n            [-31, -69],\n            [-21, -38],\n            [-28, -38],\n            [0, -27],\n            [-13, -15],\n            [-26, -21],\n            [-12, -3],\n            [-9, -45],\n            [6, -77],\n            [1, -49],\n            [-11, -56],\n            [0, -101],\n            [-15, -2],\n            [-12, -46],\n            [8, -19],\n            [-25, -17],\n            [-10, -40],\n            [-11, -17],\n            [-26, 55],\n            [-13, 83],\n            [-11, 60],\n            [-9, 28],\n            [-15, 56],\n            [-7, 74],\n            [-5, 37],\n            [-25, 81],\n            [-12, 115],\n            [-8, 75],\n            [0, 72],\n            [-5, 55],\n            [-41, -35],\n            [-19, 7],\n            [-36, 71],\n            [13, 22],\n            [-8, 23],\n            [-33, 50]\n        ],\n        [\n            [6893, 6457],\n            [19, 40],\n            [61, -1],\n            [-6, 51],\n            [-15, 30],\n            [-4, 46],\n            [-18, 26],\n            [31, 62],\n            [32, -4],\n            [29, 61],\n            [18, 60],\n            [27, 60],\n            [-1, 42],\n            [24, 34],\n            [-23, 29],\n            [-9, 40],\n            [-10, 52],\n            [14, 25],\n            [42, -14],\n            [31, 9],\n            [26, 49]\n        ],\n        [\n            [4827, 8240],\n            [5, -42],\n            [-21, -53],\n            [-49, -35],\n            [-40, 9],\n            [23, 62],\n            [-15, 60],\n            [38, 46],\n            [21, 28]\n        ],\n        [\n            [6497, 7255],\n            [25, 12],\n            [19, 33],\n            [19, -1],\n            [12, 11],\n            [20, -6],\n            [31, -30],\n            [22, -6],\n            [31, -53],\n            [21, -2],\n            [3, -49]\n        ],\n        [\n            [6690, 6820],\n            [14, -31],\n            [11, -36],\n            [27, -26],\n            [1, -52],\n            [13, -10],\n            [2, -27],\n            [-40, -30],\n            [-10, -69]\n        ],\n        [\n            [6708, 6539],\n            [-53, 18],\n            [-30, 13],\n            [-31, 8],\n            [-12, 73],\n            [-13, 10],\n            [-22, -11],\n            [-28, -28],\n            [-34, 20],\n            [-28, 45],\n            [-27, 17],\n            [-18, 56],\n            [-21, 79],\n            [-15, -10],\n            [-17, 20],\n            [-11, -24]\n        ],\n        [\n            [6348, 6825],\n            [-15, 32],\n            [0, 31],\n            [-9, 0],\n            [5, 43],\n            [-15, 45],\n            [-34, 32],\n            [-19, 56],\n            [6, 46],\n            [14, 21],\n            [-2, 34],\n            [-18, 18],\n            [-18, 70]\n        ],\n        [\n            [6243, 7253],\n            [-15, 48],\n            [5, 18],\n            [-8, 68],\n            [19, 17]\n        ],\n        [\n            [6357, 7321],\n            [9, -43],\n            [26, -13],\n            [20, -29],\n            [39, -10],\n            [44, 15],\n            [2, 14]\n        ],\n        [\n            [6348, 6825],\n            [-16, 3]\n        ],\n        [\n            [6332, 6828],\n            [-19, 5],\n            [-20, -56]\n        ],\n        [\n            [6293, 6777],\n            [-52, 4],\n            [-78, 119],\n            [-41, 41],\n            [-34, 16]\n        ],\n        [\n            [6088, 6957],\n            [-11, 72]\n        ],\n        [\n            [6077, 7029],\n            [61, 62],\n            [11, 71],\n            [-3, 43],\n            [16, 15],\n            [14, 37]\n        ],\n        [\n            [6176, 7257],\n            [12, 9],\n            [32, -8],\n            [10, -15],\n            [13, 10]\n        ],\n        [\n            [4597, 8984],\n            [-7, -39],\n            [31, -40],\n            [-36, -45],\n            [-80, -41],\n            [-24, -10],\n            [-36, 8],\n            [-78, 19],\n            [28, 26],\n            [-61, 29],\n            [49, 12],\n            [-1, 17],\n            [-58, 14],\n            [19, 38],\n            [42, 9],\n            [43, -40],\n            [42, 32],\n            [35, -17],\n            [45, 32],\n            [47, -4]\n        ],\n        [\n            [5992, 6990],\n            [-5, -19]\n        ],\n        [\n            [5987, 6971],\n            [-10, 8],\n            [-6, -39],\n            [7, -7],\n            [-7, -8],\n            [-1, -15],\n            [13, 8]\n        ],\n        [\n            [5983, 6918],\n            [0, -23],\n            [-14, -95]\n        ],\n        [\n            [5951, 6902],\n            [8, 19],\n            [-2, 4],\n            [8, 27],\n            [5, 45],\n            [4, 15],\n            [1, 0]\n        ],\n        [\n            [5975, 7012],\n            [9, 0],\n            [3, 11],\n            [7, 0]\n        ],\n        [\n            [5994, 7023],\n            [1, -24],\n            [-4, -9],\n            [1, 0]\n        ],\n        [\n            [5431, 7316],\n            [-10, -46],\n            [4, -19],\n            [-6, -30],\n            [-21, 22],\n            [-14, 7],\n            [-39, 30],\n            [4, 30],\n            [32, -6],\n            [28, 7],\n            [22, 5]\n        ],\n        [\n            [5255, 7492],\n            [17, -42],\n            [-4, -78],\n            [-13, 4],\n            [-11, -20],\n            [-10, 16],\n            [-2, 71],\n            [-6, 34],\n            [15, -3],\n            [14, 18]\n        ],\n        [\n            [5383, 7805],\n            [-3, -29],\n            [7, -25]\n        ],\n        [\n            [5387, 7751],\n            [-22, 8],\n            [-23, -20],\n            [1, -30],\n            [-3, -17],\n            [9, -30],\n            [26, -29],\n            [14, -49],\n            [31, -48],\n            [22, 0],\n            [7, -13],\n            [-8, -11],\n            [25, -22],\n            [20, -18],\n            [24, -30],\n            [3, -11],\n            [-5, -22],\n            [-16, 28],\n            [-24, 10],\n            [-12, -39],\n            [20, -21],\n            [-3, -31],\n            [-11, -4],\n            [-15, -50],\n            [-12, -5],\n            [0, 18],\n            [6, 32],\n            [6, 12],\n            [-11, 35],\n            [-8, 29],\n            [-12, 8],\n            [-8, 25],\n            [-18, 11],\n            [-12, 24],\n            [-21, 4],\n            [-21, 26],\n            [-26, 39],\n            [-19, 34],\n            [-8, 58],\n            [-14, 7],\n            [-23, 20],\n            [-12, -8],\n            [-16, -28],\n            [-12, -4]\n        ],\n        [\n            [2845, 6150],\n            [19, -5],\n            [14, -15],\n            [5, -16],\n            [-19, -1],\n            [-9, -10],\n            [-15, 10],\n            [-16, 21],\n            [3, 14],\n            [12, 4],\n            [6, -2]\n        ],\n        [\n            [5992, 6990],\n            [31, -24],\n            [54, 63]\n        ],\n        [\n            [6088, 6957],\n            [-5, -8],\n            [-56, -30],\n            [28, -59],\n            [-9, -10],\n            [-5, -20],\n            [-21, -8],\n            [-7, -21],\n            [-12, -19],\n            [-31, 10]\n        ],\n        [\n            [5970, 6792],\n            [-1, 8]\n        ],\n        [\n            [5983, 6918],\n            [4, 17],\n            [0, 36]\n        ],\n        [\n            [8739, 7075],\n            [4, -20],\n            [-16, -36],\n            [-11, 19],\n            [-15, -14],\n            [-7, -34],\n            [-18, 16],\n            [0, 28],\n            [15, 36],\n            [16, -7],\n            [12, 25],\n            [20, -13]\n        ],\n        [\n            [8915, 7252],\n            [-10, -47],\n            [4, -30],\n            [-14, -42],\n            [-35, -27],\n            [-49, -4],\n            [-40, -67],\n            [-19, 22],\n            [-1, 44],\n            [-48, -13],\n            [-33, -27],\n            [-32, -2],\n            [28, -43],\n            [-19, -101],\n            [-18, -24],\n            [-13, 23],\n            [7, 53],\n            [-18, 17],\n            [-11, 41],\n            [26, 18],\n            [15, 37],\n            [28, 30],\n            [20, 41],\n            [55, 17],\n            [30, -12],\n            [29, 105],\n            [19, -28],\n            [40, 59],\n            [16, 23],\n            [18, 72],\n            [-5, 67],\n            [11, 37],\n            [30, 11],\n            [15, -82],\n            [-1, -48],\n            [-25, -59],\n            [0, -61]\n        ],\n        [\n            [8997, 7667],\n            [19, -12],\n            [20, 25],\n            [6, -67],\n            [-41, -16],\n            [-25, -59],\n            [-43, 41],\n            [-15, -65],\n            [-31, -1],\n            [-4, 59],\n            [14, 46],\n            [29, 3],\n            [8, 82],\n            [9, 46],\n            [32, -62],\n            [22, -20]\n        ],\n        [\n            [6970, 7554],\n            [-15, -10],\n            [-37, -42],\n            [-12, -42],\n            [-11, 0],\n            [-7, 28],\n            [-36, 2],\n            [-5, 48],\n            [-14, 0],\n            [2, 60],\n            [-33, 43],\n            [-48, -5],\n            [-32, -8],\n            [-27, 53],\n            [-22, 22],\n            [-43, 43],\n            [-6, 5],\n            [-71, -35],\n            [1, -218]\n        ],\n        [\n            [6554, 7498],\n            [-14, -3],\n            [-20, 46],\n            [-18, 17],\n            [-32, -12],\n            [-12, -20]\n        ],\n        [\n            [6458, 7526],\n            [-2, 14],\n            [7, 25],\n            [-5, 21],\n            [-32, 20],\n            [-13, 53],\n            [-15, 15],\n            [-1, 19],\n            [27, -6],\n            [1, 44],\n            [23, 9],\n            [25, -9],\n            [5, 58],\n            [-5, 36],\n            [-28, -2],\n            [-24, 14],\n            [-32, -26],\n            [-26, -12]\n        ],\n        [\n            [6363, 7799],\n            [-14, 9],\n            [3, 31],\n            [-18, 39],\n            [-20, -2],\n            [-24, 40],\n            [16, 45],\n            [-8, 12],\n            [22, 65],\n            [29, -34],\n            [3, 43],\n            [58, 64],\n            [43, 2],\n            [61, -41],\n            [33, -24],\n            [30, 25],\n            [44, 1],\n            [35, -30],\n            [8, 17],\n            [39, -2],\n            [7, 28],\n            [-45, 40],\n            [27, 29],\n            [-5, 16],\n            [26, 15],\n            [-20, 41],\n            [13, 20],\n            [104, 21],\n            [13, 14],\n            [70, 22],\n            [25, 24],\n            [50, -12],\n            [9, -61],\n            [29, 14],\n            [35, -20],\n            [-2, -32],\n            [27, 3],\n            [69, 56],\n            [-10, -19],\n            [35, -46],\n            [62, -150],\n            [15, 31],\n            [39, -34],\n            [39, 16],\n            [16, -11],\n            [13, -34],\n            [20, -12],\n            [11, -25],\n            [36, 8],\n            [15, -36]\n        ],\n        [\n            [7229, 7559],\n            [-17, 9],\n            [-14, 21],\n            [-42, 6],\n            [-46, 2],\n            [-10, -6],\n            [-39, 24],\n            [-16, -12],\n            [-4, -35],\n            [-46, 21],\n            [-18, -9],\n            [-7, -26]\n        ],\n        [\n            [6155, 4958],\n            [-20, -24],\n            [-7, -24],\n            [-10, -4],\n            [-4, -42],\n            [-9, -24],\n            [-5, -39],\n            [-12, -20]\n        ],\n        [\n            [6088, 4781],\n            [-40, 59],\n            [-1, 35],\n            [-101, 120],\n            [-5, 6]\n        ],\n        [\n            [5941, 5001],\n            [0, 63],\n            [8, 24],\n            [14, 39],\n            [10, 43],\n            [-13, 68],\n            [-3, 30],\n            [-13, 41]\n        ],\n        [\n            [5944, 5309],\n            [17, 35],\n            [19, 39]\n        ],\n        [\n            [6162, 5289],\n            [-24, -67],\n            [0, -215],\n            [17, -49]\n        ],\n        [\n            [7046, 7387],\n            [-53, -9],\n            [-34, 19],\n            [-30, -4],\n            [3, 34],\n            [30, -10],\n            [10, 18]\n        ],\n        [\n            [6972, 7435],\n            [21, -6],\n            [36, 43],\n            [-33, 31],\n            [-20, -15],\n            [-21, 22],\n            [24, 39],\n            [-9, 5]\n        ],\n        [\n            [7849, 5777],\n            [-7, 72],\n            [18, 49],\n            [36, 11],\n            [26, -8]\n        ],\n        [\n            [7922, 5901],\n            [23, -23],\n            [12, 40],\n            [25, -21]\n        ],\n        [\n            [7982, 5897],\n            [6, -40],\n            [-3, -71],\n            [-47, -45],\n            [13, -36],\n            [-30, -4],\n            [-24, -24]\n        ],\n        [\n            [7897, 5677],\n            [-23, 9],\n            [-11, 30],\n            [-14, 61]\n        ],\n        [\n            [8564, 7339],\n            [24, -70],\n            [7, -38],\n            [0, -68],\n            [-10, -33],\n            [-25, -11],\n            [-22, -25],\n            [-25, -5],\n            [-3, 32],\n            [5, 45],\n            [-13, 61],\n            [21, 10],\n            [-19, 51]\n        ],\n        [\n            [8504, 7288],\n            [2, 5],\n            [12, -2],\n            [11, 27],\n            [20, 2],\n            [11, 4],\n            [4, 15]\n        ],\n        [\n            [5557, 7574],\n            [5, 13]\n        ],\n        [\n            [5562, 7587],\n            [7, 4],\n            [4, 20],\n            [5, 3],\n            [4, -8],\n            [5, -4],\n            [3, -10],\n            [5, -2],\n            [5, -11],\n            [4, 0],\n            [-3, -14],\n            [-3, -7],\n            [1, -5]\n        ],\n        [\n            [5599, 7553],\n            [-6, -2],\n            [-17, -9],\n            [-1, -12],\n            [-4, 0]\n        ],\n        [\n            [6332, 6828],\n            [6, -26],\n            [-3, -13],\n            [9, -45]\n        ],\n        [\n            [6344, 6744],\n            [-19, -1],\n            [-7, 28],\n            [-25, 6]\n        ],\n        [\n            [7922, 5901],\n            [9, 26],\n            [1, 50],\n            [-22, 52],\n            [-2, 58],\n            [-21, 48],\n            [-21, 4],\n            [-6, -20],\n            [-16, -2],\n            [-8, 10],\n            [-30, -35],\n            [0, 53],\n            [7, 62],\n            [-19, 3],\n            [-2, 36],\n            [-12, 18]\n        ],\n        [\n            [7780, 6264],\n            [6, 21],\n            [24, 39]\n        ],\n        [\n            [7837, 6385],\n            [17, -47],\n            [12, -54],\n            [34, 0],\n            [11, -52],\n            [-18, -15],\n            [-8, -21],\n            [34, -36],\n            [23, -70],\n            [17, -52],\n            [21, -41],\n            [7, -41],\n            [-5, -59]\n        ],\n        [\n            [5975, 7012],\n            [10, 49],\n            [14, 41],\n            [0, 2]\n        ],\n        [\n            [5999, 7104],\n            [13, -3],\n            [4, -23],\n            [-15, -22],\n            [-7, -33]\n        ],\n        [\n            [4785, 5315],\n            [-7, 0],\n            [-29, 28],\n            [-25, 45],\n            [-24, 32],\n            [-18, 38]\n        ],\n        [\n            [4682, 5458],\n            [6, 19],\n            [2, 17],\n            [12, 33],\n            [13, 27]\n        ],\n        [\n            [5412, 6408],\n            [-20, -22],\n            [-15, 33],\n            [-44, 25]\n        ],\n        [\n            [5263, 6848],\n            [13, 14],\n            [3, 25],\n            [-3, 24],\n            [19, 23],\n            [8, 19],\n            [14, 17],\n            [2, 45]\n        ],\n        [\n            [5319, 7015],\n            [32, -20],\n            [12, 5],\n            [23, -10],\n            [37, -26],\n            [13, -53],\n            [25, -11],\n            [39, -25],\n            [30, -29],\n            [13, 15],\n            [13, 27],\n            [-6, 45],\n            [9, 29],\n            [20, 28],\n            [19, 8],\n            [37, -12],\n            [10, -27],\n            [10, 0],\n            [9, -10],\n            [28, -7],\n            [6, -19]\n        ],\n        [\n            [5694, 6357],\n            [0, -118],\n            [-32, 0],\n            [0, -25]\n        ],\n        [\n            [5662, 6214],\n            [-111, 113],\n            [-111, 113],\n            [-28, -32]\n        ],\n        [\n            [7271, 5502],\n            [-4, -62],\n            [-12, -16],\n            [-24, -14],\n            [-13, 47],\n            [-5, 85],\n            [13, 96],\n            [19, -33],\n            [13, -42],\n            [13, -61]\n        ],\n        [\n            [5804, 3347],\n            [10, -18],\n            [-9, -29],\n            [-4, -19],\n            [-16, -9],\n            [-5, -19],\n            [-10, -6],\n            [-21, 46],\n            [15, 37],\n            [15, 23],\n            [13, 12],\n            [12, -18]\n        ],\n        [\n            [5631, 8267],\n            [-2, 15],\n            [3, 16],\n            [-13, 10],\n            [-29, 10]\n        ],\n        [\n            [5590, 8318],\n            [-6, 50]\n        ],\n        [\n            [5584, 8368],\n            [32, 18],\n            [47, -4],\n            [27, 6],\n            [4, -12],\n            [15, -4],\n            [26, -29]\n        ],\n        [\n            [5652, 8242],\n            [-7, 19],\n            [-14, 6]\n        ],\n        [\n            [5584, 8368],\n            [1, 44],\n            [14, 37],\n            [26, 20],\n            [22, -44],\n            [22, 1],\n            [6, 46]\n        ],\n        [\n            [5757, 8453],\n            [14, -14],\n            [2, -28],\n            [9, -35]\n        ],\n        [\n            [4759, 6691],\n            [-4, 0],\n            [0, -31],\n            [-17, -2],\n            [-9, -14],\n            [-13, 0],\n            [-10, 8],\n            [-23, -6],\n            [-9, -46],\n            [-9, -5],\n            [-13, -74],\n            [-38, -64],\n            [-9, -81],\n            [-12, -27],\n            [-3, -21],\n            [-63, -5]\n        ],\n        [\n            [4527, 6323],\n            [1, 27],\n            [11, 17],\n            [9, 30],\n            [-2, 20],\n            [10, 42],\n            [15, 38],\n            [9, 9],\n            [8, 35],\n            [0, 31],\n            [10, 37],\n            [19, 21],\n            [18, 60],\n            [0, 1],\n            [14, 23],\n            [26, 6],\n            [22, 41],\n            [14, 16],\n            [23, 49],\n            [-7, 73],\n            [10, 51],\n            [4, 31],\n            [18, 40],\n            [28, 27],\n            [21, 25],\n            [18, 61],\n            [9, 36],\n            [20, 0],\n            [17, -25],\n            [26, 4],\n            [29, -13],\n            [12, -1]\n        ],\n        [\n            [5739, 7906],\n            [6, 9],\n            [19, 6],\n            [20, -19],\n            [12, -2],\n            [12, -16],\n            [-2, -20],\n            [11, -9],\n            [4, -25],\n            [9, -15],\n            [-2, -9],\n            [5, -6],\n            [-7, -4],\n            [-16, 1],\n            [-3, 9],\n            [-6, -5],\n            [2, -11],\n            [-7, -19],\n            [-5, -20],\n            [-7, -6]\n        ],\n        [\n            [5784, 7745],\n            [-5, 27],\n            [3, 25],\n            [-1, 26],\n            [-16, 35],\n            [-9, 25],\n            [-9, 17],\n            [-8, 6]\n        ],\n        [\n            [6376, 4321],\n            [7, -25],\n            [7, -39],\n            [4, -71],\n            [7, -28],\n            [-2, -28],\n            [-5, -18],\n            [-10, 35],\n            [-5, -18],\n            [5, -43],\n            [-2, -25],\n            [-8, -14],\n            [-1, -50],\n            [-11, -69],\n            [-14, -81],\n            [-17, -112],\n            [-11, -82],\n            [-12, -69],\n            [-23, -14],\n            [-24, -25],\n            [-16, 15],\n            [-22, 21],\n            [-8, 31],\n            [-2, 53],\n            [-10, 47],\n            [-2, 42],\n            [5, 43],\n            [13, 10],\n            [0, 20],\n            [13, 45],\n            [2, 37],\n            [-6, 28],\n            [-5, 38],\n            [-2, 54],\n            [9, 33],\n            [4, 38],\n            [14, 2],\n            [15, 12],\n            [11, 10],\n            [12, 1],\n            [16, 34],\n            [23, 36],\n            [8, 30],\n            [-4, 25],\n            [12, -7],\n            [15, 41],\n            [1, 36],\n            [9, 26],\n            [10, -25]\n        ],\n        [\n            [2301, 6586],\n            [-10, -52],\n            [-5, -43],\n            [-2, -79],\n            [-3, -29],\n            [5, -32],\n            [9, -29],\n            [5, -45],\n            [19, -44],\n            [6, -34],\n            [11, -29],\n            [29, -16],\n            [12, -25],\n            [24, 17],\n            [21, 6],\n            [21, 11],\n            [18, 10],\n            [17, 24],\n            [7, 34],\n            [2, 50],\n            [5, 17],\n            [19, 16],\n            [29, 13],\n            [25, -2],\n            [17, 5],\n            [6, -12],\n            [-1, -29],\n            [-15, -35],\n            [-6, -36],\n            [5, -10],\n            [-4, -26],\n            [-7, -46],\n            [-7, 15],\n            [-6, -1]\n        ],\n        [\n            [2438, 5916],\n            [-32, 64],\n            [-14, 19],\n            [-23, 16],\n            [-15, -5],\n            [-22, -22],\n            [-14, -6],\n            [-20, 16],\n            [-21, 11],\n            [-26, 27],\n            [-21, 8],\n            [-31, 28],\n            [-23, 28],\n            [-7, 16],\n            [-16, 3],\n            [-28, 19],\n            [-12, 27],\n            [-30, 34],\n            [-14, 37],\n            [-6, 29],\n            [9, 5],\n            [-3, 17],\n            [7, 16],\n            [0, 20],\n            [-10, 27],\n            [-2, 23],\n            [-9, 30],\n            [-25, 59],\n            [-28, 46],\n            [-13, 37],\n            [-24, 24],\n            [-5, 14],\n            [4, 37],\n            [-14, 13],\n            [-17, 29],\n            [-7, 41],\n            [-14, 5],\n            [-17, 31],\n            [-13, 29],\n            [-1, 19],\n            [-15, 44],\n            [-10, 45],\n            [1, 23],\n            [-20, 23],\n            [-10, -2],\n            [-15, 16],\n            [-5, -24],\n            [5, -28],\n            [2, -45],\n            [10, -24],\n            [21, -41],\n            [4, -14],\n            [4, -4],\n            [4, -20],\n            [5, 1],\n            [6, -38],\n            [8, -15],\n            [6, -21],\n            [17, -30],\n            [10, -55],\n            [8, -26],\n            [8, -28],\n            [1, -31],\n            [13, -2],\n            [12, -27],\n            [10, -26],\n            [-1, -11],\n            [-12, -21],\n            [-5, 0],\n            [-7, 36],\n            [-18, 33],\n            [-20, 29],\n            [-14, 15],\n            [1, 43],\n            [-5, 32],\n            [-13, 19],\n            [-19, 26],\n            [-4, -8],\n            [-7, 16],\n            [-17, 14],\n            [-16, 34],\n            [2, 5],\n            [11, -4],\n            [11, 22],\n            [1, 27],\n            [-22, 42],\n            [-16, 17],\n            [-10, 36],\n            [-11, 39],\n            [-12, 47],\n            [-12, 54]\n        ],\n        [\n            [1746, 6980],\n            [32, 4],\n            [35, 7],\n            [-2, -12],\n            [41, -29],\n            [64, -41],\n            [55, 0],\n            [22, 0],\n            [0, 24],\n            [48, 0],\n            [10, -20],\n            [15, -19],\n            [16, -26],\n            [9, -31],\n            [7, -32],\n            [15, -18],\n            [23, -18],\n            [17, 47],\n            [23, 1],\n            [19, -24],\n            [14, -40],\n            [10, -35],\n            [16, -34],\n            [6, -41],\n            [8, -28],\n            [22, -18],\n            [20, -13],\n            [10, 2]\n        ],\n        [\n            [5599, 7553],\n            [9, 4],\n            [13, 1]\n        ],\n        [\n            [4661, 5921],\n            [10, 11],\n            [4, 35],\n            [9, 1],\n            [20, -16],\n            [15, 11],\n            [11, -4],\n            [4, 13],\n            [112, 1],\n            [6, 42],\n            [-5, 7],\n            [-13, 255],\n            [-14, 255],\n            [43, 1]\n        ],\n        [\n            [5118, 6189],\n            [0, -136],\n            [-15, -39],\n            [-2, -37],\n            [-25, -9],\n            [-38, -5],\n            [-10, -21],\n            [-18, -3]\n        ],\n        [\n            [4680, 5793],\n            [1, 18],\n            [-2, 23],\n            [-11, 16],\n            [-5, 34],\n            [-2, 37]\n        ],\n        [\n            [7737, 5644],\n            [-3, 44],\n            [9, 45],\n            [-10, 35],\n            [3, 65],\n            [-12, 30],\n            [-9, 71],\n            [-5, 75],\n            [-12, 49],\n            [-18, -30],\n            [-32, -42],\n            [-15, 5],\n            [-17, 14],\n            [9, 73],\n            [-6, 56],\n            [-21, 68],\n            [3, 21],\n            [-16, 7],\n            [-20, 49]\n        ],\n        [\n            [7780, 6264],\n            [-16, -14],\n            [-16, -26],\n            [-20, -2],\n            [-12, -64],\n            [-12, -11],\n            [14, -52],\n            [17, -43],\n            [12, -39],\n            [-11, -51],\n            [-9, -11],\n            [6, -30],\n            [19, -47],\n            [3, -33],\n            [0, -27],\n            [11, -54],\n            [-16, -55],\n            [-13, -61]\n        ],\n        [\n            [5538, 7532],\n            [-6, 4],\n            [-8, 19],\n            [-12, 12]\n        ],\n        [\n            [5533, 7629],\n            [8, -10],\n            [4, -9],\n            [9, -6],\n            [10, -12],\n            [-2, -5]\n        ],\n        [\n            [7437, 7970],\n            [29, 10],\n            [53, 51],\n            [42, 28],\n            [24, -18],\n            [29, -1],\n            [19, -28],\n            [28, -2],\n            [40, -15],\n            [27, 41],\n            [-11, 35],\n            [28, 61],\n            [31, -24],\n            [26, -7],\n            [32, -15],\n            [6, -44],\n            [39, -25],\n            [26, 11],\n            [36, 7],\n            [27, -7],\n            [28, -29],\n            [16, -30],\n            [26, 1],\n            [35, -10],\n            [26, 15],\n            [36, 9],\n            [41, 42],\n            [17, -6],\n            [14, -20],\n            [33, 5]\n        ],\n        [\n            [5959, 4377],\n            [21, 5],\n            [34, -17],\n            [7, 8],\n            [19, 1],\n            [10, 18],\n            [17, -1],\n            [30, 23],\n            [22, 34]\n        ],\n        [\n            [6119, 4448],\n            [5, -26],\n            [-1, -59],\n            [3, -52],\n            [1, -92],\n            [5, -29],\n            [-8, -43],\n            [-11, -41],\n            [-18, -36],\n            [-25, -23],\n            [-31, -28],\n            [-32, -64],\n            [-10, -11],\n            [-20, -42],\n            [-11, -13],\n            [-3, -42],\n            [14, -45],\n            [5, -35],\n            [0, -17],\n            [5, 3],\n            [-1, -58],\n            [-4, -28],\n            [6, -10],\n            [-4, -25],\n            [-11, -21],\n            [-23, -20],\n            [-34, -32],\n            [-12, -21],\n            [3, -25],\n            [7, -4],\n            [-3, -31]\n        ],\n        [\n            [5911, 3478],\n            [-21, 0]\n        ],\n        [\n            [5890, 3478],\n            [-2, 26],\n            [-4, 27]\n        ],\n        [\n            [5884, 3531],\n            [-3, 21],\n            [5, 66],\n            [-7, 42],\n            [-13, 83]\n        ],\n        [\n            [5866, 3743],\n            [29, 67],\n            [7, 43],\n            [5, 5],\n            [3, 35],\n            [-5, 17],\n            [1, 44],\n            [6, 41],\n            [0, 75],\n            [-15, 19],\n            [-13, 4],\n            [-6, 15],\n            [-13, 12],\n            [-23, -1],\n            [-2, 22]\n        ],\n        [\n            [5840, 4141],\n            [-2, 42],\n            [84, 49]\n        ],\n        [\n            [5922, 4232],\n            [16, -28],\n            [8, 5],\n            [11, -15],\n            [1, -23],\n            [-6, -28],\n            [2, -42],\n            [19, -36],\n            [8, 41],\n            [12, 12],\n            [-2, 76],\n            [-12, 43],\n            [-10, 19],\n            [-10, -1],\n            [-7, 77],\n            [7, 45]\n        ],\n        [\n            [4661, 5921],\n            [-18, 41],\n            [-17, 43],\n            [-18, 16],\n            [-13, 17],\n            [-16, -1],\n            [-13, -12],\n            [-14, 5],\n            [-10, -19]\n        ],\n        [\n            [4542, 6011],\n            [-2, 32],\n            [8, 29],\n            [3, 55],\n            [-3, 59],\n            [-3, 29],\n            [2, 30],\n            [-7, 28],\n            [-14, 25]\n        ],\n        [\n            [4526, 6298],\n            [6, 20],\n            [108, -1],\n            [-5, 86],\n            [7, 30],\n            [26, 5],\n            [-1, 152],\n            [91, -4],\n            [0, 90]\n        ],\n        [\n            [5922, 4232],\n            [-15, 15],\n            [9, 55],\n            [9, 21],\n            [-6, 49],\n            [6, 48],\n            [5, 16],\n            [-7, 50],\n            [-14, 26]\n        ],\n        [\n            [5909, 4512],\n            [28, -11],\n            [5, -16],\n            [10, -28],\n            [7, -80]\n        ],\n        [\n            [7836, 5425],\n            [7, -5],\n            [16, -36],\n            [12, -40],\n            [2, -39],\n            [-3, -27],\n            [2, -21],\n            [2, -35],\n            [10, -16],\n            [11, -52],\n            [-1, -20],\n            [-19, -4],\n            [-27, 44],\n            [-32, 47],\n            [-4, 30],\n            [-16, 39],\n            [-4, 49],\n            [-10, 32],\n            [4, 43],\n            [-7, 25]\n        ],\n        [\n            [7779, 5439],\n            [5, 11],\n            [23, -26],\n            [2, -30],\n            [18, 7],\n            [9, 24]\n        ],\n        [\n            [8045, 5176],\n            [21, -20],\n            [21, 11],\n            [6, 50],\n            [12, 11],\n            [33, 13],\n            [20, 47],\n            [14, 37]\n        ],\n        [\n            [8206, 5379],\n            [22, 41],\n            [14, 47],\n            [11, 0],\n            [14, -30],\n            [1, -26],\n            [19, -16],\n            [23, -18],\n            [-2, -23],\n            [-19, -3],\n            [5, -29],\n            [-20, -20]\n        ],\n        [\n            [5453, 3369],\n            [-20, 45],\n            [-11, 43],\n            [-6, 58],\n            [-7, 42],\n            [-9, 91],\n            [-1, 71],\n            [-3, 32],\n            [-11, 25],\n            [-15, 48],\n            [-14, 71],\n            [-6, 37],\n            [-23, 58],\n            [-2, 45]\n        ],\n        [\n            [5644, 4022],\n            [23, 14],\n            [18, -4],\n            [11, -13],\n            [0, -5]\n        ],\n        [\n            [5552, 3594],\n            [0, -218],\n            [-25, -30],\n            [-15, -4],\n            [-17, 11],\n            [-13, 4],\n            [-4, 25],\n            [-11, 17],\n            [-14, -30]\n        ],\n        [\n            [9604, 3812],\n            [23, -36],\n            [14, -28],\n            [-10, -14],\n            [-16, 16],\n            [-19, 27],\n            [-18, 31],\n            [-19, 42],\n            [-4, 20],\n            [12, -1],\n            [16, -20],\n            [12, -20],\n            [9, -17]\n        ],\n        [\n            [5412, 6408],\n            [7, -92],\n            [10, -15],\n            [1, -19],\n            [11, -20],\n            [-6, -25],\n            [-11, -120],\n            [-1, -77],\n            [-35, -56],\n            [-12, -78],\n            [11, -22],\n            [0, -38],\n            [18, -1],\n            [-3, -28]\n        ],\n        [\n            [5393, 5795],\n            [-5, -1],\n            [-19, 64],\n            [-6, 3],\n            [-22, -33],\n            [-21, 17],\n            [-15, 3],\n            [-8, -8],\n            [-17, 2],\n            [-16, -25],\n            [-14, -2],\n            [-34, 31],\n            [-13, -15],\n            [-14, 1],\n            [-10, 23],\n            [-28, 22],\n            [-30, -7],\n            [-7, -13],\n            [-4, -34],\n            [-8, -24],\n            [-2, -53]\n        ],\n        [\n            [5236, 5339],\n            [-29, -21],\n            [-11, 3],\n            [-10, -13],\n            [-23, 1],\n            [-15, 37],\n            [-9, 43],\n            [-19, 39],\n            [-21, -1],\n            [-25, 0]\n        ],\n        [\n            [2619, 5713],\n            [-10, 18],\n            [-13, 24],\n            [-6, 20],\n            [-12, 19],\n            [-13, 26],\n            [3, 9],\n            [4, -9],\n            [2, 5]\n        ],\n        [\n            [2690, 5943],\n            [-2, -5],\n            [-2, -13],\n            [3, -22],\n            [-6, -20],\n            [-3, -24],\n            [-1, -26],\n            [1, -15],\n            [1, -27],\n            [-4, -6],\n            [-3, -25],\n            [2, -15],\n            [-6, -16],\n            [2, -16],\n            [4, -9]\n        ],\n        [\n            [5092, 8091],\n            [14, 16],\n            [24, 87],\n            [38, 25],\n            [23, -2]\n        ],\n        [\n            [5863, 9167],\n            [-47, -24],\n            [-22, -5]\n        ],\n        [\n            [5573, 9140],\n            [-17, -2],\n            [-4, -39],\n            [-53, 9],\n            [-7, -33],\n            [-27, 1],\n            [-18, -42],\n            [-28, -66],\n            [-43, -83],\n            [10, -20],\n            [-10, -24],\n            [-27, 1],\n            [-18, -55],\n            [2, -79],\n            [17, -29],\n            [-9, -70],\n            [-23, -40],\n            [-12, -34]\n        ],\n        [\n            [5306, 8535],\n            [-19, 36],\n            [-55, -69],\n            [-37, -13],\n            [-38, 30],\n            [-10, 63],\n            [-9, 137],\n            [26, 38],\n            [73, 49],\n            [55, 61],\n            [51, 82],\n            [66, 115],\n            [47, 44],\n            [76, 74],\n            [61, 26],\n            [46, -3],\n            [42, 49],\n            [51, -3],\n            [50, 12],\n            [87, -43],\n            [-36, -16],\n            [30, -37]\n        ],\n        [\n            [5686, 9657],\n            [-62, -24],\n            [-49, 13],\n            [19, 16],\n            [-16, 19],\n            [57, 11],\n            [11, -22],\n            [40, -13]\n        ],\n        [\n            [5506, 9766],\n            [92, -44],\n            [-70, -23],\n            [-15, -44],\n            [-25, -11],\n            [-13, -49],\n            [-34, -2],\n            [-59, 36],\n            [25, 21],\n            [-42, 17],\n            [-54, 50],\n            [-21, 46],\n            [75, 21],\n            [16, -20],\n            [39, 0],\n            [11, 21],\n            [40, 2],\n            [35, -21]\n        ],\n        [\n            [5706, 9808],\n            [55, -21],\n            [-41, -32],\n            [-81, -7],\n            [-82, 10],\n            [-5, 16],\n            [-40, 1],\n            [-30, 27],\n            [86, 17],\n            [40, -14],\n            [28, 17],\n            [70, -14]\n        ],\n        [\n            [9805, 2640],\n            [6, -24],\n            [20, 24],\n            [8, -25],\n            [0, -25],\n            [-10, -27],\n            [-18, -44],\n            [-14, -24],\n            [10, -28],\n            [-22, -1],\n            [-23, -22],\n            [-8, -39],\n            [-16, -60],\n            [-21, -26],\n            [-14, -17],\n            [-26, 1],\n            [-18, 20],\n            [-30, 4],\n            [-5, 22],\n            [15, 43],\n            [35, 59],\n            [18, 11],\n            [20, 22],\n            [24, 31],\n            [16, 31],\n            [13, 44],\n            [10, 15],\n            [5, 33],\n            [19, 27],\n            [6, -25]\n        ],\n        [\n            [9849, 2922],\n            [20, -63],\n            [1, 41],\n            [13, -16],\n            [4, -45],\n            [22, -19],\n            [19, -5],\n            [16, 22],\n            [14, -6],\n            [-7, -53],\n            [-8, -34],\n            [-22, 1],\n            [-7, -18],\n            [3, -25],\n            [-4, -11],\n            [-11, -32],\n            [-14, -41],\n            [-21, -23],\n            [-5, 15],\n            [-12, 9],\n            [16, 48],\n            [-9, 33],\n            [-30, 23],\n            [1, 22],\n            [20, 20],\n            [5, 46],\n            [-1, 38],\n            [-12, 40],\n            [1, 10],\n            [-13, 25],\n            [-22, 52],\n            [-12, 42],\n            [11, 4],\n            [15, -33],\n            [21, -15],\n            [8, -52]\n        ],\n        [\n            [6475, 6041],\n            [-9, 41],\n            [-22, 98]\n        ],\n        [\n            [6444, 6180],\n            [83, 59],\n            [19, 118],\n            [-13, 42]\n        ],\n        [\n            [6566, 6530],\n            [12, -40],\n            [16, -22],\n            [20, -8],\n            [17, -10],\n            [12, -34],\n            [8, -20],\n            [10, -7],\n            [0, -13],\n            [-10, -36],\n            [-5, -16],\n            [-12, -19],\n            [-10, -41],\n            [-13, 3],\n            [-5, -14],\n            [-5, -30],\n            [4, -39],\n            [-3, -7],\n            [-13, 0],\n            [-17, -22],\n            [-3, -29],\n            [-6, -12],\n            [-18, 0],\n            [-10, -15],\n            [0, -24],\n            [-14, -16],\n            [-15, 5],\n            [-19, -19],\n            [-12, -4]\n        ],\n        [\n            [6557, 6597],\n            [8, 20],\n            [3, -5],\n            [-2, -25],\n            [-4, -10]\n        ],\n        [\n            [6893, 6457],\n            [-20, 15],\n            [-9, 43],\n            [-21, 45],\n            [-51, -12],\n            [-45, -1],\n            [-39, -8]\n        ],\n        [\n            [2836, 5484],\n            [-9, 17],\n            [-6, 32],\n            [7, 16],\n            [-7, 4],\n            [-5, 20],\n            [-14, 16],\n            [-12, -4],\n            [-6, -20],\n            [-11, -15],\n            [-6, -2],\n            [-3, -13],\n            [13, -32],\n            [-7, -7],\n            [-4, -9],\n            [-13, -3],\n            [-5, 35],\n            [-4, -10],\n            [-9, 4],\n            [-5, 24],\n            [-12, 3],\n            [-7, 7],\n            [-12, 0],\n            [-1, -13],\n            [-3, 9]\n        ],\n        [\n            [2707, 5623],\n            [10, -22],\n            [-1, -12],\n            [11, -3],\n            [3, 5],\n            [8, -14],\n            [13, 4],\n            [12, 15],\n            [17, 12],\n            [9, 17],\n            [16, -3],\n            [-1, -6],\n            [15, -2],\n            [12, -10],\n            [10, -18],\n            [10, -16]\n        ],\n        [\n            [3045, 3974],\n            [-28, 33],\n            [-2, 25],\n            [-55, 59],\n            [-50, 65],\n            [-22, 36],\n            [-11, 49],\n            [4, 17],\n            [-23, 77],\n            [-28, 109],\n            [-26, 118],\n            [-11, 27],\n            [-9, 43],\n            [-21, 39],\n            [-20, 24],\n            [9, 26],\n            [-14, 57],\n            [9, 41],\n            [22, 37]\n        ],\n        [\n            [8510, 5555],\n            [2, -40],\n            [2, -33],\n            [-9, -54],\n            [-11, 60],\n            [-13, -30],\n            [9, -43],\n            [-8, -28],\n            [-32, 35],\n            [-8, 42],\n            [8, 28],\n            [-17, 28],\n            [-9, -24],\n            [-13, 2],\n            [-21, -33],\n            [-4, 17],\n            [11, 50],\n            [17, 17],\n            [15, 22],\n            [10, -27],\n            [21, 17],\n            [5, 26],\n            [19, 1],\n            [-1, 46],\n            [22, -28],\n            [3, -30],\n            [2, -21]\n        ],\n        [\n            [8443, 5665],\n            [-10, -20],\n            [-9, -37],\n            [-8, -17],\n            [-17, 40],\n            [5, 16],\n            [7, 17],\n            [3, 36],\n            [16, 4],\n            [-5, -40],\n            [21, 57],\n            [-3, -56]\n        ],\n        [\n            [8291, 5608],\n            [-37, -56],\n            [14, 41],\n            [20, 37],\n            [16, 41],\n            [15, 58],\n            [5, -48],\n            [-18, -33],\n            [-15, -40]\n        ],\n        [\n            [8385, 5760],\n            [16, -18],\n            [18, 0],\n            [0, -25],\n            [-13, -25],\n            [-18, -18],\n            [-1, 28],\n            [2, 30],\n            [-4, 28]\n        ],\n        [\n            [8485, 5776],\n            [8, -66],\n            [-21, 16],\n            [0, -20],\n            [7, -37],\n            [-13, -13],\n            [-1, 42],\n            [-9, 3],\n            [-4, 36],\n            [16, -5],\n            [0, 22],\n            [-17, 45],\n            [27, -1],\n            [7, -22]\n        ],\n        [\n            [8375, 5830],\n            [-7, -51],\n            [-12, 29],\n            [-15, 45],\n            [24, -2],\n            [10, -21]\n        ],\n        [\n            [8369, 6151],\n            [17, -17],\n            [9, 15],\n            [2, -15],\n            [-4, -24],\n            [9, -43],\n            [-7, -49],\n            [-16, -19],\n            [-5, -48],\n            [7, -47],\n            [14, -7],\n            [13, 7],\n            [34, -32],\n            [-2, -32],\n            [9, -15],\n            [-3, -27],\n            [-22, 29],\n            [-10, 31],\n            [-7, -22],\n            [-18, 36],\n            [-25, -9],\n            [-14, 13],\n            [1, 25],\n            [9, 15],\n            [-8, 13],\n            [-4, -21],\n            [-14, 34],\n            [-4, 26],\n            [-1, 56],\n            [11, -19],\n            [3, 92],\n            [9, 54],\n            [17, 0]\n        ],\n        [\n            [9329, 4655],\n            [-8, -6],\n            [-12, 22],\n            [-12, 38],\n            [-6, 45],\n            [4, 6],\n            [3, -18],\n            [8, -13],\n            [14, -38],\n            [13, -20],\n            [-4, -16]\n        ],\n        [\n            [9221, 4734],\n            [-15, -5],\n            [-4, -17],\n            [-15, -14],\n            [-15, -14],\n            [-14, 0],\n            [-23, 18],\n            [-16, 16],\n            [2, 18],\n            [25, -8],\n            [15, 4],\n            [5, 29],\n            [4, 1],\n            [2, -31],\n            [16, 4],\n            [8, 20],\n            [16, 21],\n            [-4, 35],\n            [17, 1],\n            [6, -9],\n            [-1, -33],\n            [-9, -36]\n        ],\n        [\n            [8916, 4904],\n            [48, -41],\n            [51, -34],\n            [19, -30],\n            [16, -30],\n            [4, -34],\n            [46, -37],\n            [7, -31],\n            [-25, -7],\n            [6, -39],\n            [25, -39],\n            [18, -62],\n            [15, 2],\n            [-1, -27],\n            [22, -10],\n            [-9, -11],\n            [30, -25],\n            [-3, -17],\n            [-18, -4],\n            [-7, 16],\n            [-24, 6],\n            [-28, 9],\n            [-22, 38],\n            [-16, 32],\n            [-14, 52],\n            [-36, 26],\n            [-24, -17],\n            [-17, -20],\n            [4, -43],\n            [-22, -20],\n            [-16, 9],\n            [-28, 3]\n        ],\n        [\n            [9253, 4792],\n            [-9, -16],\n            [-5, 35],\n            [-6, 23],\n            [-13, 19],\n            [-16, 25],\n            [-20, 18],\n            [8, 14],\n            [15, -17],\n            [9, -13],\n            [12, -14],\n            [11, -25],\n            [11, -19],\n            [3, -30]\n        ],\n        [\n            [5392, 8233],\n            [19, 18],\n            [43, 27],\n            [35, 20],\n            [28, -10],\n            [2, -14],\n            [27, -1]\n        ],\n        [\n            [5546, 8273],\n            [34, -7],\n            [51, 1]\n        ],\n        [\n            [5653, 8105],\n            [14, -52],\n            [-3, -17],\n            [-14, -6],\n            [-25, -50],\n            [7, -26],\n            [-6, 3]\n        ],\n        [\n            [5626, 7957],\n            [-26, 23],\n            [-20, -8],\n            [-13, 6],\n            [-17, -13],\n            [-14, 21],\n            [-11, -8],\n            [-2, 4]\n        ],\n        [\n            [3159, 6151],\n            [14, -5],\n            [5, -12],\n            [-7, -15],\n            [-21, 1],\n            [-17, -2],\n            [-1, 25],\n            [4, 9],\n            [23, -1]\n        ],\n        [\n            [8628, 7562],\n            [4, -10]\n        ],\n        [\n            [8632, 7552],\n            [-11, 3],\n            [-12, -20],\n            [-8, -20],\n            [1, -42],\n            [-14, -13],\n            [-5, -11],\n            [-11, -17],\n            [-18, -10],\n            [-12, -16],\n            [-1, -25],\n            [-3, -7],\n            [11, -9],\n            [15, -26]\n        ],\n        [\n            [8504, 7288],\n            [-13, 11],\n            [-4, -11],\n            [-8, -5],\n            [-1, 11],\n            [-7, 5],\n            [-8, 10],\n            [8, 26],\n            [7, 7],\n            [-3, 11],\n            [7, 31],\n            [-2, 10],\n            [-16, 7],\n            [-13, 15]\n        ],\n        [\n            [4792, 7249],\n            [-11, -15],\n            [-14, 8],\n            [-15, -6],\n            [5, 46],\n            [-3, 36],\n            [-12, 6],\n            [-7, 22],\n            [2, 39],\n            [11, 21],\n            [2, 24],\n            [6, 36],\n            [-1, 25],\n            [-5, 21],\n            [-1, 20]\n        ],\n        [\n            [6411, 6520],\n            [-2, 43],\n            [7, 31],\n            [8, 6],\n            [8, -18],\n            [1, -35],\n            [-6, -35]\n        ],\n        [\n            [6427, 6512],\n            [-8, -4],\n            [-8, 12]\n        ],\n        [\n            [5630, 7886],\n            [12, 13],\n            [17, -7],\n            [18, 0],\n            [13, -14],\n            [10, 9],\n            [20, 5],\n            [7, 14],\n            [12, 0]\n        ],\n        [\n            [5784, 7745],\n            [12, -11],\n            [13, 9],\n            [13, -10]\n        ],\n        [\n            [5822, 7733],\n            [0, -15],\n            [-13, -13],\n            [-9, 6],\n            [-7, -71]\n        ],\n        [\n            [5629, 7671],\n            [-5, 10],\n            [6, 10],\n            [-7, 7],\n            [-8, -13],\n            [-17, 17],\n            [-2, 25],\n            [-17, 14],\n            [-3, 18],\n            [-15, 24]\n        ],\n        [\n            [8989, 8056],\n            [28, -105],\n            [-41, 19],\n            [-17, -85],\n            [27, -61],\n            [-1, -41],\n            [-21, 36],\n            [-18, -46],\n            [-5, 50],\n            [3, 57],\n            [-3, 64],\n            [6, 45],\n            [2, 79],\n            [-17, 58],\n            [3, 80],\n            [25, 28],\n            [-11, 27],\n            [13, 8],\n            [7, -39],\n            [10, -57],\n            [-1, -58],\n            [11, -59]\n        ],\n        [\n            [5546, 8273],\n            [6, 26],\n            [38, 19]\n        ],\n        [\n            [0, 9132],\n            [68, -45],\n            [73, -59],\n            [-3, -37],\n            [19, -15],\n            [-6, 43],\n            [75, -8],\n            [55, -56],\n            [-28, -26],\n            [-46, -6],\n            [0, -57],\n            [-11, -13],\n            [-26, 2],\n            [-22, 21],\n            [-36, 17],\n            [-7, 26],\n            [-28, 9],\n            [-31, -7],\n            [-16, 20],\n            [6, 22],\n            [-33, -14],\n            [13, -28],\n            [-16, -25]\n        ],\n        [\n            [0, 8896],\n            [0, 236]\n        ],\n        [\n            [0, 9282],\n            [9999, -40],\n            [-30, -3],\n            [-5, 19],\n            [-9964, 24]\n        ],\n        [\n            [0, 9282],\n            [4, 3],\n            [23, 0],\n            [40, -17],\n            [-2, -8],\n            [-29, -14],\n            [-36, -4],\n            [0, 40]\n        ],\n        [\n            [8988, 9383],\n            [-42, -1],\n            [-57, 7],\n            [-5, 3],\n            [27, 23],\n            [34, 6],\n            [40, -23],\n            [3, -15]\n        ],\n        [\n            [9186, 9493],\n            [-32, -23],\n            [-44, 5],\n            [-52, 23],\n            [7, 20],\n            [51, -9],\n            [70, -16]\n        ],\n        [\n            [9029, 9522],\n            [-22, -44],\n            [-102, 1],\n            [-46, -14],\n            [-55, 39],\n            [15, 40],\n            [37, 11],\n            [73, -2],\n            [100, -31]\n        ],\n        [\n            [6598, 9235],\n            [-17, -5],\n            [-91, 8],\n            [-7, 26],\n            [-50, 16],\n            [-4, 32],\n            [28, 13],\n            [-1, 32],\n            [55, 50],\n            [-25, 7],\n            [66, 52],\n            [-7, 27],\n            [62, 31],\n            [91, 38],\n            [93, 11],\n            [48, 22],\n            [54, 8],\n            [19, -23],\n            [-19, -19],\n            [-98, -29],\n            [-85, -28],\n            [-86, -57],\n            [-42, -57],\n            [-43, -57],\n            [5, -49],\n            [54, -49]\n        ],\n        [\n            [0, 8896],\n            [9963, -26],\n            [-36, 4],\n            [25, -31],\n            [17, -49],\n            [13, -16],\n            [3, -24],\n            [-7, -16],\n            [-52, 13],\n            [-78, -44],\n            [-25, -7],\n            [-42, -42],\n            [-40, -36],\n            [-11, -27],\n            [-39, 41],\n            [-73, -46],\n            [-12, 22],\n            [-27, -26],\n            [-37, 8],\n            [-9, -38],\n            [-33, -58],\n            [1, -24],\n            [31, -13],\n            [-4, -86],\n            [-25, -2],\n            [-12, -49],\n            [11, -26],\n            [-48, -30],\n            [-10, -67],\n            [-41, -15],\n            [-9, -60],\n            [-40, -55],\n            [-10, 41],\n            [-12, 86],\n            [-15, 131],\n            [13, 82],\n            [23, 35],\n            [2, 28],\n            [43, 13],\n            [50, 75],\n            [47, 60],\n            [50, 48],\n            [23, 83],\n            [-34, -5],\n            [-17, -49],\n            [-70, -65],\n            [-23, 73],\n            [-72, -20],\n            [-69, -99],\n            [23, -36],\n            [-62, -16],\n            [-43, -6],\n            [2, 43],\n            [-43, 9],\n            [-35, -29],\n            [-85, 10],\n            [-91, -18],\n            [-90, -115],\n            [-106, -139],\n            [43, -8],\n            [14, -37],\n            [27, -13],\n            [18, 30],\n            [30, -4],\n            [40, -65],\n            [1, -50],\n            [-21, -59],\n            [-3, -71],\n            [-12, -94],\n            [-42, -86],\n            [-9, -41],\n            [-38, -69],\n            [-38, -68],\n            [-18, -35],\n            [-37, -34],\n            [-17, -1],\n            [-17, 29],\n            [-38, -44],\n            [-4, -19]\n        ],\n        [\n            [6363, 7799],\n            [-12, -35],\n            [-27, -10],\n            [-28, -61],\n            [25, -56],\n            [-2, -40],\n            [30, -70]\n        ],\n        [\n            [6109, 7624],\n            [-35, 49],\n            [-32, 23],\n            [-24, 34],\n            [20, 10],\n            [23, 49],\n            [-15, 24],\n            [41, 24],\n            [-1, 13],\n            [-25, -10]\n        ],\n        [\n            [6061, 7840],\n            [1, 26],\n            [14, 17],\n            [27, 4],\n            [5, 20],\n            [-7, 33],\n            [12, 30],\n            [-1, 18],\n            [-41, 19],\n            [-16, -1],\n            [-17, 28],\n            [-21, -9],\n            [-35, 20],\n            [0, 12],\n            [-10, 26],\n            [-22, 3],\n            [-2, 18],\n            [7, 12],\n            [-18, 33],\n            [-29, -5],\n            [-8, 3],\n            [-7, -14],\n            [-11, 3]\n        ],\n        [\n            [5777, 8571],\n            [31, 33],\n            [-29, 28]\n        ],\n        [\n            [5863, 9167],\n            [29, 20],\n            [46, -35],\n            [76, -14],\n            [105, -67],\n            [21, -28],\n            [2, -40],\n            [-31, -31],\n            [-45, -15],\n            [-124, 44],\n            [-21, -7],\n            [45, -43],\n            [2, -28],\n            [2, -60],\n            [36, -18],\n            [22, -15],\n            [3, 28],\n            [-17, 26],\n            [18, 22],\n            [67, -37],\n            [24, 15],\n            [-19, 43],\n            [65, 58],\n            [25, -4],\n            [26, -20],\n            [16, 40],\n            [-23, 35],\n            [14, 36],\n            [-21, 36],\n            [78, -18],\n            [16, -34],\n            [-35, -7],\n            [0, -33],\n            [22, -20],\n            [43, 13],\n            [7, 38],\n            [58, 28],\n            [97, 50],\n            [20, -3],\n            [-27, -35],\n            [35, -7],\n            [19, 21],\n            [52, 1],\n            [42, 25],\n            [31, -36],\n            [32, 39],\n            [-29, 35],\n            [14, 19],\n            [82, -18],\n            [39, -18],\n            [100, -68],\n            [19, 31],\n            [-28, 31],\n            [-1, 13],\n            [-34, 6],\n            [10, 28],\n            [-15, 46],\n            [-1, 19],\n            [51, 53],\n            [18, 54],\n            [21, 11],\n            [74, -15],\n            [5, -33],\n            [-26, -48],\n            [17, -19],\n            [9, -41],\n            [-6, -81],\n            [31, -36],\n            [-12, -40],\n            [-55, -84],\n            [32, -8],\n            [11, 21],\n            [31, 15],\n            [7, 29],\n            [24, 29],\n            [-16, 33],\n            [13, 39],\n            [-31, 5],\n            [-6, 33],\n            [22, 59],\n            [-36, 48],\n            [50, 40],\n            [-7, 42],\n            [14, 2],\n            [15, -33],\n            [-11, -57],\n            [29, -11],\n            [-12, 43],\n            [46, 23],\n            [58, 3],\n            [51, -34],\n            [-25, 49],\n            [-2, 63],\n            [48, 12],\n            [67, -2],\n            [60, 7],\n            [-23, 31],\n            [33, 39],\n            [31, 2],\n            [54, 29],\n            [74, 8],\n            [9, 16],\n            [73, 6],\n            [23, -14],\n            [62, 32],\n            [51, -1],\n            [8, 25],\n            [26, 25],\n            [66, 25],\n            [48, -19],\n            [-38, -15],\n            [63, -9],\n            [7, -29],\n            [25, 14],\n            [82, -1],\n            [62, -29],\n            [23, -22],\n            [-7, -30],\n            [-31, -18],\n            [-73, -33],\n            [-21, -17],\n            [35, -8],\n            [41, -15],\n            [25, 11],\n            [14, -38],\n            [12, 15],\n            [44, 10],\n            [90, -10],\n            [6, -28],\n            [116, -9],\n            [2, 46],\n            [59, -11],\n            [44, 1],\n            [45, -32],\n            [13, -37],\n            [-17, -25],\n            [35, -47],\n            [44, -24],\n            [27, 62],\n            [44, -26],\n            [48, 16],\n            [53, -18],\n            [21, 16],\n            [45, -8],\n            [-20, 55],\n            [37, 25],\n            [251, -38],\n            [24, -35],\n            [72, -45],\n            [112, 11],\n            [56, -10],\n            [23, -24],\n            [-4, -44],\n            [35, -16],\n            [37, 12],\n            [49, 1],\n            [52, -11],\n            [53, 6],\n            [49, -52],\n            [34, 19],\n            [-23, 37],\n            [13, 27],\n            [88, -17],\n            [58, 4],\n            [80, -29],\n            [-9960, -25]\n        ],\n        [\n            [7918, 9684],\n            [-157, -23],\n            [51, 77],\n            [23, 7],\n            [21, -4],\n            [70, -33],\n            [-8, -24]\n        ],\n        [\n            [6420, 9816],\n            [-37, -8],\n            [-25, -4],\n            [-4, -10],\n            [-33, -10],\n            [-30, 14],\n            [16, 19],\n            [-62, 2],\n            [54, 10],\n            [43, 1],\n            [5, -16],\n            [16, 14],\n            [26, 10],\n            [42, -13],\n            [-11, -9]\n        ],\n        [\n            [7775, 9718],\n            [-60, -8],\n            [-78, 17],\n            [-46, 23],\n            [-21, 42],\n            [-38, 12],\n            [72, 40],\n            [60, 14],\n            [54, -30],\n            [64, -57],\n            [-7, -53]\n        ],\n        [\n            [5844, 4990],\n            [11, -33],\n            [-1, -35],\n            [-8, -7]\n        ],\n        [\n            [5821, 4978],\n            [7, -6],\n            [16, 18]\n        ],\n        [\n            [4526, 6298],\n            [1, 25]\n        ],\n        [\n            [6188, 6023],\n            [-4, 26],\n            [-8, 17],\n            [-2, 24],\n            [-15, 21],\n            [-15, 50],\n            [-7, 48],\n            [-20, 40],\n            [-12, 10],\n            [-18, 56],\n            [-4, 41],\n            [2, 35],\n            [-16, 66],\n            [-13, 23],\n            [-15, 12],\n            [-10, 34],\n            [2, 13],\n            [-8, 31],\n            [-8, 13],\n            [-11, 44],\n            [-17, 48],\n            [-14, 40],\n            [-14, 0],\n            [5, 33],\n            [1, 20],\n            [3, 24]\n        ],\n        [\n            [6344, 6744],\n            [11, -51],\n            [14, -13],\n            [5, -21],\n            [18, -25],\n            [2, -24],\n            [-3, -20],\n            [4, -20],\n            [8, -16],\n            [4, -20],\n            [4, -14]\n        ],\n        [\n            [6427, 6512],\n            [5, -22]\n        ],\n        [\n            [6444, 6180],\n            [-80, -23],\n            [-26, -26],\n            [-20, -62],\n            [-13, -10],\n            [-7, 20],\n            [-11, -3],\n            [-27, 6],\n            [-5, 5],\n            [-32, -1],\n            [-7, -5],\n            [-12, 15],\n            [-7, -29],\n            [3, -25],\n            [-12, -19]\n        ],\n        [\n            [5943, 5617],\n            [-4, 1],\n            [0, 29],\n            [-3, 20],\n            [-14, 24],\n            [-4, 42],\n            [4, 44],\n            [-13, 4],\n            [-2, -13],\n            [-17, -3],\n            [7, -17],\n            [2, -36],\n            [-15, -32],\n            [-14, -43],\n            [-14, -6],\n            [-23, 34],\n            [-11, -12],\n            [-3, -17],\n            [-14, -11],\n            [-1, -12],\n            [-28, 0],\n            [-3, 12],\n            [-20, 2],\n            [-10, -10],\n            [-8, 5],\n            [-14, 34],\n            [-5, 17],\n            [-20, -9],\n            [-8, -27],\n            [-7, -53],\n            [-10, -11],\n            [-8, -6]\n        ],\n        [\n            [5663, 5567],\n            [-2, 2]\n        ],\n        [\n            [5635, 5716],\n            [0, 14],\n            [-10, 17],\n            [-1, 35],\n            [-5, 23],\n            [-10, -4],\n            [3, 22],\n            [7, 25],\n            [-3, 24],\n            [9, 18],\n            [-6, 14],\n            [7, 36],\n            [13, 44],\n            [24, -4],\n            [-1, 234]\n        ],\n        [\n            [6023, 6357],\n            [9, -58],\n            [-6, -10],\n            [4, -61],\n            [11, -71],\n            [10, -14],\n            [15, -22]\n        ],\n        [\n            [5943, 5624],\n            [0, -7]\n        ],\n        [\n            [5943, 5617],\n            [0, -46]\n        ],\n        [\n            [5944, 5309],\n            [-17, -28],\n            [-20, 1],\n            [-22, -14],\n            [-18, 13],\n            [-11, -16]\n        ],\n        [\n            [5682, 5544],\n            [-19, 23]\n        ],\n        [\n            [4535, 5861],\n            [-11, 46],\n            [-14, 21],\n            [12, 11],\n            [14, 41],\n            [6, 31]\n        ],\n        [\n            [4536, 5789],\n            [-4, 45]\n        ],\n        [\n            [9502, 4438],\n            [8, -20],\n            [-19, 0],\n            [-11, 37],\n            [17, -15],\n            [5, -2]\n        ],\n        [\n            [9467, 4474],\n            [-11, -1],\n            [-17, 6],\n            [-5, 9],\n            [1, 23],\n            [19, -9],\n            [9, -12],\n            [4, -16]\n        ],\n        [\n            [9490, 4490],\n            [-4, -11],\n            [-21, 52],\n            [-5, 35],\n            [9, 0],\n            [10, -47],\n            [11, -29]\n        ],\n        [\n            [9440, 4565],\n            [1, -12],\n            [-22, 25],\n            [-15, 21],\n            [-10, 20],\n            [4, 6],\n            [13, -14],\n            [23, -27],\n            [6, -19]\n        ],\n        [\n            [9375, 4623],\n            [-5, -3],\n            [-13, 14],\n            [-11, 24],\n            [1, 10],\n            [17, -25],\n            [11, -20]\n        ],\n        [\n            [4682, 5458],\n            [-8, 5],\n            [-20, 24],\n            [-14, 31],\n            [-5, 22],\n            [-3, 43]\n        ],\n        [\n            [2561, 5848],\n            [-3, -14],\n            [-16, 1],\n            [-10, 6],\n            [-12, 12],\n            [-15, 3],\n            [-8, 13]\n        ],\n        [\n            [6198, 5735],\n            [9, -11],\n            [5, -25],\n            [13, -24],\n            [14, -1],\n            [26, 16],\n            [30, 7],\n            [25, 18],\n            [13, 4],\n            [10, 11],\n            [16, 2]\n        ],\n        [\n            [6359, 5732],\n            [0, -1],\n            [0, -25],\n            [0, -59],\n            [0, -31],\n            [-13, -36],\n            [-19, -50]\n        ],\n        [\n            [6359, 5732],\n            [9, 1],\n            [13, 9],\n            [14, 6],\n            [14, 20],\n            [10, 0],\n            [1, -16],\n            [-3, -35],\n            [0, -31],\n            [-6, -21],\n            [-7, -64],\n            [-14, -66],\n            [-17, -75],\n            [-24, -87],\n            [-23, -66],\n            [-33, -81],\n            [-28, -48],\n            [-42, -58],\n            [-25, -45],\n            [-31, -72],\n            [-6, -31],\n            [-6, -14]\n        ],\n        [\n            [3412, 5410],\n            [34, -11],\n            [2, 10],\n            [23, 4],\n            [30, -15]\n        ],\n        [\n            [3489, 5306],\n            [10, -35],\n            [-4, -25]\n        ],\n        [\n            [5626, 7957],\n            [-8, -15],\n            [-5, -24]\n        ],\n        [\n            [5380, 7746],\n            [7, 5]\n        ],\n        [\n            [5663, 8957],\n            [-47, -17],\n            [-27, -41],\n            [4, -36],\n            [-44, -48],\n            [-54, -50],\n            [-20, -84],\n            [20, -41],\n            [26, -33],\n            [-25, -67],\n            [-29, -14],\n            [-11, -99],\n            [-15, -55],\n            [-34, 6],\n            [-16, -47],\n            [-32, -3],\n            [-9, 56],\n            [-23, 67],\n            [-21, 84]\n        ],\n        [\n            [5890, 3478],\n            [-5, -26],\n            [-17, -6],\n            [-16, 32],\n            [0, 20],\n            [7, 22],\n            [3, 17],\n            [8, 5],\n            [14, -11]\n        ],\n        [\n            [5999, 7104],\n            [-2, 45],\n            [7, 25]\n        ],\n        [\n            [6004, 7174],\n            [7, 13],\n            [7, 13],\n            [2, 33],\n            [9, -12],\n            [31, 17],\n            [14, -12],\n            [23, 1],\n            [32, 22],\n            [15, -1],\n            [32, 9]\n        ],\n        [\n            [5051, 5420],\n            [-22, -12]\n        ],\n        [\n            [7849, 5777],\n            [-25, 28],\n            [-24, -2],\n            [4, 47],\n            [-24, 0],\n            [-2, -65],\n            [-15, -87],\n            [-10, -52],\n            [2, -43],\n            [18, -2],\n            [12, -53],\n            [5, -52],\n            [15, -33],\n            [17, -7],\n            [14, -31]\n        ],\n        [\n            [7779, 5439],\n            [-11, 23],\n            [-4, 29],\n            [-15, 34],\n            [-14, 28],\n            [-4, -35],\n            [-5, 33],\n            [3, 37],\n            [8, 56]\n        ],\n        [\n            [6883, 7252],\n            [16, 60],\n            [-6, 44],\n            [-20, 14],\n            [7, 26],\n            [23, -3],\n            [13, 33],\n            [9, 38],\n            [37, 13],\n            [-6, -27],\n            [4, -17],\n            [12, 2]\n        ],\n        [\n            [6497, 7255],\n            [-5, 42],\n            [4, 62],\n            [-22, 20],\n            [8, 40],\n            [-19, 4],\n            [6, 49],\n            [26, -14],\n            [25, 19],\n            [-20, 35],\n            [-8, 34],\n            [-23, -15],\n            [-3, -43],\n            [-8, 38]\n        ],\n        [\n            [6554, 7498],\n            [31, 1],\n            [-4, 29],\n            [24, 21],\n            [23, 34],\n            [37, -31],\n            [3, -47],\n            [11, -12],\n            [30, 2],\n            [9, -10],\n            [14, -61],\n            [32, -41],\n            [18, -28],\n            [29, -29],\n            [37, -25],\n            [-1, -36]\n        ],\n        [\n            [8471, 4532],\n            [3, 14],\n            [24, 13],\n            [19, 2],\n            [9, 8],\n            [10, -8],\n            [-10, -16],\n            [-29, -25],\n            [-23, -17]\n        ],\n        [\n            [3286, 5693],\n            [16, 8],\n            [6, -2],\n            [-1, -44],\n            [-23, -7],\n            [-5, 6],\n            [8, 16],\n            [-1, 23]\n        ],\n        [\n            [5233, 7240],\n            [31, 24],\n            [19, -7],\n            [-1, -30],\n            [24, 22],\n            [2, -12],\n            [-14, -29],\n            [0, -27],\n            [9, -15],\n            [-3, -51],\n            [-19, -29],\n            [6, -33],\n            [14, -1],\n            [7, -28],\n            [11, -9]\n        ],\n        [\n            [6004, 7174],\n            [-11, 27],\n            [11, 22],\n            [-17, -5],\n            [-23, 13],\n            [-19, -34],\n            [-43, -6],\n            [-22, 31],\n            [-30, 2],\n            [-6, -24],\n            [-20, -7],\n            [-26, 31],\n            [-31, -1],\n            [-16, 59],\n            [-21, 33],\n            [14, 46],\n            [-18, 28],\n            [31, 56],\n            [43, 3],\n            [12, 45],\n            [53, -8],\n            [33, 38],\n            [32, 17],\n            [46, 1],\n            [49, -42],\n            [40, -22],\n            [32, 9],\n            [24, -6],\n            [33, 31]\n        ],\n        [\n            [5777, 7539],\n            [3, -23],\n            [25, -19],\n            [-5, -14],\n            [-33, -3],\n            [-12, -19],\n            [-23, -31],\n            [-9, 27],\n            [0, 12]\n        ],\n        [\n            [8382, 6499],\n            [-17, -95],\n            [-12, -49],\n            [-14, 50],\n            [-4, 44],\n            [17, 58],\n            [22, 45],\n            [13, -18],\n            [-5, -35]\n        ],\n        [\n            [6088, 4781],\n            [-12, -73],\n            [1, -33],\n            [18, -22],\n            [1, -15],\n            [-8, -36],\n            [2, -18],\n            [-2, -28],\n            [10, -37],\n            [11, -58],\n            [10, -13]\n        ],\n        [\n            [5909, 4512],\n            [-15, 18],\n            [-18, 10],\n            [-11, 10],\n            [-12, 15]\n        ],\n        [\n            [5844, 4990],\n            [10, 8],\n            [31, -1],\n            [56, 4]\n        ],\n        [\n            [6061, 7840],\n            [-22, -5],\n            [-18, -19],\n            [-26, -3],\n            [-24, -22],\n            [1, -37],\n            [14, -14],\n            [28, 4],\n            [-5, -21],\n            [-31, -11],\n            [-37, -34],\n            [-16, 12],\n            [6, 28],\n            [-30, 17],\n            [5, 12],\n            [26, 19],\n            [-8, 14],\n            [-43, 15],\n            [-2, 22],\n            [-25, -8],\n            [-11, -32],\n            [-21, -44]\n        ],\n        [\n            [3517, 3063],\n            [-12, -38],\n            [-31, -32],\n            [-21, 11],\n            [-15, -6],\n            [-26, 25],\n            [-18, -1],\n            [-17, 32]\n        ],\n        [\n            [679, 6185],\n            [-4, -10],\n            [-7, 8],\n            [1, 17],\n            [-4, 21],\n            [1, 7],\n            [5, 10],\n            [-2, 11],\n            [1, 6],\n            [3, -1],\n            [10, -10],\n            [5, -5],\n            [5, -8],\n            [7, -21],\n            [-1, -3],\n            [-11, -13],\n            [-9, -9]\n        ],\n        [\n            [664, 6277],\n            [-9, -4],\n            [-5, 12],\n            [-3, 5],\n            [0, 4],\n            [3, 5],\n            [9, -6],\n            [8, -9],\n            [-3, -7]\n        ],\n        [\n            [646, 6309],\n            [-1, -7],\n            [-15, 2],\n            [2, 7],\n            [14, -2]\n        ],\n        [\n            [621, 6317],\n            [-2, -3],\n            [-2, 1],\n            [-9, 2],\n            [-4, 13],\n            [-1, 2],\n            [7, 8],\n            [3, -3],\n            [8, -20]\n        ],\n        [\n            [574, 6356],\n            [-4, -6],\n            [-9, 11],\n            [1, 4],\n            [5, 6],\n            [6, -1],\n            [1, -14]\n        ],\n        [\n            [3135, 7724],\n            [5, -19],\n            [-30, -29],\n            [-29, -20],\n            [-29, -18],\n            [-15, -35],\n            [-4, -13],\n            [-1, -31],\n            [10, -32],\n            [11, -1],\n            [-3, 21],\n            [8, -13],\n            [-2, -17],\n            [-19, -9],\n            [-13, 1],\n            [-20, -10],\n            [-12, -3],\n            [-17, -3],\n            [-23, -17],\n            [41, 11],\n            [8, -11],\n            [-39, -18],\n            [-17, 0],\n            [0, 7],\n            [-8, -16],\n            [8, -3],\n            [-6, -43],\n            [-20, -45],\n            [-2, 15],\n            [-6, 3],\n            [-9, 15],\n            [5, -32],\n            [7, -10],\n            [1, -23],\n            [-9, -23],\n            [-16, -47],\n            [-2, 3],\n            [8, 40],\n            [-14, 22],\n            [-3, 49],\n            [-5, -25],\n            [5, -38],\n            [-18, 10],\n            [19, -19],\n            [1, -57],\n            [8, -4],\n            [3, -20],\n            [4, -59],\n            [-17, -44],\n            [-29, -18],\n            [-18, -34],\n            [-14, -4],\n            [-14, -22],\n            [-4, -20],\n            [-31, -38],\n            [-16, -28],\n            [-13, -35],\n            [-4, -42],\n            [5, -41],\n            [9, -51],\n            [13, -41],\n            [0, -26],\n            [13, -69],\n            [-1, -39],\n            [-1, -23],\n            [-7, -36],\n            [-8, -8],\n            [-14, 7],\n            [-4, 26],\n            [-11, 14],\n            [-15, 51],\n            [-13, 45],\n            [-4, 23],\n            [6, 39],\n            [-8, 33],\n            [-22, 49],\n            [-10, 9],\n            [-28, -27],\n            [-5, 3],\n            [-14, 28],\n            [-17, 14],\n            [-32, -7],\n            [-24, 7],\n            [-21, -5],\n            [-12, -9],\n            [5, -15],\n            [0, -24],\n            [5, -12],\n            [-5, -8],\n            [-10, 9],\n            [-11, -11],\n            [-20, 2],\n            [-20, 31],\n            [-25, -8],\n            [-20, 14],\n            [-17, -4],\n            [-24, -14],\n            [-25, -44],\n            [-27, -25],\n            [-16, -28],\n            [-6, -27],\n            [0, -41],\n            [1, -28],\n            [5, -20]\n        ],\n        [\n            [1746, 6980],\n            [-4, 30],\n            [-18, 34],\n            [-13, 7],\n            [-3, 17],\n            [-16, 3],\n            [-10, 16],\n            [-26, 6],\n            [-7, 9],\n            [-3, 32],\n            [-27, 60],\n            [-23, 82],\n            [1, 14],\n            [-13, 19],\n            [-21, 50],\n            [-4, 48],\n            [-15, 32],\n            [6, 49],\n            [-1, 51],\n            [-8, 45],\n            [10, 56],\n            [4, 53],\n            [3, 54],\n            [-5, 79],\n            [-9, 51],\n            [-8, 27],\n            [4, 12],\n            [40, -20],\n            [15, -56],\n            [7, 15],\n            [-5, 49],\n            [-9, 48]\n        ],\n        [\n            [750, 8432],\n            [-28, -23],\n            [-14, 15],\n            [-4, 28],\n            [25, 21],\n            [15, 9],\n            [18, -4],\n            [12, -18],\n            [-24, -28]\n        ],\n        [\n            [401, 8597],\n            [-18, -9],\n            [-18, 11],\n            [-17, 16],\n            [28, 10],\n            [22, -6],\n            [3, -22]\n        ],\n        [\n            [230, 8826],\n            [17, -12],\n            [17, 6],\n            [23, -15],\n            [27, -8],\n            [-2, -7],\n            [-21, -12],\n            [-21, 13],\n            [-11, 11],\n            [-24, -4],\n            [-7, 5],\n            [2, 23]\n        ],\n        [\n            [1374, 8295],\n            [-15, 22],\n            [-25, 19],\n            [-8, 52],\n            [-36, 47],\n            [-15, 56],\n            [-26, 4],\n            [-44, 2],\n            [-33, 17],\n            [-57, 61],\n            [-27, 11],\n            [-49, 21],\n            [-38, -5],\n            [-55, 27],\n            [-33, 25],\n            [-30, -12],\n            [5, -41],\n            [-15, -4],\n            [-32, -12],\n            [-25, -20],\n            [-30, -13],\n            [-4, 35],\n            [12, 58],\n            [30, 18],\n            [-8, 15],\n            [-35, -33],\n            [-19, -39],\n            [-40, -42],\n            [20, -29],\n            [-26, -42],\n            [-30, -25],\n            [-28, -18],\n            [-7, -26],\n            [-43, -31],\n            [-9, -28],\n            [-32, -25],\n            [-20, 5],\n            [-25, -17],\n            [-29, -20],\n            [-23, -20],\n            [-47, -16],\n            [-5, 9],\n            [31, 28],\n            [27, 18],\n            [29, 33],\n            [35, 6],\n            [14, 25],\n            [38, 35],\n            [6, 12],\n            [21, 21],\n            [5, 44],\n            [14, 35],\n            [-32, -18],\n            [-9, 11],\n            [-15, -22],\n            [-18, 30],\n            [-8, -21],\n            [-10, 29],\n            [-28, -23],\n            [-17, 0],\n            [-3, 35],\n            [5, 21],\n            [-17, 22],\n            [-37, -12],\n            [-23, 28],\n            [-19, 14],\n            [0, 34],\n            [-22, 25],\n            [11, 34],\n            [23, 33],\n            [10, 30],\n            [22, 4],\n            [19, -9],\n            [23, 28],\n            [20, -5],\n            [21, 19],\n            [-5, 27],\n            [-16, 10],\n            [21, 23],\n            [-17, -1],\n            [-30, -13],\n            [-8, -13],\n            [-22, 13],\n            [-39, -6],\n            [-41, 14],\n            [-12, 24],\n            [-35, 34],\n            [39, 25],\n            [62, 29],\n            [23, 0],\n            [-4, -30],\n            [59, 2],\n            [-23, 37],\n            [-34, 23],\n            [-20, 29],\n            [-26, 25],\n            [-38, 19],\n            [15, 31],\n            [49, 2],\n            [35, 27],\n            [7, 29],\n            [28, 28],\n            [28, 6],\n            [52, 27],\n            [26, -4],\n            [42, 31],\n            [42, -12],\n            [21, -27],\n            [12, 11],\n            [47, -3],\n            [-2, -14],\n            [43, -10],\n            [28, 6],\n            [59, -18],\n            [53, -6],\n            [21, -8],\n            [37, 10],\n            [42, -18],\n            [31, -8]\n        ],\n        [\n            [3018, 5753],\n            [-1, -14],\n            [-16, -7],\n            [9, -26],\n            [0, -31],\n            [-12, -35],\n            [10, -47],\n            [12, 4],\n            [6, 43],\n            [-8, 21],\n            [-2, 45],\n            [35, 24],\n            [-4, 27],\n            [10, 19],\n            [10, -41],\n            [19, -1],\n            [18, -33],\n            [1, -20],\n            [25, 0],\n            [30, 6],\n            [16, -27],\n            [21, -7],\n            [16, 18],\n            [0, 15],\n            [34, 4],\n            [34, 1],\n            [-24, -18],\n            [10, -28],\n            [22, -4],\n            [21, -29],\n            [4, -48],\n            [15, 2],\n            [11, -14]\n        ],\n        [\n            [8001, 6331],\n            [-37, -51],\n            [-24, -56],\n            [-6, -41],\n            [22, -62],\n            [25, -77],\n            [26, -37],\n            [17, -47],\n            [12, -109],\n            [-3, -104],\n            [-24, -39],\n            [-31, -38],\n            [-23, -49],\n            [-35, -55],\n            [-10, 37],\n            [8, 40],\n            [-21, 34]\n        ],\n        [\n            [9661, 4085],\n            [-9, -8],\n            [-9, 26],\n            [1, 16],\n            [17, -34]\n        ],\n        [\n            [9641, 4175],\n            [4, -47],\n            [-7, 7],\n            [-6, -3],\n            [-4, 16],\n            [0, 45],\n            [13, -18]\n        ],\n        [\n            [6475, 6041],\n            [-21, -16],\n            [-5, -26],\n            [-1, -20],\n            [-27, -25],\n            [-45, -28],\n            [-24, -41],\n            [-13, -3],\n            [-8, 3],\n            [-16, -25],\n            [-18, -11],\n            [-23, -3],\n            [-7, -3],\n            [-6, -16],\n            [-8, -4],\n            [-4, -15],\n            [-14, 1],\n            [-9, -8],\n            [-19, 3],\n            [-7, 35],\n            [1, 32],\n            [-5, 17],\n            [-5, 44],\n            [-8, 24],\n            [5, 3],\n            [-2, 27],\n            [3, 12],\n            [-1, 25]\n        ],\n        [\n            [5817, 3752],\n            [11, 0],\n            [14, -10],\n            [9, 7],\n            [15, -6]\n        ],\n        [\n            [5911, 3478],\n            [-7, -43],\n            [-3, -49],\n            [-7, -27],\n            [-19, -30],\n            [-5, -8],\n            [-12, -30],\n            [-8, -31],\n            [-16, -42],\n            [-31, -61],\n            [-20, -36],\n            [-21, -26],\n            [-29, -23],\n            [-14, -3],\n            [-3, -17],\n            [-17, 9],\n            [-14, -11],\n            [-30, 11],\n            [-17, -7],\n            [-12, 3],\n            [-28, -23],\n            [-24, -10],\n            [-17, -22],\n            [-13, -1],\n            [-11, 21],\n            [-10, 1],\n            [-12, 26],\n            [-1, -8],\n            [-4, 16],\n            [0, 34],\n            [-9, 40],\n            [9, 11],\n            [0, 45],\n            [-19, 55],\n            [-14, 50],\n            [0, 1],\n            [-20, 76]\n        ],\n        [\n            [5840, 4141],\n            [-21, -8],\n            [-15, -23],\n            [-4, -21],\n            [-10, -4],\n            [-24, -49],\n            [-15, -38],\n            [-10, -2],\n            [-9, 7],\n            [-31, 7]\n        ]\n    ],\n    \"transform\": {\n        \"scale\": [0.036003600360036005, 0.016927109510951093],\n        \"translate\": [-180, -85.609038]\n    }\n}\n;\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  //convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  //add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data) {\n    var svg = this.svg;\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        //if it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          //if ( !data ) return '';\n          return options.popupTemplate(d, data);\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        //add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // expose library\n  if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", function(require) { d3 = require('d3'); topojson = require('topojson'); return Datamap; } );\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/dist/datamaps.all.js\n// module id = 304\n// module chunks = 22"],"sourceRoot":""}